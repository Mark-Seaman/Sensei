[
    {
        "fields": {
            "expected": "no output",
            "name": "vc-pull",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 1
    },
    {
        "fields": {
            "expected": "no output",
            "name": "vc-status",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 2
    },
    {
        "fields": {
            "expected": "Work Activities\n    * These activities are critical to successful work.\n    * Balance the four activities for the best outcomes.\n    * This is a second paragraph\n    * of text.\n    Learn\n        * create deeper understanding of problem\n        * evaluate solution\n\n    Plan\n        * past history\n        * present tasks\n        * future priorities\n\n    Build\n        fix\n            list of known problems\n\n            issue tracking\n\n        test\n            test inventory\n\n            tests needed\n\n        extend\n\n        improve\n\n    Teach\n        * share what you know\n        * invite review\n",
            "name": "text-format",
            "output": "Work Activities\n    * These activities are critical to successful work.\n    * Balance the four activities for the best outcomes.\n    * This is a second paragraph\n    * of text.\n    Learn\n        * create deeper understanding of problem\n        * evaluate solution\n\n    Plan\n        * past history\n        * present tasks\n        * future priorities\n\n    Build\n        fix\n            list of known problems\n\n            issue tracking\n\n        test\n            test inventory\n\n            tests needed\n\n        extend\n\n        improve\n\n    Teach\n        * share what you know\n        * invite review\n"
        },
        "model": "tool.test",
        "pk": 3
    },
    {
        "fields": {
            "expected": "text_command\ntext_help\nfind_agents\nfind_anchors\nfind_classes\nfind_functions\nfind_links\nfind_quotes\nfind_signatures\nfind_urls\nmarkdown_list_links\nmarkdown_list_string\ntext_join\ntext_lines\ntext_match\ntext_no_match\ntext_outline\ntext_outline_string\ntext_markdown\ntext_replace\ntext_title\ntext_body\nmatch_lines\nmatch_pattern\ntransform_matches",
            "name": "text-functions",
            "output": "text_command\ntext_help\nfind_agents\nfind_anchors\nfind_classes\nfind_functions\nfind_links\nfind_quotes\nfind_signatures\nfind_urls\nmarkdown_list_links\nmarkdown_list_string\ntext_join\ntext_lines\ntext_match\ntext_no_match\ntext_outline\ntext_outline_string\ntext_markdown\ntext_replace\ntext_title\ntext_body\nmatch_lines\nmatch_pattern\ntransform_matches"
        },
        "model": "tool.test",
        "pk": 4
    },
    {
        "fields": {
            "expected": "\n        text Command\n\n        usage: x text COMMAND\n\n        COMMAND:\n\n            match - show lines that match\n            no_match - show lines that don't match\n            replace - replace lines\n            select - pattern matching in doc\n\n        \n",
            "name": "text-help",
            "output": "\n        text Command\n\n        usage: x text COMMAND\n\n        COMMAND:\n\n            match - show lines that match\n            no_match - show lines that don't match\n            replace - replace lines\n            select - pattern matching in doc\n\n        \n"
        },
        "model": "tool.test",
        "pk": 5
    },
    {
        "fields": {
            "expected": "# Work Activities\n\nThese activities are critical to successful work.\nBalance the four activities for the best outcomes.\n\nThis is a second paragraph\nof text.\n\n## Learn\n\ncreate deeper understanding of problem\nevaluate solution\n\n## Plan\n\npast history\npresent tasks\nfuture priorities\n\n## Build\n\n### fix\n\n#### list of known problems\n\n#### issue tracking\n\n### test\n\n#### test inventory\n\n#### tests needed\n\n### extend\n\n### improve\n\n## Teach\n\nshare what you know\ninvite review\n",
            "name": "text-markdown",
            "output": "# Work Activities\n\nThese activities are critical to successful work.\nBalance the four activities for the best outcomes.\n\nThis is a second paragraph\nof text.\n\n## Learn\n\ncreate deeper understanding of problem\nevaluate solution\n\n## Plan\n\npast history\npresent tasks\nfuture priorities\n\n## Build\n\n### fix\n\n#### list of known problems\n\n#### issue tracking\n\n### test\n\n#### test inventory\n\n#### tests needed\n\n### extend\n\n### improve\n\n## Teach\n\nshare what you know\ninvite review\n"
        },
        "model": "tool.test",
        "pk": 6
    },
    {
        "fields": {
            "expected": "shell(x text match def mybook/mybook_views.py) --> 2 lines (should be between 12 and 15)",
            "name": "text-match",
            "output": "shell(x text match def mybook/mybook_views.py) --> 2 lines (should be between 12 and 15)"
        },
        "model": "tool.test",
        "pk": 7
    },
    {
        "fields": {
            "expected": "no output",
            "name": "text-no-match",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 8
    },
    {
        "fields": {
            "expected": "[['Work Activities', [['Learn', [], ['create deeper understanding of problem', 'evaluate solution', '']], ['Plan', [], ['past history', 'present tasks', 'future priorities', '']], ['Build', [['fix', [['list of known problems', [], []], ['issue tracking', [], []]], []], ['test', [['test inventory', [], []], ['tests needed', [], []]], []], ['extend', [], []], ['improve', [], ['']]], []], ['Teach', [], ['share what you know', 'invite review', '', '    ']]], ['', 'These activities are critical to successful work.', 'Balance the four activities for the best outcomes.', '', 'This is a second paragraph', 'of text.', '']]]",
            "name": "text-outline",
            "output": "[['Work Activities', [['Learn', [], ['create deeper understanding of problem', 'evaluate solution', '']], ['Plan', [], ['past history', 'present tasks', 'future priorities', '']], ['Build', [['fix', [['list of known problems', [], []], ['issue tracking', [], []]], []], ['test', [['test inventory', [], []], ['tests needed', [], []]], []], ['extend', [], []], ['improve', [], ['']]], []], ['Teach', [], ['share what you know', 'invite review', '', '    ']]], ['', 'These activities are critical to successful work.', 'Balance the four activities for the best outcomes.', '', 'This is a second paragraph', 'of text.', '']]]"
        },
        "model": "tool.test",
        "pk": 9
    },
    {
        "fields": {
            "expected": "0a1\n> \n10d10\n< \n15d14\n< \n21d19\n< \n23d20\n< \n25d21\n< \n27d22\n< \n29d23\n< \n31d24\n< \n33d25\n< \n35d26\n< \n39d29\n< \n42a33\n>     \n",
            "name": "text-round-trip",
            "output": "0a1\n> \n10d10\n< \n15d14\n< \n21d19\n< \n23d20\n< \n25d21\n< \n27d22\n< \n29d23\n< \n31d24\n< \n33d25\n< \n35d26\n< \n39d29\n< \n42a33\n>     \n"
        },
        "model": "tool.test",
        "pk": 10
    },
    {
        "fields": {
            "expected": "bin/__init__.py\n    \nbin/app.py\n    \nbin/booknotes.py\n    \nbin/chapter.py\n    \nbin/data.py\n    \nbin/days.py\n    \nbin/diagrams.py\n    \nbin/doc.py\n    \nbin/files.py\n    \nbin/hourly.py\n    \nbin/hours.py\n    \nbin/i.py\n    \nbin/life.py\n    \nbin/log.py\n    \nbin/music.py\n    \nbin/n.py\n    \nbin/ntsh.py\n    \nbin/ops.py\n    \nbin/resize.py\n    \nbin/shell.py\n    \nbin/switches.py\n    \nbin/text.py\n        pattern = r'class (.*)\\(.*\\)'\nbin/todo.py\n    \nbin/tool.py\n    \nbin/user.py\n    \nbin/vc.py\n    \nbin/web.py\n    \nbin/wordpress.py\n    \nbin/x.py\n    \nhammer/__init__.py\n    \nhammer/secret_settings.py\n    \nhammer/settings.py\n    \nhammer/urls.py\n    \nhammer/wsgi.py\n    \nhealth/__init__.py\n    \nhealth/admin.py\n    \nhealth/apps.py\n    class HealthConfig(AppConfig):\nhealth/health.py\n    \nhealth/models.py\n    class HealthScore(models.Model):\nhealth/tests.py\n    \nhealth/urls.py\n    \nhealth/views.py\n    class HealthView(TemplateView):\n    class HealthList(ListView):\n    class HealthEdit(UpdateView):\nlife/__init__.py\n    \nlife/admin.py\n    \nlife/apps.py\n    class LifeConfig(AppConfig):\nlife/life.py\n    \nlife/models.py\n    class Year(models.Model):\n    class Aspect(models.Model):\n    class Experience(models.Model):\nlife/tests.py\n    \nlife/urls.py\n    \nlife/views.py\n    class LifeView(TemplateView):\n    class ExperienceView(ListView):\n    class YearView(ListView):\n    class LifeAdd(LoginRequiredMixin, RedirectView):\n    class LifeEdit(UpdateView):\nmybook/__init__.py\n    \nmybook/admin.py\n    \nmybook/apps.py\n    class MybookConfig(AppConfig):\nmybook/models.py\n    class Author(models.Model):\n    class Book(models.Model):\nmybook/mybook.py\n    \nmybook/mybook_views.py\n    class MyBookDocDisplay(TemplateView):\n    class MyBookPrivateDoc(LoginRequiredMixin, MyBookDocDisplay):\n    class BookNotes(MyBookDocDisplay):\n    class CardView(MyBookDocDisplay):\n    class OutlineView(MyBookDocDisplay):\n    class DailyTask(RedirectView):\n    # class SeamansLog(MyBookDocDisplay):\n    class SeamansLog(RedirectView):\n    class SpiritualSelect(RedirectView):\n    class TabsView(MyBookDocDisplay):\nmybook/outline.py\n    \nmybook/task.py\n    \nmybook/tests.py\n    \nmybook/urls.py\n    \nsensei/__init__.py\n    \nsensei/admin.py\n    \nsensei/apps.py\n    class SenseiConfig(AppConfig):\nsensei/fix.py\n    \nsensei/models.py\n    class Course(models.Model):\n    class Student(models.Model):\n    class Lesson(models.Model):\n    class Requirements(models.Model):\n    class Review(models.Model):\n    class UrlGame(models.Model):\nsensei/review.py\n    \nsensei/sensei.py\n    \nsensei/student.py\n    \nsensei/tests.py\n    \nsensei/urlgame.py\n    \nsensei/urls.py\n    \nsensei/views.py\n    class GuideDoc(TemplateView):\n    class UncDocDisplay(TemplateView):\n    class UncEditReview(UpdateView):\n    class UncReviewFeedback(TemplateView):\n    class UncReading(TemplateView):\n    class UncRegister(FormView):\n        class EditDocForm(Form):\n    class UncRegistered(ListView):\n    class UncReviews(TemplateView):\n    class UncSlidesDisplay(TemplateView):\n    class UncStudent(TemplateView):\n    class UncUrlGameAnswer(FormView):\n        class UrlForm(Form):\n    class UncUrlGameQuestion(TemplateView):\n    class UncUrlGameDone(TemplateView):\nsuperuser/__init__.py\n    \nsuperuser/admin.py\n    \nsuperuser/admin_views.py\n    class AdminView(UserPassesTestMixin, TemplateView):\n    class DatabaseView(UserPassesTestMixin, TemplateView):\n    class DocView(UserPassesTestMixin, TemplateView):\n    class LogView(UserPassesTestMixin, TemplateView):\n    class MaterialView(TemplateView):\n    class SurrogateView(UserPassesTestMixin, TemplateView):\n    class TestView(UserPassesTestMixin, ListView):\n    class UsersView(UserPassesTestMixin, ListView):\nsuperuser/apps.py\n    class AdminConfig(AppConfig):\nsuperuser/initialize.py\n    \nsuperuser/models.py\n    class Administrator(models.Model):\nsuperuser/tests.py\n    \nsuperuser/urls.py\n    \ntasks/__init__.py\n    \ntasks/models.py\n    class Task (models.Model):\ntasks/summary.py\n    \ntasks/task.py\n    \ntasks/urls.py\n    \ntasks/views.py\n    class TaskBase(LoginRequiredMixin, ContextMixin):\n    class TaskDelete(DeleteView):\n    class TaskDetail(DetailView):\n    class TaskCreate(CreateView):\n    class TaskUpdate(TaskBase, UpdateView):\n    class TaskHome(TaskBase, TemplateView):\n    class TaskList(TaskBase, ListView):\n    class MyTime(TaskBase, TemplateView):\n    class TimeSummary(TaskBase, TemplateView):\n    class MissingDays(TaskBase, TemplateView):\n    class TaskImport(RedirectView):\n    class TaskExport(TaskBase, TemplateView):\ntest/__init__.py\n    \ntest/app_test.py\n    \ntest/archive_test.py\n    \ntest/booknotes_test.py\n    \ntest/css_test.py\n    \ntest/data_test.py\n    \ntest/doc_test.py\n    \ntest/health_test.py\n    \ntest/hourly_test.py\n    \ntest/i_test.py\n    \ntest/log_test.py\n    \ntest/ops_test.py\n    \ntest/page_test.py\n    \ntest/robot_test.py\n    \ntest/system_test.py\n    \ntest/text_test.py\n    \ntest/tst_test.py\n    \ntest/unc_test.py\n    \ntest/user_test.py\n    \ntest/vc_test.py\n    \ntest/wordpress_test.py\n    \ntool/__init__.py\n    \ntool/document.py\n    \ntool/domain.py\n    \ntool/email.py\n    \ntool/log.py\n    \ntool/management/__init__.py\n    \ntool/management/commands/__init__.py\n    \ntool/management/commands/scriptor.py\n    class Command(BaseCommand):\ntool/models.py\n    class Test(models.Model):\n    class Page(models.Model):\ntool/notify.py\n    \ntool/page.py\n    \ntool/project.py\n    class ProjectList(ListView):\n    class ProjectDetail(DetailView):\n    class ProjectCreate(CreateView):\n    class ProjectUpdate(UpdateView):\n    class ProjectDelete(DeleteView):\ntool/robot.py\n    \ntool/tst.py\n    \ntool/urls.py\n    \ntool/user.py\n    \ntool/user_views.py\n    class UserList(ListView):\n    class UserCreate(CreateView):\n    class UserDetail(DetailView):\n    class UserEdit(UpdateView):\n    class UserDelete(DeleteView):\n",
            "name": "app-classes",
            "output": "bin/__init__.py\n    \nbin/app.py\n    \nbin/booknotes.py\n    \nbin/chapter.py\n    \nbin/data.py\n    \nbin/days.py\n    \nbin/diagrams.py\n    \nbin/doc.py\n    \nbin/files.py\n    \nbin/hourly.py\n    \nbin/hours.py\n    \nbin/i.py\n    \nbin/life.py\n    \nbin/log.py\n    \nbin/music.py\n    \nbin/ntsh.py\n    \nbin/ops.py\n    \nbin/resize.py\n    \nbin/shell.py\n    \nbin/switches.py\n    \nbin/text.py\n        pattern = r'class (.*)\\(.*\\)'\nbin/todo.py\n    \nbin/tool.py\n    \nbin/user.py\n    \nbin/vc.py\n    \nbin/web.py\n    \nbin/wordpress.py\n    \nbin/x.py\n    \nhammer/__init__.py\n    \nhammer/secret_settings.py\n    \nhammer/settings.py\n    \nhammer/urls.py\n    \nhammer/wsgi.py\n    \nhealth/__init__.py\n    \nhealth/admin.py\n    \nhealth/apps.py\n    class HealthConfig(AppConfig):\nhealth/health.py\n    \nhealth/models.py\n    class HealthScore(models.Model):\nhealth/tests.py\n    \nhealth/urls.py\n    \nhealth/views.py\n    class HealthView(TemplateView):\n    class HealthList(ListView):\n    class HealthEdit(UpdateView):\nlife/__init__.py\n    \nlife/admin.py\n    \nlife/apps.py\n    class LifeConfig(AppConfig):\nlife/life.py\n    \nlife/models.py\n    class Year(models.Model):\n    class Aspect(models.Model):\n    class Experience(models.Model):\nlife/tests.py\n    \nlife/urls.py\n    \nlife/views.py\n    class LifeView(TemplateView):\n    class ExperienceView(ListView):\n    class YearView(ListView):\n    class LifeAdd(LoginRequiredMixin, RedirectView):\n    class LifeEdit(UpdateView):\nmybook/__init__.py\n    \nmybook/admin.py\n    \nmybook/apps.py\n    class MybookConfig(AppConfig):\nmybook/models.py\n    class Author(models.Model):\n    class Book(models.Model):\nmybook/mybook.py\n    \nmybook/mybook_views.py\n    class MyBookDocDisplay(TemplateView):\n    class MyBookPrivateDoc(LoginRequiredMixin, MyBookDocDisplay):\n    class BookNotes(MyBookDocDisplay):\n    class CardView(MyBookDocDisplay):\n    class OutlineView(MyBookDocDisplay):\n    class DailyTask(RedirectView):\n    # class SeamansLog(MyBookDocDisplay):\n    class SeamansLog(RedirectView):\n    class SpiritualSelect(RedirectView):\n    class TabsView(MyBookDocDisplay):\nmybook/outline.py\n    \nmybook/task.py\n    \nmybook/tests.py\n    \nmybook/urls.py\n    \nsensei/__init__.py\n    \nsensei/admin.py\n    \nsensei/apps.py\n    class SenseiConfig(AppConfig):\nsensei/fix.py\n    \nsensei/models.py\n    class Course(models.Model):\n    class Student(models.Model):\n    class Lesson(models.Model):\n    class Requirements(models.Model):\n    class Review(models.Model):\n    class UrlGame(models.Model):\nsensei/review.py\n    \nsensei/sensei.py\n    \nsensei/student.py\n    \nsensei/tests.py\n    \nsensei/urlgame.py\n    \nsensei/urls.py\n    \nsensei/views.py\n    class GuideDoc(TemplateView):\n    class UncDocDisplay(TemplateView):\n    class UncEditReview(UpdateView):\n    class UncReviewFeedback(TemplateView):\n    class UncReading(TemplateView):\n    class UncRegister(FormView):\n        class EditDocForm(Form):\n    class UncRegistered(ListView):\n    class UncReviews(TemplateView):\n    class UncSchedule(TemplateView):\n    class UncSlidesDisplay(TemplateView):\n    class UncStudent(TemplateView):\n    class UncUrlGameAnswer(FormView):\n        class UrlForm(Form):\n    class UncUrlGameQuestion(TemplateView):\n    class UncUrlGameDone(TemplateView):\nsuperuser/__init__.py\n    \nsuperuser/admin.py\n    \nsuperuser/admin_views.py\n    class AdminView(UserPassesTestMixin, TemplateView):\n    class DatabaseView(UserPassesTestMixin, TemplateView):\n    class DocView(UserPassesTestMixin, TemplateView):\n    class LogView(UserPassesTestMixin, TemplateView):\n    class MaterialView(TemplateView):\n    class SurrogateView(UserPassesTestMixin, TemplateView):\n    class TestView(UserPassesTestMixin, ListView):\n    class UsersView(UserPassesTestMixin, ListView):\nsuperuser/apps.py\n    class AdminConfig(AppConfig):\nsuperuser/initialize.py\n    \nsuperuser/models.py\n    class Administrator(models.Model):\nsuperuser/tests.py\n    \nsuperuser/urls.py\n    \ntasks/__init__.py\n    \ntasks/fix.py\n    \ntasks/models.py\n    class Task (models.Model):\ntasks/summary.py\n    \ntasks/task.py\n    \ntasks/urls.py\n    \ntasks/views.py\n    class TaskBase(LoginRequiredMixin, ContextMixin):\n    class TaskDelete(DeleteView):\n    class TaskDetail(DetailView):\n    class TaskCreate(CreateView):\n    class TaskUpdate(TaskBase, UpdateView):\n    class TaskHome(TaskBase, TemplateView):\n    class TaskList(TaskBase, ListView):\n    class MyTime(TaskBase, TemplateView):\n    class TimeSummary(TaskBase, TemplateView):\n    class MissingDays(TaskBase, TemplateView):\n    class TaskImport(RedirectView):\n    class TaskExport(TaskBase, TemplateView):\ntest/__init__.py\n    \ntest/app_test.py\n    \ntest/archive_test.py\n    \ntest/booknotes_test.py\n    \ntest/css_test.py\n    \ntest/data_test.py\n    \ntest/doc_test.py\n    \ntest/health_test.py\n    \ntest/hourly_test.py\n    \ntest/i_test.py\n    \ntest/log_test.py\n    \ntest/ops_test.py\n    \ntest/page_test.py\n    \ntest/robot_test.py\n    \ntest/system_test.py\n    \ntest/text_test.py\n    \ntest/tst_test.py\n    \ntest/unc_test.py\n    \ntest/user_test.py\n    \ntest/vc_test.py\n    \ntest/wordpress_test.py\n    \ntool/__init__.py\n    \ntool/document.py\n    \ntool/domain.py\n    \ntool/email.py\n    \ntool/log.py\n    \ntool/management/__init__.py\n    \ntool/management/commands/__init__.py\n    \ntool/management/commands/scriptor.py\n    class Command(BaseCommand):\ntool/models.py\n    class Test(models.Model):\n    class Page(models.Model):\ntool/notify.py\n    \ntool/page.py\n    \ntool/project.py\n    class ProjectList(ListView):\n    class ProjectDetail(DetailView):\n    class ProjectCreate(CreateView):\n    class ProjectUpdate(UpdateView):\n    class ProjectDelete(DeleteView):\ntool/robot.py\n    \ntool/tst.py\n    \ntool/urls.py\n    \ntool/user.py\n    \ntool/user_views.py\n    class UserList(ListView):\n    class UserCreate(CreateView):\n    class UserDetail(DetailView):\n    class UserEdit(UpdateView):\n    class UserDelete(DeleteView):\n"
        },
        "model": "tool.test",
        "pk": 11
    },
    {
        "fields": {
            "expected": "no output",
            "name": "app-functions",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 12
    },
    {
        "fields": {
            "expected": "no output",
            "name": "app-html-files",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 13
    },
    {
        "fields": {
            "expected": "bin/__init__.py\nbin/app.py\nbin/booknotes.py\nbin/chapter.py\nbin/data.py\nbin/days.py\nbin/diagrams.py\nbin/doc.py\nbin/files.py\nbin/hourly.py\nbin/hours.py\nbin/i.py\nbin/life.py\nbin/log.py\nbin/music.py\nbin/n.py\nbin/ntsh.py\nbin/ops.py\nbin/resize.py\nbin/shell.py\nbin/switches.py\nbin/text.py\nbin/todo.py\nbin/tool.py\nbin/user.py\nbin/vc.py\nbin/web.py\nbin/wordpress.py\nbin/x.py\nhammer/__init__.py\nhammer/secret_settings.py\nhammer/settings.py\nhammer/urls.py\nhammer/wsgi.py\nhealth/__init__.py\nhealth/admin.py\nhealth/apps.py\nhealth/health.py\nhealth/models.py\nhealth/tests.py\nhealth/urls.py\nhealth/views.py\nlife/__init__.py\nlife/admin.py\nlife/apps.py\nlife/life.py\nlife/models.py\nlife/tests.py\nlife/urls.py\nlife/views.py\nmybook/__init__.py\nmybook/admin.py\nmybook/apps.py\nmybook/models.py\nmybook/mybook.py\nmybook/mybook_views.py\nmybook/outline.py\nmybook/task.py\nmybook/tests.py\nmybook/urls.py\nsensei/__init__.py\nsensei/admin.py\nsensei/apps.py\nsensei/fix.py\nsensei/models.py\nsensei/review.py\nsensei/sensei.py\nsensei/student.py\nsensei/tests.py\nsensei/urlgame.py\nsensei/urls.py\nsensei/views.py\nsuperuser/__init__.py\nsuperuser/admin.py\nsuperuser/admin_views.py\nsuperuser/apps.py\nsuperuser/initialize.py\nsuperuser/models.py\nsuperuser/tests.py\nsuperuser/urls.py\ntasks/__init__.py\ntasks/models.py\ntasks/summary.py\ntasks/task.py\ntasks/urls.py\ntasks/views.py\ntest/__init__.py\ntest/app_test.py\ntest/archive_test.py\ntest/booknotes_test.py\ntest/css_test.py\ntest/data_test.py\ntest/doc_test.py\ntest/health_test.py\ntest/hourly_test.py\ntest/i_test.py\ntest/log_test.py\ntest/ops_test.py\ntest/page_test.py\ntest/robot_test.py\ntest/system_test.py\ntest/text_test.py\ntest/tst_test.py\ntest/unc_test.py\ntest/user_test.py\ntest/vc_test.py\ntest/wordpress_test.py\ntool/__init__.py\ntool/document.py\ntool/domain.py\ntool/email.py\ntool/log.py\ntool/management/__init__.py\ntool/management/commands/__init__.py\ntool/management/commands/scriptor.py\ntool/models.py\ntool/notify.py\ntool/page.py\ntool/project.py\ntool/robot.py\ntool/tst.py\ntool/urls.py\ntool/user.py\ntool/user_views.py\n",
            "name": "app-list",
            "output": "bin/__init__.py\nbin/app.py\nbin/booknotes.py\nbin/chapter.py\nbin/data.py\nbin/days.py\nbin/diagrams.py\nbin/doc.py\nbin/files.py\nbin/hourly.py\nbin/hours.py\nbin/i.py\nbin/life.py\nbin/log.py\nbin/music.py\nbin/ntsh.py\nbin/ops.py\nbin/resize.py\nbin/shell.py\nbin/switches.py\nbin/text.py\nbin/todo.py\nbin/tool.py\nbin/user.py\nbin/vc.py\nbin/web.py\nbin/wordpress.py\nbin/x.py\nhammer/__init__.py\nhammer/secret_settings.py\nhammer/settings.py\nhammer/urls.py\nhammer/wsgi.py\nhealth/__init__.py\nhealth/admin.py\nhealth/apps.py\nhealth/health.py\nhealth/models.py\nhealth/tests.py\nhealth/urls.py\nhealth/views.py\nlife/__init__.py\nlife/admin.py\nlife/apps.py\nlife/life.py\nlife/models.py\nlife/tests.py\nlife/urls.py\nlife/views.py\nmybook/__init__.py\nmybook/admin.py\nmybook/apps.py\nmybook/models.py\nmybook/mybook.py\nmybook/mybook_views.py\nmybook/outline.py\nmybook/task.py\nmybook/tests.py\nmybook/urls.py\nsensei/__init__.py\nsensei/admin.py\nsensei/apps.py\nsensei/fix.py\nsensei/models.py\nsensei/review.py\nsensei/sensei.py\nsensei/student.py\nsensei/tests.py\nsensei/urlgame.py\nsensei/urls.py\nsensei/views.py\nsuperuser/__init__.py\nsuperuser/admin.py\nsuperuser/admin_views.py\nsuperuser/apps.py\nsuperuser/initialize.py\nsuperuser/models.py\nsuperuser/tests.py\nsuperuser/urls.py\ntasks/__init__.py\ntasks/fix.py\ntasks/models.py\ntasks/summary.py\ntasks/task.py\ntasks/urls.py\ntasks/views.py\ntest/__init__.py\ntest/app_test.py\ntest/archive_test.py\ntest/booknotes_test.py\ntest/css_test.py\ntest/data_test.py\ntest/doc_test.py\ntest/health_test.py\ntest/hourly_test.py\ntest/i_test.py\ntest/log_test.py\ntest/ops_test.py\ntest/page_test.py\ntest/robot_test.py\ntest/system_test.py\ntest/text_test.py\ntest/tst_test.py\ntest/unc_test.py\ntest/user_test.py\ntest/vc_test.py\ntest/wordpress_test.py\ntool/__init__.py\ntool/document.py\ntool/domain.py\ntool/email.py\ntool/log.py\ntool/management/__init__.py\ntool/management/commands/__init__.py\ntool/management/commands/scriptor.py\ntool/models.py\ntool/notify.py\ntool/page.py\ntool/project.py\ntool/robot.py\ntool/tst.py\ntool/urls.py\ntool/user.py\ntool/user_views.py\n"
        },
        "model": "tool.test",
        "pk": 14
    },
    {
        "fields": {
            "expected": "\nCode Summary            Files     Lines\n\n    App                   218     16287\n",
            "name": "app-score",
            "output": "\nCode Summary            Files     Lines\n\n    App                   218     16287\n"
        },
        "model": "tool.test",
        "pk": 15
    },
    {
        "fields": {
            "expected": "\"\"\"\nDjango settings for Hammer project.\n\n\"\"\"\n\nfrom platform import node\nfrom os.path import dirname, join\n\n\nBASE_DIR = dirname(dirname(__file__))\nDOC_ROOT = join(BASE_DIR, 'Documents')\nLOG_DIR = join(BASE_DIR, 'log')\n\nif 'MCB15-3365' == node():\n    PANDOC_APP = 'pandoc.exe'\nelse:\n    PANDOC_APP = 'pandoc'\n\n\n# SECURITY WARNING: don't run with debug turned on in production!\nif 'MyBook' == node():\n    DEBUG = False\nelse:\n    DEBUG = True\n    ALLOWED_HOSTS = ['*']\nDEBUG = True\n\n\n# Application definition\nINSTALLED_APPS = [\n    # Django System\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.humanize',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    # MyBook\n    'health',\n    'life',\n    'mybook',\n    'sensei',\n    'superuser',\n    'tasks',\n    'tool',\n]\n\nMIDDLEWARE_CLASSES = [\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\n# Loading templates\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n            join(BASE_DIR, \"templates\"),\n        ],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                # Insert your TEMPLATE_CONTEXT_PROCESSORS here or use this\n                # list if you haven't customized them:\n                'django.contrib.auth.context_processors.auth',\n                'django.template.context_processors.debug',\n                'django.template.context_processors.i18n',\n                'django.template.context_processors.media',\n                'django.template.context_processors.static',\n                'django.template.context_processors.tz',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nROOT_URLCONF = 'hammer.urls'\nLOGIN_URL='/login/'\nLOGIN_REDIRECT_URL = '/'\n\nWSGI_APPLICATION = 'hammer.wsgi.application'\n\nEMAIL_FROM = \"mark.seaman@shrinking-world.com\"\n\n\n# Secrets\nfrom .secret_settings import DATABASES, SECRET_KEY, EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS\n\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'US/Mountain'\nUSE_I18N = False\nUSE_L10N = False\nUSE_TZ = True\n\n\n# Static server\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (BASE_DIR + '/static', BASE_DIR + '/docs',)\n\nLOGGING = {\n\n    'version': 1,\n    'disable_existing_loggers': False,\n    'handlers': {\n         'hammer-file': {\n            'level': 'DEBUG',\n            'class': 'logging.FileHandler',\n            'filename': join(BASE_DIR, 'log', 'hammer.log'),\n        },\n        'console': {\n            'level': 'DEBUG',\n            'class': 'logging.StreamHandler',\n        },\n    },\n    'loggers': {\n         'tool': {\n            'handlers': ['hammer-file'],\n        },\n    },\n    'root': {'level': 'INFO'},\n}\n\n\n\nif 'MyBook' in node():\n\n    # Allow Django from all hosts. This snippet is installed from\n    # /var/lib/digitalocean/allow_hosts.py\n\n    import os\n    import netifaces\n\n    # Find out what the IP addresses are at run time\n    # This is necessary because otherwise Gunicorn will reject the connections\n    def ip_addresses():\n        ip_list = []\n        for interface in netifaces.interfaces():\n            addrs = netifaces.ifaddresses(interface)\n            for x in (netifaces.AF_INET, netifaces.AF_INET6):\n                if x in addrs:\n                    ip_list.append(addrs[x][0]['addr'])\n        return ip_list\n\n    # Discover our IP address\n    domains = [\n        'markseaman.info',\n        'markseaman.org',   \n        'seamanslog.com',\n        'seamansguide.com',\n        'shrinking-world.com',\n        'shrinking-world.org',\n        'spiritual-things.org',\n    ]\n    ALLOWED_HOSTS = domains + ip_addresses()\n\n\n",
            "name": "app-settings",
            "output": "\"\"\"\nDjango settings for Hammer project.\n\n\"\"\"\n\nfrom platform import node\nfrom os.path import dirname, join\n\n\nBASE_DIR = dirname(dirname(__file__))\nDOC_ROOT = join(BASE_DIR, 'Documents')\nLOG_DIR = join(BASE_DIR, 'log')\n\nif 'MCB15-3365' == node():\n    PANDOC_APP = 'pandoc.exe'\nelse:\n    PANDOC_APP = 'pandoc'\n\n\n# SECURITY WARNING: don't run with debug turned on in production!\nif 'MyBook' == node():\n    DEBUG = False\nelse:\n    DEBUG = True\n    ALLOWED_HOSTS = ['*']\nDEBUG = True\n\n\n# Application definition\nINSTALLED_APPS = [\n    # Django System\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.humanize',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    # MyBook\n    'health',\n    'life',\n    'mybook',\n    'sensei',\n    'superuser',\n    'tasks',\n    'tool',\n]\n\nMIDDLEWARE_CLASSES = [\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\n# Loading templates\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n            join(BASE_DIR, \"templates\"),\n        ],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                # Insert your TEMPLATE_CONTEXT_PROCESSORS here or use this\n                # list if you haven't customized them:\n                'django.contrib.auth.context_processors.auth',\n                'django.template.context_processors.debug',\n                'django.template.context_processors.i18n',\n                'django.template.context_processors.media',\n                'django.template.context_processors.static',\n                'django.template.context_processors.tz',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nROOT_URLCONF = 'hammer.urls'\nLOGIN_URL='/login/'\nLOGIN_REDIRECT_URL = '/'\n\nWSGI_APPLICATION = 'hammer.wsgi.application'\n\nEMAIL_FROM = \"mark.seaman@shrinking-world.com\"\n\n\n# Secrets\nfrom .secret_settings import DATABASES, SECRET_KEY, EMAIL_HOST, EMAIL_PORT, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_USE_TLS\n\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'US/Mountain'\nUSE_I18N = False\nUSE_L10N = False\nUSE_TZ = True\n\n\n# Static server\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (BASE_DIR + '/static', BASE_DIR + '/docs',)\n\nLOGGING = {\n\n    'version': 1,\n    'disable_existing_loggers': False,\n    'handlers': {\n         'hammer-file': {\n            'level': 'DEBUG',\n            'class': 'logging.FileHandler',\n            'filename': join(BASE_DIR, 'log', 'hammer.log'),\n        },\n        'console': {\n            'level': 'DEBUG',\n            'class': 'logging.StreamHandler',\n        },\n    },\n    'loggers': {\n         'tool': {\n            'handlers': ['hammer-file'],\n        },\n    },\n    'root': {'level': 'INFO'},\n}\n\n\n\nif 'MyBook' in node():\n\n    # Allow Django from all hosts. This snippet is installed from\n    # /var/lib/digitalocean/allow_hosts.py\n\n    import os\n    import netifaces\n\n    # Find out what the IP addresses are at run time\n    # This is necessary because otherwise Gunicorn will reject the connections\n    def ip_addresses():\n        ip_list = []\n        for interface in netifaces.interfaces():\n            addrs = netifaces.ifaddresses(interface)\n            for x in (netifaces.AF_INET, netifaces.AF_INET6):\n                if x in addrs:\n                    ip_list.append(addrs[x][0]['addr'])\n        return ip_list\n\n    # Discover our IP address\n    domains = [\n        'markseaman.info',\n        'markseaman.org',   \n        'seamanslog.com',\n        'seamansguide.com',\n        'shrinking-world.com',\n        'shrinking-world.org',\n        'spiritual-things.org',\n    ]\n    ALLOWED_HOSTS = domains + ip_addresses()\n\n\n"
        },
        "model": "tool.test",
        "pk": 16
    },
    {
        "fields": {
            "expected": "no output",
            "name": "app-show",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 17
    },
    {
        "fields": {
            "expected": "bin/__init__.py\n    \nbin/app.py\n     app_command(options)\n     app_help()\n     app_functions(args)\n     app_classes(args)\n     app_signature(args)\n     app_search_code(files, search_function)\n         print_indented(outline)\n             app_print(filename, children)\n     app_directories()\n     app_path(topic=None)\n     app_score()\n     app_search(args)\n     app_show(args=None)\n     app_source(args=None)\n     app_summary(args=None)\n     kill_server()\n     app_urls()\n         simplify(url)\n     run_server()\nbin/booknotes.py\n     booknotes_command(options)\n     booknotes_help(args=None)\n     booknotes_content(args)\n     booknotes_doc_path(doc=None)\n     booknotes_edit(args)\n     booknotes_excerpt(args)\n         booknotes()\n         excerpt(note)\n     booknotes_list(args)\nbin/chapter.py\n     compare_chapter(c)\n     update_chapter(c)\n     chapters()\n     update_all_chapters()\nbin/data.py\n     data_command(options)\n     data_backup(host)\n     data_count(host)\n     data_help()\n     data_load(host)\n     data_migrate()\n     data_reset()\n     data_save(host)\n         save(server, app=None)\n     data_server()\n     data_sql(host)\n     data_tables()\n     data_prune_tables()\nbin/days.py\n     days_command(options)\n     days_help(args=None)\n     date_str(t)\n     day_str(t)\n     days_ago(date,days)\n     days_list(args)\n     days_month(args)\n     days_weeks(num_weeks)\n         days_ahead(date, days)\n         enumerate_weeks(today, days)\n         weekly_schedule(filename, days)\n     enumerate_days(today, days)\n     to_date(s)\n     to_day(s)\n     today()\nbin/diagrams.py\n    \nbin/doc.py\n     doc_command(options)\n     doc_help()\n     doc_content(args)\n     doc_count(dir)\n     doc_directories()\n     doc_edit(args)\n     doc_fix()\n     doc_length(args=None)\n     doc_list(args=None)\n     doc_path(doc=None)\n     doc_pick(args)\n     doc_random_select(directory)\n     doc_redirect(page)\n     doc_score(args)\n     doc_search(args)\n     doc_send(args)\n     doc_send_text(args)\n     doc_show(args=None)\n     doc_show_directory(dir=None)\n     doc_stats(args)\n     doc_summary(args=None)\n     fix_chars(text)\n     doc_test(args)\n     doc_word_count(directory)\n     doc_words(args=None)\n     list_documents(dir=None)\nbin/files.py\n     accumulate_new_lines(accumulator, f2)\n     count_files(directory)\n     create_directory(path)\n     delete_file(filename)\n     do_command(cmd, input=None)\n     encode_text(text, encoding='utf-8')\n     fix_chars(text)\n     grep(pattern,file)\n     is_writable(path)\n     list_files(directory)\n     list_dirs(directory)\n     path_name (relative_filename)\n     print_list(lst)\n     print_list2(lst)\n     read_input()\n     read_json(filename)\n     read_file(filename)\n     read_text(f)\n     recursive_list(d)\n     time_sort_file(d)\n     write_text(filename, text, append=None)\n     write_file(filename, lines, append=None)\nbin/hourly.py\n     hourly_command(options)\n     hourly_help(args=None)\n     hourly_doc_path(doc=None)\n     hourly_edit()\n     hourly_list()\n     hourly_run()\n         execute(cmd)\n     hourly_show()\nbin/hours.py\n    #  hours_command(options)\n    #  hours_help(args=None)\n    #  activities_work()\n    #  activities_work_client()\n    #  activities_work_nonpaid()\n    #  activities_play()\n    #  activities_public()\n    #  activities_private()\n    #  activities()\n    #  hours_activity(args)\n    #  hours_add(args)\n    #      enumerate_days(today, days)\n    #      to_date(s)\n    #      date_str(t)\n    #      day_str(t)\n    #      days_ago(date,days)\n    #      month_of_days(start)\n    #  hours_days(args)\n    #  hours_doc_path(args)\n    #  hours_edit(args)\n    #  hours_list(args)\n    #  hours_tasks(args)\n    #  append_tasks(events, lines)\n    #      task_text(lines, start, end)\n    #  hours_show(args)\n    #  hours_summary(args)\n    #  hours_work(args)\n    #  is_day(line)\n    #  is_activity(line)\n    #  is_task(line)\n    #  list_events(args)\n    #  list_tasks(text)\n    #  months()\n    #  print_activities(label, times)\n    #  print_days(times, num_days)\n    #  print_score(times)\n    #      show_score(label, activities, ideal_hours)\n    #  print_table(labels, table)\n    #  print_tasks(results, activity=None)\n    #  print_total_hours(results, activity=None)\n    #      select_activity(record, activity)\n    #  print_total(label, times, activities=None, grand_total=None)\n    #  print_totals(label, times, activities=None, grand_total=None)\n    #  print_work(times, num_days)\n    #  total_activity(filename, times={})\n    #  total_columns(table)\n    #  activity_list(filename)\n    #  total_work_days(filename)\n    #  total_days(filename)\n    #  total_time(times, activities=None)\nbin/i.py\n     i_command(options)\n     i_help(args=None)\n     doc_path()\n     i_add(args)\n     i_edit(args)\n     i_list(args)\nbin/life.py\n     life_command(options)\n     life_doc_path(doc=None)\n     life_edit(doc)\n     life_help(args=None)\n     life_list(args)\n     life_publish(args)\n     life_show(args)\n     life_todo(args)\n     life_web(args)\n     life_words(args)\nbin/log.py\n     log_path()\n     log_command(options)\n     log(label,value=None)\n     log_exception()\n     log_clear()\n     log_read()\nbin/music.py\n     music_command(options)\n     music_help(args=None)\n     list_albums(args)\n     list_collections(args)\n     list_du(args)\n     list_tracks(args)\n     music_copy()\n     music_doc_path(doc=None)\n     music_edit(doc)\n     music_collection(name)\n     music_load(args)\n     music_list(args)\n     music_show(args)\n     music_sync(args)\nbin/n.py\n    \nbin/ntsh.py\n     ntsh_command(argv)\n     commit()\n     clean()\n     convert(f1,f2)\n     convert_png(f1,f2)\n     help()\n     hide()\n     list_files(dirs)\n     new_name(name)\n     name(args)\n     notes()\n     reorder(name)\n     status()\n     view()\n     web(page='%s/notes/fav_list' % archive)\n     zip_open()\n     zip_close()\nbin/ops.py\n     ops_command(options)\n     ops_help(cmd=None, args=None)\n     ops_cmd(args)\n     ops_console()\n     ops_deploy()\n     ops_log()\n     ops_restart()\n     ops_root(server=host, cmd='')\n     ops_update(args)\n     remote_command(server, cmd, user='django')\nbin/resize.py\n     save_image_file(filename, image, width, height, imtype)\n     resize_jpeg(filename)\n     resize_png(filename)\n    #  create_thumbnails(infile, photo)\n    #  resize_test()\nbin/shell.py\n     banner(name)\n     check_dirs(path, min=0, max=0)\n     check_dir_list(path, dir_list)\n     check_files(path, min=0, max=0)\n     check_file_list(path, dir_list)\n     check_lines(label, lines, min=0, max=10)\n     check_shell_lines(cmd, min=0, max=10)\n     differences(answer, correct)\n     dir_list(path)\n     dir_tree_list(path)\n     file_tree_list(path, filetype=None)\n     file_list(path, filetype=None)\n     file_path(d='', f='')\n     filter_types(files, filetype=None)\n     hostname()\n     line_match(word, text)\n     line_exclude(word, text)\n     line_count(path)\n     limit_lines(shell_command, min=None, max=None)\n     read_file(path)\n     shell(cmd)\n         command_line(cmd)\n     word_count(text)\n     write_file(path, text)\nbin/switches.py\n     server_type()\n     server_host(server)\nbin/text.py\n     text_command(options)\n     text_help(args=None)\n     find_agents(text)\n     find_anchors(text)\n     find_classes(text)\n     find_functions(text)\n     find_links(text)\n         link(anchor)\n     find_quotes(text)\n     find_signatures(text)\n        pattern = r'(.*\\(.*\\))'\n     find_urls(text)\n     markdown_list_links(host, lines)\n     markdown_list_string(mylist)\n     text_join(text)\n     text_lines(text)\n     text_match(match_pattern, doc)\n     text_no_match(match_pattern, doc)\n     text_outline(text)\n     text_outline_string(outline, depth=0)\n     text_markdown(outline, depth=1)\n         text_body(lines)\n     text_replace(doc, match_pattern, replace_pattern)\n     text_title(text)\n     text_body(text)\n     match_lines(text, pattern)\n     match_pattern(text, pattern)\n     transform_matches(text, match_pattern, select_pattern)\nbin/todo.py\n     todo_command(options)\n     recent_dates(days=3)\n     edit_task_file(date)\nbin/tool.py\n     tool_command(options)\n     tool_edit(args)\n     tool_help(self)\n     tool_list()\n     tool_length()\n     tool_read(args)\nbin/user.py\n    \nbin/vc.py\n     vc_command(options)\n     vc_help(args=None)\n     git_cmd(cmd)\n     git_filter()\n     vc_commit(args)\n     vc_diff(args)\n     vc_dirs()\n     vc_log(args)\n     vc_pull(args)\n     vc_push(args)\n     vc_status(args)\nbin/web.py\n     web_command(args)\n     web_help()\n     web(page)\n     web_path(topic=None)\nbin/wordpress.py\n     wordpress_command(options)\n     wordpress_help(args=None)\n     wordpress_doc_path(doc=None)\n     wordpress_edit(doc)\n     wordpress_list(args)\n     wordpress_host(args)\n     wordpress_ssh(args)\nbin/x.py\n     execute_command(cmd,args)\n     command_help(cmd,args)\n     command_scriptor(cmd, args)\nhammer/__init__.py\n    \nhammer/secret_settings.py\n    #  database_init()\n     user_reset(name, email, password)\nhammer/settings.py\n         ip_addresses()\nhammer/urls.py\n    \nhammer/wsgi.py\n    \nhealth/__init__.py\n    \nhealth/admin.py\n    \nhealth/apps.py\n    \nhealth/health.py\n     health_command(options)\n     health_doc_path(doc=None)\n     health_edit(args)\n     health_help(args=None)\n     health_list(args)\n     health_score()\n        #  total(row)\n        #  print_bar(lag,lead,average)\n        #  print_score(row, score)\n     average (num_list)\n     health_import(args)\n     health_web()\nhealth/models.py\n         __unicode__(self)\n         get_absolute_url(self)\n         as_row(self)\n         labels()\nhealth/tests.py\n    \nhealth/urls.py\n    \nhealth/views.py\n    #  health_menu(page)\n     health_settings(page='home')\n         get_context_data(self, **kwargs)\n         get_queryset(self)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n     health_scores(objects)\n         average(num_list)\n         five_star(rating)\n         scores(row)\nlife/__init__.py\n    \nlife/admin.py\n    \nlife/apps.py\n    \nlife/life.py\n     query_labels()\n     query_get(pk)\n     query_year(age)\n     query_experiences(age=None)\n     experiences_lookup_table(age=None)\nlife/models.py\n         __unicode__(self)\n         __unicode__(self)\n         __unicode__(self)\n         get_absolute_url(self)\n     initialize()\nlife/tests.py\n    \nlife/urls.py\n    \nlife/views.py\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_redirect_url(self, *args, **kwargs)\n         get_context_data(self, **kwargs)\nmybook/__init__.py\n    \nmybook/admin.py\n    \nmybook/apps.py\n    \nmybook/models.py\n         __unicode__(self)\n         get_absolute_url(self)\n         as_row(self)\n         labels()\n         values(self)\n         name(self)\n         fields(self)\n         __unicode__(self)\n         get_absolute_url(self)\n         as_row(self)\n         labels()\n         values(self)\n         fields(self)\nmybook/mybook.py\n     mybook_path(page)\n    #  mybook_random_select(directory)\n    #  mybook_redirect(host, page, user)\n    #  mybook_site(title)\n     mybook_site_title(title)\n         site_title_text(page)\n     mybook_content(author, title)\n     main_menu(menu, page=None)\n         menu_active(page, menu_item)\n         menu_entry(page, x)\n         menu_read(menu, page)\n         menu_text(page)\n     booknotes_excerpt(doc)\n         booknotes_doc_path(doc=None)\n         booknotes(doc)\n         excerpt(note)\nmybook/mybook_views.py\n     domain_menu(domain, page)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_redirect_url(self, *args, **kwargs)\n    #      get_context_data(self, **kwargs)\n         get_redirect_url(self, *args, **kwargs)\n         get_redirect_url(self, *args, **kwargs)\n         get_context_data(self, **kwargs)\nmybook/outline.py\n     has_kids(text, depth)\n     outline(text)\n     parse_outline(text, tree, depth)\n     print_node(name, depth=1, char='    ')\n     seperator(depth)\n     split_text(text, sep)\n     title(text, depth)\n     read_cards(doc)\n     tabs_data(doc)\n         tab_choice(i,tab)\nmybook/task.py\n     tasks_monthly(year, month)\n     recent_months()\n     months_data_table()\n     tasks_data_table(days)\n     days_data_table(days)\n    #  task_list(task)\n    #  task_list(date)\nmybook/tests.py\n    \nmybook/urls.py\n    \nsensei/__init__.py\n    \nsensei/admin.py\n    \nsensei/apps.py\n    \nsensei/fix.py\n     fix_reading_names()\n     fix_email_names()\n     stud(id)\n     name(name)\n     fix_reviews()\n     fix_reviews()\n     list_reviews()\n     clear_reviews()\n     test_reviews()\n     test_groups()\n     list_groups()\n     clear_reviews()\n     assign_new_reviews()\n     assign_url_game()\nsensei/models.py\n         __str__(self)\n         __unicode__(self)\n         __str__(self)\nsensei/review.py\n     assign_reviews(page, due, requirements)\n     count_score(r)\n     create_review(reviewer, designer, page, due, requirements)\n     get_review(id)\n     review_feedback(student_id)\n     review_groups()\n     review_pairs(groups)\n     student_reviews(student_id)\n     student_reviews_done(student_id)\nsensei/sensei.py\n     add_student(course, name, email, domain)\n     content_lessons(course)\n     course_lessons(course, page)\n     guide_doc_path(doc=None)\n     guide_file(course, doc)\n     guide_schedule(lesson)\n     home_link(title)\n     query_students(course, student=None)\n     get_student(id)\n     get_student_email(email)\n     domain_data(course)\n         domains(course)\n     read_student_list()\n     register_students()\n     student_test_links(student)\n         url(student, page='')\n     lesson_cards(course, lesson)\n         fix_images(text)\n         lesson_markdown(path)\n         card_text(tab_title, tab_text)\n         card_title(tab_text)\n     lesson_data(course, lesson, text)\n         tab_choice(i, tab)\n         lesson_tabs_data(course, lesson)\n     lesson_info(lesson)\n     link(url, title=None)\n     make_link(href, text=None)\n     main_menu(course, page=None)\n         menu_active(page, menu_item)\n         menu_entry(page, x)\n         menu_read(menu_file)\n     missing_page_info(title)\n     page_info(course, title)\n     read_file(course, doc)\n         no_blank_lines(text)\n     schedule_data(course, table)\n         course_part_data(title, table, first, last)\n         lesson_link(lesson)\n         set_links(table)\n         course_parts(table, course)\n     site_titles(course)\n     slide_content_data(course, lesson)\n         adjust_markdown_headings(markdown)\n         format_slides(course, lesson)\n     slides_markdown(page)\n     test_links(course)\n     view_info(kwargs)\n         view_data(course, title, lesson)\nsensei/student.py\n     delete_students()\n     export_students()\n     fix_images(text, image_path)\n     import_students()\n     list_students()\n     reading_scores_table()\n     reading_table(scores)\n     reading_scores()\n     register_user_domain(name, email, password, domain)\n     student_scores(student_id)\n     student_totals()\n     site_settings(**kwargs)\n     students()\n     student(id)\nsensei/tests.py\n    \nsensei/urlgame.py\n     generate_url_question()\n     relative_path(p1, p2)\n     random_page()\n     random_file()\n     random_domain()\n     random_path()\nsensei/urls.py\n    \nsensei/views.py\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         form_valid(self, form)\n         get_success_url(self)\n    #  requirements()\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         form_valid(self, form)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         form_valid(self, form)\n         get_success_url(self)\n     url_feedback(answer, correct)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\nsuperuser/__init__.py\n    \nsuperuser/admin.py\n     admin_print_list()\n     admin_list()\n     admin_table()\n     admin_detail(a)\n     admin_get(pk)\n     database_info()\n     get_detail_data()\n     is_superuser(user)\n     log_text()\n     requesting_user(user)\n     test_list()\n     test_labels()\n     test_results()\n     test_table()\n     test_text(t)\n     text_head(text, lines=3)\n     text_lines(lines, columns=30)\n     user_detail(user)\n     user_labels()\n     user_table(users)\nsuperuser/admin_views.py\n         get_context_data(self, **kwargs)\n         test_func(self)\n         get_context_data(self, **kwargs)\n         test_func(self)\n         get_context_data(self, **kwargs)\n         test_func(self)\n         get_context_data(self, **kwargs)\n         test_func(self)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         test_func(self)\n         get_queryset(self)\n         get_context_data(self, **kwargs)\n         test_func(self)\n         get_context_data(self, **kwargs)\n         test_func(self)\nsuperuser/apps.py\n    \nsuperuser/initialize.py\n     user_reset(name, email, password)\nsuperuser/models.py\n         __unicode__(self)\n         as_row(self)\n         labels()\n         values(self)\nsuperuser/tests.py\n    \nsuperuser/urls.py\n    \ntasks/__init__.py\n    \ntasks/models.py\n         __unicode__(self)\n        #  get_absolute_url(self)\n         as_row(self)\n         labels()\ntasks/summary.py\n     activity_summary(activity)\n         active_tab(a, t)\n     activities_work()\n     sort_activity(data)\n     bad_days()\n     bad_days_data(days)\n     combine_work_tasks(table, total)\n     tasks_activity(activity)\n     task_activity_details(activity)\n     task_detail(task)\n     query_hours(task, days)\n     task_filter(tasks, activity)\n     time_data()\n     time_totals(totals)\n         time_total(totals, time)\n     percent(actual, total)\n     percent_totals(totals, subtotals)\n     review_totals(totals, subtotals)\n         percent_difference(actual, total, ideal)\n         task_percents(totals, task, index, ideals)\n     time_filter(tasks, days)\n     task_text_list(tasks)\n         format(t)\n     task_list(days=8)\n     time_summary(days)\n     work_types()\n     write_task_files(tlist)\n     task_import_files()\n         task_details(f)\n         read_task_file(f)\n         new_task(date, name, hours, notes)\ntasks/task.py\n     task_command(self, args)\n     task_help(self)\n     days_ago(days)\n     hourly_total(tasks)\n     monthly_hours_invested(task_type, year, month)\n     last_month_hours_invested(task_type)\n     tasks_last_month()\n     task_data_table()\n     monthly_totals(year, month)\n     full_totals()\n     print_summary(summary, start=None, end=None)\n     recent_weeks()\n     recent_months()\n     sort_totals(categories)\n     task_add(self, args)\n     task_delete(self, args)\n     task_details(query, hours)\n         record(name, hours, total)\n     task_doc_path(args)\n     task_edit(self, args)\n     task_get(self, args)\n     task_import(args)\n     task_history(args)\n         print_task_history(tasks)\n     task_list(self, args)\n     task_month(args)\n    #  task_read_events(args)\n     task_read_health(args)\n     task_rename(args)\n     task_set_name(args, task)\n     task_select(task_type=None, date=None, days=None)\n     task_summary(args)\n     task_totals()\n     task_types()\n     task_print_types()\n     task_web()\n     task_week(args)\n     task_work()\n     tasks_monthly(year, month)\n     tasks_weekly(year, month, day)\n     total_hours_invested(task_type)\n     weekly_hours_invested(task_type, year, month, day)\n     weekly_totals(year, month, day)\n     task_report(year, month)\n         query_month_tasks(year, month)\n         task_entry(task)\n     save_monthly_reports(year)\n         save_report(report, month)\n     fix_tasks()\n     test_tasks()\ntasks/urls.py\n    \ntasks/views.py\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_queryset(self)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_redirect_url(self, *args, **kwargs)\n         get_context_data(self, **kwargs)\ntest/__init__.py\n    \ntest/app_test.py\n     app_classes_test()\n     app_functions_test()\n     app_list_test()\n     app_switches_test()\n     app_settings_test()\n     app_show_test()\n     app_signature_test()\n     app_url_test()\ntest/archive_test.py\n     archive_files_test()\n     archive_dirs_test()\n     archive_nts_test()\n     archive_repo_test()\n         list_archives()\ntest/booknotes_test.py\n     booknotes_list_test()\n     booknotes_lines_test()\ntest/css_test.py\n     css_mybook_test()\n     css_unc_test()\n     css_slides_test()\ntest/data_test.py\n     data_files_test()\n     data_save_test()\n     data_tables_test()\n     data_migrate_test()\ntest/doc_test.py\n    #  doc_test()\n    #  doc_help_test()\n    #  doc_search_test()\n    #  doc_scan_test()\n    #  doc_file_test()\n    #  doc_file_missing_test()\n    #  doc_consolidate()\n    #  doc_render_test()\n    #  doc_encoding_test()\ntest/health_test.py\n     health_list_test()\n     health_score_test()\ntest/hourly_test.py\n     hourly_list_test()\n     hourly_show_test()\ntest/i_test.py\n     i_list_test()\ntest/log_test.py\n     log_length_test()\ntest/ops_test.py\n    #  ops_git_pull_test()\n     ops_help_test()\n     ops_server_test()\n     ops_server_type_test()\n     ops_status_test()\ntest/page_test.py\n     check_page(url, min=1, max=1)\n     page_list_test()\n     page_text_test()\n     page_diff_test()\n     page_sites_test()\ntest/robot_test.py\n     robot_list_test()\n     robot_results_test()\n    #  robot_show_test()\ntest/system_test.py\n     system_bin_test()\n     system_cron_test()\n     system_disk_free_test ()\n     system_env_test()\n     system_files_count_test()\n     system_host_test()\n     system_ip_test()\n     system_pandoc_test()\n     system_python_files_test()\n     system_python_version_test()\n     system_python_virtualenv_test()\ntest/text_test.py\n     text_help_test()\n     text_match_test()\n     text_no_match_test()\n     text_agents_test()\n     text_outline_test()\n     text_markdown_test()\n     text_format_test()\n     text_round_trip_test()\n     text_grep_test()\n     text_findall_test()\n     text_functions_test()\n     text_select_lines_test()\n     text_url_test()\n     text_links_test()\n    #  text_transforms_test()\n    #      transform(test_case)\n     text_signatures_test()\n     text_anchors_test()\n     text_div_test()\ntest/tst_test.py\n     tst_test()\n     tst_time_test()\ntest/unc_test.py\n     check_page(url, min=1, max=1)\n     unc_files_test()\n     unc_docs_test()\n     unc_site_test()\ntest/user_test.py\n    #  user_import_test()\n    #  user_export_test()\n     user_list_test()\ntest/vc_test.py\n     vc_status_test()\n     vc_pull_test()\ntest/wordpress_test.py\n     wordpress_list_test()\n     wordpress_host_test()\ntool/__init__.py\n    \ntool/document.py\n     doc_cards(page)\n     doc_content(page)\n     doc_dir_exists(title)\n     doc_exists(title)\n     doc_html_text(page, image_path=None)\n     doc_link(title)\n     doc_path(page)\n     domain_doc(domain, page)\n     file_to_html(path, image_path=None)\n         fix_images(text)\n     markdown_to_html(markdown_path, html_path)\n     read_markdown(path)\n     text_to_html(text)\n     title(p1)\n     write_html_file(path, html)\ntool/domain.py\n     domain_title(domain)\n     domain_directory(domain)\ntool/email.py\n     email_command(options)\n     email_help()\n     email_args(args, use_html=True)\n     send_support_request(title, text)\n     send_file_email(args)\n     send_doc_email(args)\n     send_text_email(args)\n     send_html_email(args)\n     send_template_message(emailTo, title, template, data={})\ntool/log.py\n     log(text, value=None)\n     log_exception()\n     log_json(text, data)\n     log_file()\n     show_log()\n     log_notifications(title, recipients)\n     log_page(request, parms='')\ntool/management/__init__.py\n    \ntool/management/commands/__init__.py\n    \ntool/management/commands/scriptor.py\n         add_arguments(self, parser)\n         handle(self, *args, **options)\n         help(self)\ntool/models.py\n    \ntool/notify.py\n     notify_test_results()\n     notify_test_email()\ntool/page.py\n     page_command(self, options)\n     page_help(self)\n     page_add(self, args)\n     page_delete(self, args)\n     page_diff(self, args)\n         show_diff(page)\n     page_expect(self, args)\n     page_html(self, args)\n         show_output(page)\n     page_like(self, args)\n         like_page(page)\n     page_list(self)\n     page_lookup(url)\n     page_reset(self)\n     page_results()\n     page_text(self, args)\n         show_output(page)            \ntool/project.py\n     project_add(self, args)\n     project_command(self, options)\n     project_delete(self, args)\n     project_get(self, args)\n     project_help(self)\n     project_list(self)\n     project_lookup(name)\ntool/robot.py\n     robot_command(options)\n     robot_help(args=None)\n     robot_doc_path(doc=None)\n     robot_fetch_page(url)\n     robot_get_page(browser, page)\n     robot_list()\n     robot_login(browser,page)\n     robot_results()\n     robot_run()\ntool/tst.py\n     tst_find()\n     get_module(modulename)\n     test_map(modulename)\n         test_entry(entry)\n         tests(module)\n     tst_command(self, args)\n     test_dictionary()\n         module_list(directory)\n         test_name(module)\n     tst_diff(test_name)\n     tst_edit(self, args)\n     tst_help(self)\n     tst_like(self,args)\n     tst_list(self,args)\n     tst_output(self,args)\n     tst_register(tests)\n     tst_results()\n         show_differences(t)\n     tst_run(self,args)\n         run_test(self,test_entry)\n     tst_send(self,args)\ntool/urls.py\n    \ntool/user.py\n     user_command(self, options)\n     user_help()\n     user_add(name, email, password='test')\n     user_delete(args)\n     user_export(self, args)\n     user_get(pk)\n     user_import(self, args)\n     user_list()\n     user_password(username, password)\n     user_lookup(name, email=None)\n     user_file_path(args)\n     user_fix_name(args)\n     show_users()\n     reset_passwords()\ntool/user_views.py\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n",
            "name": "app-signature",
            "output": "bin/__init__.py\n    \nbin/app.py\n     app_command(options)\n     app_help()\n     app_functions(args)\n     app_classes(args)\n     app_signature(args)\n     app_search_code(files, search_function)\n         print_indented(outline)\n             app_print(filename, children)\n     app_directories()\n     app_path(topic=None)\n     app_score()\n     app_search(args)\n     app_show(args=None)\n     app_source(args=None)\n     app_summary(args=None)\n     kill_server()\n     app_urls()\n         simplify(url)\n     run_server()\nbin/booknotes.py\n     booknotes_command(options)\n     booknotes_help(args=None)\n     booknotes_content(args)\n     booknotes_doc_path(doc=None)\n     booknotes_edit(args)\n     booknotes_excerpt(args)\n         booknotes()\n         excerpt(note)\n     booknotes_list(args)\nbin/chapter.py\n     compare_chapter(c)\n     update_chapter(c)\n     chapters()\n     update_all_chapters()\nbin/data.py\n     data_command(options)\n     data_backup(host)\n     data_count(host)\n     data_help()\n     data_load(host)\n     data_migrate()\n     data_reset()\n     data_save(host)\n         save(server, app=None)\n     data_server()\n     data_sql(host)\n     data_tables()\n     data_prune_tables()\nbin/days.py\n     days_command(options)\n     days_help(args=None)\n     date_str(t)\n     day_str(t)\n     days_ago(date,days)\n     days_list(args)\n     days_month(args)\n     days_weeks(num_weeks)\n         days_ahead(date, days)\n         enumerate_weeks(today, days)\n         weekly_schedule(filename, days)\n     enumerate_days(today, days)\n     to_date(s)\n     to_day(s)\n     today()\nbin/diagrams.py\n    \nbin/doc.py\n     doc_command(options)\n     doc_help()\n     doc_content(args)\n     doc_count(dir)\n     doc_directories()\n     doc_edit(args)\n     doc_fix()\n     doc_length(args=None)\n     doc_list(args=None)\n     doc_path(doc=None)\n     doc_pick(args)\n     doc_random_select(directory)\n     doc_redirect(page)\n     doc_score(args)\n     doc_search(args)\n     doc_send(args)\n     doc_send_text(args)\n     doc_show(args=None)\n     doc_show_directory(dir=None)\n     doc_stats(args)\n     doc_summary(args=None)\n     fix_chars(text)\n     doc_test(args)\n     doc_word_count(directory)\n     doc_words(args=None)\n     list_documents(dir=None)\nbin/files.py\n     accumulate_new_lines(accumulator, f2)\n     count_files(directory)\n     create_directory(path)\n     delete_file(filename)\n     do_command(cmd, input=None)\n     encode_text(text, encoding='utf-8')\n     fix_chars(text)\n     grep(pattern,file)\n     is_writable(path)\n     list_files(directory)\n     list_dirs(directory)\n     path_name (relative_filename)\n     print_list(lst)\n     print_list2(lst)\n     read_input()\n     read_json(filename)\n     read_file(filename)\n     read_text(f)\n     recursive_list(d)\n     time_sort_file(d)\n     write_text(filename, text, append=None)\n     write_file(filename, lines, append=None)\nbin/hourly.py\n     hourly_command(options)\n     hourly_help(args=None)\n     hourly_doc_path(doc=None)\n     hourly_edit()\n     hourly_list()\n     hourly_run()\n         execute(cmd)\n     hourly_show()\nbin/hours.py\n    #  hours_command(options)\n    #  hours_help(args=None)\n    #  activities_work()\n    #  activities_work_client()\n    #  activities_work_nonpaid()\n    #  activities_play()\n    #  activities_public()\n    #  activities_private()\n    #  activities()\n    #  hours_activity(args)\n    #  hours_add(args)\n    #      enumerate_days(today, days)\n    #      to_date(s)\n    #      date_str(t)\n    #      day_str(t)\n    #      days_ago(date,days)\n    #      month_of_days(start)\n    #  hours_days(args)\n    #  hours_doc_path(args)\n    #  hours_edit(args)\n    #  hours_list(args)\n    #  hours_tasks(args)\n    #  append_tasks(events, lines)\n    #      task_text(lines, start, end)\n    #  hours_show(args)\n    #  hours_summary(args)\n    #  hours_work(args)\n    #  is_day(line)\n    #  is_activity(line)\n    #  is_task(line)\n    #  list_events(args)\n    #  list_tasks(text)\n    #  months()\n    #  print_activities(label, times)\n    #  print_days(times, num_days)\n    #  print_score(times)\n    #      show_score(label, activities, ideal_hours)\n    #  print_table(labels, table)\n    #  print_tasks(results, activity=None)\n    #  print_total_hours(results, activity=None)\n    #      select_activity(record, activity)\n    #  print_total(label, times, activities=None, grand_total=None)\n    #  print_totals(label, times, activities=None, grand_total=None)\n    #  print_work(times, num_days)\n    #  total_activity(filename, times={})\n    #  total_columns(table)\n    #  activity_list(filename)\n    #  total_work_days(filename)\n    #  total_days(filename)\n    #  total_time(times, activities=None)\nbin/i.py\n     i_command(options)\n     i_help(args=None)\n     doc_path()\n     i_add(args)\n     i_edit(args)\n     i_list(args)\nbin/life.py\n     life_command(options)\n     life_doc_path(doc=None)\n     life_edit(doc)\n     life_help(args=None)\n     life_list(args)\n     life_publish(args)\n     life_show(args)\n     life_todo(args)\n     life_web(args)\n     life_words(args)\nbin/log.py\n     log_path()\n     log_command(options)\n     log(label,value=None)\n     log_exception()\n     log_clear()\n     log_read()\nbin/music.py\n     music_command(options)\n     music_help(args=None)\n     list_albums(args)\n     list_collections(args)\n     list_du(args)\n     list_tracks(args)\n     music_copy()\n     music_doc_path(doc=None)\n     music_edit(doc)\n     music_collection(name)\n     music_load(args)\n     music_list(args)\n     music_show(args)\n     music_sync(args)\nbin/ntsh.py\n     ntsh_command(argv)\n     commit()\n     clean()\n     convert(f1,f2)\n     convert_png(f1,f2)\n     help()\n     hide()\n     list_files(dirs)\n     new_name(name)\n     name(args)\n     notes()\n     reorder(name)\n     status()\n     view()\n     web(page='%s/notes/fav_list' % archive)\n     zip_open()\n     zip_close()\nbin/ops.py\n     ops_command(options)\n     ops_help(cmd=None, args=None)\n     ops_cmd(args)\n     ops_console()\n     ops_deploy()\n     ops_log()\n     ops_restart()\n     ops_root(server=host, cmd='')\n     ops_update(args)\n     remote_command(server, cmd, user='django')\nbin/resize.py\n     save_image_file(filename, image, width, height, imtype)\n     resize_jpeg(filename)\n     resize_png(filename)\n    #  create_thumbnails(infile, photo)\n    #  resize_test()\nbin/shell.py\n     banner(name)\n     check_dirs(path, min=0, max=0)\n     check_dir_list(path, dir_list)\n     check_files(path, min=0, max=0)\n     check_file_list(path, dir_list)\n     check_lines(label, lines, min=0, max=10)\n     check_shell_lines(cmd, min=0, max=10)\n     differences(answer, correct)\n     dir_list(path)\n     dir_tree_list(path)\n     file_tree_list(path, filetype=None)\n     file_list(path, filetype=None)\n     file_path(d='', f='')\n     filter_types(files, filetype=None)\n     hostname()\n     line_match(word, text)\n     line_exclude(word, text)\n     line_count(path)\n     limit_lines(shell_command, min=None, max=None)\n     read_file(path)\n     shell(cmd)\n         command_line(cmd)\n     word_count(text)\n     write_file(path, text)\nbin/switches.py\n     server_type()\n     server_host(server)\nbin/text.py\n     text_command(options)\n     text_help(args=None)\n     find_agents(text)\n     find_anchors(text)\n     find_classes(text)\n     find_functions(text)\n     find_links(text)\n         link(anchor)\n     find_quotes(text)\n     find_signatures(text)\n        pattern = r'(.*\\(.*\\))'\n     find_urls(text)\n     markdown_list_links(host, lines)\n     markdown_list_string(mylist)\n     text_join(text)\n     text_lines(text)\n     text_match(match_pattern, doc)\n     text_no_match(match_pattern, doc)\n     text_outline(text)\n     text_outline_string(outline, depth=0)\n     text_markdown(outline, depth=1)\n         text_body(lines)\n     text_replace(doc, match_pattern, replace_pattern)\n     text_title(text)\n     text_body(text)\n     match_lines(text, pattern)\n     match_pattern(text, pattern)\n     transform_matches(text, match_pattern, select_pattern)\nbin/todo.py\n     todo_command(options)\n     recent_dates(days=3)\n     edit_task_file(date)\nbin/tool.py\n     tool_command(options)\n     tool_edit(args)\n     tool_help(self)\n     tool_list()\n     tool_length()\n     tool_read(args)\nbin/user.py\n    \nbin/vc.py\n     vc_command(options)\n     vc_help(args=None)\n     git_cmd(cmd)\n     git_filter()\n     vc_commit(args)\n     vc_diff(args)\n     vc_dirs()\n     vc_log(args)\n     vc_pull(args)\n     vc_push(args)\n     vc_status(args)\nbin/web.py\n     web_command(args)\n     web_help()\n     web(page)\n     web_path(topic=None)\nbin/wordpress.py\n     wordpress_command(options)\n     wordpress_help(args=None)\n     wordpress_doc_path(doc=None)\n     wordpress_edit(doc)\n     wordpress_list(args)\n     wordpress_host(args)\n     wordpress_ssh(args)\nbin/x.py\n     execute_command(cmd,args)\n     command_help(cmd,args)\n     command_scriptor(cmd, args)\nhammer/__init__.py\n    \nhammer/secret_settings.py\n    #  database_init()\n     user_reset(name, email, password)\nhammer/settings.py\n         ip_addresses()\nhammer/urls.py\n    \nhammer/wsgi.py\n    \nhealth/__init__.py\n    \nhealth/admin.py\n    \nhealth/apps.py\n    \nhealth/health.py\n     health_command(options)\n     health_doc_path(doc=None)\n     health_edit(args)\n     health_help(args=None)\n     health_list(args)\n     health_score()\n        #  total(row)\n        #  print_bar(lag,lead,average)\n        #  print_score(row, score)\n     average (num_list)\n     health_import(args)\n     health_web()\nhealth/models.py\n         __unicode__(self)\n         get_absolute_url(self)\n         as_row(self)\n         labels()\nhealth/tests.py\n    \nhealth/urls.py\n    \nhealth/views.py\n    #  health_menu(page)\n     health_settings(page='home')\n         get_context_data(self, **kwargs)\n         get_queryset(self)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n     health_scores(objects)\n         average(num_list)\n         five_star(rating)\n         scores(row)\nlife/__init__.py\n    \nlife/admin.py\n    \nlife/apps.py\n    \nlife/life.py\n     query_labels()\n     query_get(pk)\n     query_year(age)\n     query_experiences(age=None)\n     experiences_lookup_table(age=None)\nlife/models.py\n         __unicode__(self)\n         __unicode__(self)\n         __unicode__(self)\n         get_absolute_url(self)\n     initialize()\nlife/tests.py\n    \nlife/urls.py\n    \nlife/views.py\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_redirect_url(self, *args, **kwargs)\n         get_context_data(self, **kwargs)\nmybook/__init__.py\n    \nmybook/admin.py\n    \nmybook/apps.py\n    \nmybook/models.py\n         __unicode__(self)\n         get_absolute_url(self)\n         as_row(self)\n         labels()\n         values(self)\n         name(self)\n         fields(self)\n         __unicode__(self)\n         get_absolute_url(self)\n         as_row(self)\n         labels()\n         values(self)\n         fields(self)\nmybook/mybook.py\n     mybook_path(page)\n    #  mybook_random_select(directory)\n    #  mybook_redirect(host, page, user)\n    #  mybook_site(title)\n     mybook_site_title(title)\n         site_title_text(page)\n     mybook_content(author, title)\n     main_menu(menu, page=None)\n         menu_active(page, menu_item)\n         menu_entry(page, x)\n         menu_read(menu, page)\n         menu_text(page)\n     booknotes_excerpt(doc)\n         booknotes_doc_path(doc=None)\n         booknotes(doc)\n         excerpt(note)\nmybook/mybook_views.py\n     domain_menu(domain, page)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_redirect_url(self, *args, **kwargs)\n    #      get_context_data(self, **kwargs)\n         get_redirect_url(self, *args, **kwargs)\n         get_redirect_url(self, *args, **kwargs)\n         get_context_data(self, **kwargs)\nmybook/outline.py\n     has_kids(text, depth)\n     outline(text)\n     parse_outline(text, tree, depth)\n     print_node(name, depth=1, char='    ')\n     seperator(depth)\n     split_text(text, sep)\n     title(text, depth)\n     read_cards(doc)\n     tabs_data(doc)\n         tab_choice(i,tab)\nmybook/task.py\n     tasks_monthly(year, month)\n     recent_months()\n     months_data_table()\n     tasks_data_table(days)\n     days_data_table(days)\n    #  task_list(task)\n    #  task_list(date)\nmybook/tests.py\n    \nmybook/urls.py\n    \nsensei/__init__.py\n    \nsensei/admin.py\n    \nsensei/apps.py\n    \nsensei/fix.py\n     fix_reading_names()\n     fix_email_names()\n     stud(id)\n     name(name)\n     fix_reviews()\n     fix_reviews()\n     list_reviews()\n     clear_reviews()\n     test_reviews()\n     test_groups()\n     list_groups()\n     clear_reviews()\n     assign_new_reviews()\n     assign_url_game()\nsensei/models.py\n         __str__(self)\n         __unicode__(self)\n         __str__(self)\nsensei/review.py\n     assign_reviews(page, due, requirements)\n     count_score(r)\n     create_review(reviewer, designer, page, due, requirements)\n     get_review(id)\n     review_feedback(student_id)\n     review_groups()\n     review_pairs(groups)\n     student_reviews(student_id)\n     student_reviews_done(student_id)\nsensei/sensei.py\n     add_student(course, name, email, domain)\n     add_lesson(course, lesson, title, date)\n     course_lessons(course, page)\n     home_link(title)\n     query_students(course, student=None)\n     get_student(id)\n     get_student_email(email)\n     link(url, title=None)\n     make_link(href, text=None)\n     schedule()\n     slide_content_data(course, lesson)\n         adjust_markdown_headings(markdown)\n         format_slides(course, lesson)\n     slides_markdown(page)\nsensei/student.py\n     delete_students()\n     export_students()\n     fix_images(text, image_path)\n     import_students()\n     list_students()\n     reading_scores_table()\n     reading_table(scores)\n     reading_scores()\n     register_user_domain(name, email, password, domain)\n     student_scores(student_id)\n     student_totals()\n     site_settings(**kwargs)\n     students()\n     student(id)\nsensei/tests.py\n    \nsensei/urlgame.py\n     generate_url_question()\n     relative_path(p1, p2)\n     random_page()\n     random_file()\n     random_domain()\n     random_path()\nsensei/urls.py\n    \nsensei/views.py\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         form_valid(self, form)\n         get_success_url(self)\n    #  requirements()\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         form_valid(self, form)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         form_valid(self, form)\n         get_success_url(self)\n     url_feedback(answer, correct)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\nsuperuser/__init__.py\n    \nsuperuser/admin.py\n     admin_print_list()\n     admin_list()\n     admin_table()\n     admin_detail(a)\n     admin_get(pk)\n     database_info()\n     get_detail_data()\n     is_superuser(user)\n     log_text()\n     requesting_user(user)\n     test_list()\n     test_labels()\n     test_results()\n     test_table()\n     test_text(t)\n     text_head(text, lines=3)\n     text_lines(lines, columns=30)\n     user_detail(user)\n     user_labels()\n     user_table(users)\nsuperuser/admin_views.py\n         get_context_data(self, **kwargs)\n         test_func(self)\n         get_context_data(self, **kwargs)\n         test_func(self)\n         get_context_data(self, **kwargs)\n         test_func(self)\n         get_context_data(self, **kwargs)\n         test_func(self)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         test_func(self)\n         get_queryset(self)\n         get_context_data(self, **kwargs)\n         test_func(self)\n         get_context_data(self, **kwargs)\n         test_func(self)\nsuperuser/apps.py\n    \nsuperuser/initialize.py\n     user_reset(name, email, password)\nsuperuser/models.py\n         __unicode__(self)\n         as_row(self)\n         labels()\n         values(self)\nsuperuser/tests.py\n    \nsuperuser/urls.py\n    \ntasks/__init__.py\n    \ntasks/fix.py\n     fix_tasks_notes()\n     fix_tasks_name()\n     cleanup_records()\n     test_tasks()\ntasks/models.py\n         __unicode__(self)\n        #  get_absolute_url(self)\n         as_row(self)\n         labels()\ntasks/summary.py\n     activity_summary(activity)\n         active_tab(a, t)\n     activities_work()\n     sort_activity(data)\n     bad_days()\n     bad_days_data(days)\n     combine_work_tasks(table, total)\n     tasks_activity(activity)\n     task_activity_details(activity)\n     task_detail(task)\n     query_hours(task, days)\n     task_filter(tasks, activity)\n     time_data()\n     time_totals(totals)\n         time_total(totals, time)\n     percent(actual, total)\n     percent_totals(totals, subtotals)\n     review_totals(totals, subtotals)\n         percent_difference(actual, total, ideal)\n         task_percents(totals, task, index, ideals)\n     time_filter(tasks, days)\n     task_text_list(tasks)\n         format(t)\n     task_list(days=8)\n     time_summary(days)\n     work_types()\n     write_task_files(tlist)\n     task_import_files()\n         task_details(f)\n         read_task_file(f)\n         new_task(date, name, hours, notes)\ntasks/task.py\n     task_command(self, args)\n     task_help(self)\n     days_ago(days)\n     hourly_total(tasks)\n     monthly_hours_invested(task_type, year, month)\n     last_month_hours_invested(task_type)\n     tasks_last_month()\n     task_data_table()\n     monthly_totals(year, month)\n     full_totals()\n     print_summary(summary, start=None, end=None)\n     recent_weeks()\n     recent_months()\n     sort_totals(categories)\n     task_add(self, args)\n     task_delete(self, args)\n     task_details(query, hours)\n         record(name, hours, total)\n     task_doc_path(args)\n     task_edit(self, args)\n     task_get(self, args)\n     task_import(args)\n     task_history(args)\n         print_task_history(tasks)\n     task_list(self, args)\n     task_month(args)\n    #  task_read_events(args)\n     task_read_health(args)\n     task_rename(args)\n     task_set_name(args, task)\n     task_select(task_type=None, date=None, days=None)\n     task_summary(args)\n     task_totals()\n     task_types()\n     task_print_types()\n     task_web()\n     task_week(args)\n     task_work()\n     tasks_monthly(year, month)\n     tasks_weekly(year, month, day)\n     total_hours_invested(task_type)\n     weekly_hours_invested(task_type, year, month, day)\n     weekly_totals(year, month, day)\n     task_report(year, month)\n         query_month_tasks(year, month)\n         task_entry(task)\n     save_monthly_reports(year)\n         save_report(report, month)\ntasks/urls.py\n    \ntasks/views.py\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_queryset(self)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_redirect_url(self, *args, **kwargs)\n         get_context_data(self, **kwargs)\ntest/__init__.py\n    \ntest/app_test.py\n     app_classes_test()\n     app_functions_test()\n     app_list_test()\n     app_switches_test()\n     app_settings_test()\n     app_show_test()\n     app_signature_test()\n     app_url_test()\ntest/archive_test.py\n     archive_files_test()\n     archive_dirs_test()\n     archive_nts_test()\n     archive_repo_test()\n         list_archives()\ntest/booknotes_test.py\n     booknotes_list_test()\n     booknotes_lines_test()\ntest/css_test.py\n     css_mybook_test()\n     css_unc_test()\n     css_slides_test()\ntest/data_test.py\n     data_files_test()\n     data_save_test()\n     data_tables_test()\n     data_migrate_test()\ntest/doc_test.py\n    #  doc_test()\n    #  doc_help_test()\n    #  doc_search_test()\n    #  doc_scan_test()\n    #  doc_file_test()\n    #  doc_file_missing_test()\n    #  doc_consolidate()\n    #  doc_render_test()\n    #  doc_encoding_test()\ntest/health_test.py\n     health_list_test()\n     health_score_test()\ntest/hourly_test.py\n     hourly_list_test()\n     hourly_show_test()\ntest/i_test.py\n     i_list_test()\ntest/log_test.py\n     log_length_test()\ntest/ops_test.py\n    #  ops_git_pull_test()\n     ops_help_test()\n     ops_server_test()\n     ops_server_type_test()\n     ops_status_test()\ntest/page_test.py\n     check_page(url, min=1, max=1)\n     page_list_test()\n     page_text_test()\n     page_diff_test()\n     page_sites_test()\ntest/robot_test.py\n     robot_list_test()\n     robot_results_test()\n    #  robot_show_test()\ntest/system_test.py\n     system_bin_test()\n     system_cron_test()\n     system_disk_free_test ()\n     system_env_test()\n     system_files_count_test()\n     system_host_test()\n     system_ip_test()\n     system_pandoc_test()\n     system_python_files_test()\n     system_python_version_test()\n     system_python_virtualenv_test()\ntest/text_test.py\n     text_help_test()\n     text_match_test()\n     text_no_match_test()\n     text_agents_test()\n     text_outline_test()\n     text_markdown_test()\n     text_format_test()\n     text_round_trip_test()\n     text_grep_test()\n     text_findall_test()\n     text_functions_test()\n     text_select_lines_test()\n     text_url_test()\n     text_links_test()\n    #  text_transforms_test()\n    #      transform(test_case)\n     text_signatures_test()\n     text_anchors_test()\n     text_div_test()\ntest/tst_test.py\n     tst_test()\n     tst_time_test()\ntest/unc_test.py\n     check_page(url, min=1, max=1)\n     unc_files_test()\n     unc_docs_test()\n     unc_site_test()\ntest/user_test.py\n    #  user_import_test()\n    #  user_export_test()\n     user_list_test()\ntest/vc_test.py\n     vc_status_test()\n     vc_pull_test()\ntest/wordpress_test.py\n     wordpress_list_test()\n     wordpress_host_test()\ntool/__init__.py\n    \ntool/document.py\n     doc_cards(page)\n     doc_content(page)\n     doc_dir_exists(title)\n     doc_exists(title)\n     doc_html_text(page, image_path=None)\n     doc_link(title)\n     doc_path(page)\n     domain_doc(domain, page)\n     file_to_html(path, image_path=None)\n         fix_images(text)\n     markdown_to_html(markdown_path, html_path)\n     read_markdown(path)\n     text_to_html(text)\n     title(p1)\n     write_html_file(path, html)\ntool/domain.py\n     domain_title(domain)\n     domain_directory(domain)\ntool/email.py\n     email_command(options)\n     email_help()\n     email_args(args, use_html=True)\n     send_test_email()\n     send_file_email(args)\n     send_doc_email(args)\n     send_text_email(args)\n     send_html_email(args)\n     send_template_message(emailTo, title, template, data={})\ntool/log.py\n     log(text, value=None)\n     log_exception()\n     log_json(text, data)\n     log_file()\n     show_log()\n     log_notifications(title, recipients)\n     log_page(request, parms='')\ntool/management/__init__.py\n    \ntool/management/commands/__init__.py\n    \ntool/management/commands/scriptor.py\n         add_arguments(self, parser)\n         handle(self, *args, **options)\n         help(self)\ntool/models.py\n    \ntool/notify.py\n     notify_test_results()\n     notify_test_email()\ntool/page.py\n     page_command(self, options)\n     page_help(self)\n     page_add(self, args)\n     page_delete(self, args)\n     page_diff(self, args)\n         show_diff(page)\n     page_expect(self, args)\n     page_html(self, args)\n         show_output(page)\n     page_like(self, args)\n         like_page(page)\n     page_list(self)\n     page_lookup(url)\n     page_reset(self)\n     page_results()\n     page_text(self, args)\n         show_output(page)            \ntool/project.py\n     project_add(self, args)\n     project_command(self, options)\n     project_delete(self, args)\n     project_get(self, args)\n     project_help(self)\n     project_list(self)\n     project_lookup(name)\ntool/robot.py\n     robot_command(options)\n     robot_help(args=None)\n     robot_doc_path(doc=None)\n     robot_fetch_page(url)\n     robot_get_page(browser, page)\n     robot_list()\n     robot_login(browser,page)\n     robot_results()\n     robot_run()\ntool/tst.py\n     tst_find()\n     get_module(modulename)\n     test_map(modulename)\n         test_entry(entry)\n         tests(module)\n     tst_command(self, args)\n     test_dictionary()\n         module_list(directory)\n         test_name(module)\n     tst_diff(test_name)\n     tst_edit(self, args)\n     tst_help(self)\n     tst_like(self,args)\n     tst_list(self,args)\n     tst_output(self,args)\n     tst_register(tests)\n     tst_results()\n         show_differences(t)\n     tst_run(self,args)\n         run_test(self,test_entry)\n     tst_send(self,args)\ntool/urls.py\n    \ntool/user.py\n     user_command(self, options)\n     user_help()\n     user_add(name, email, password='test')\n     user_delete(args)\n     user_export(self, args)\n     user_get(pk)\n     user_import(self, args)\n     user_list()\n     user_password(username, password)\n     user_lookup(name, email=None)\n     user_file_path(args)\n     user_fix_name(args)\n     show_users()\n     reset_passwords()\ntool/user_views.py\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n         get_context_data(self, **kwargs)\n"
        },
        "model": "tool.test",
        "pk": 18
    },
    {
        "fields": {
            "expected": "\nCode Summary            Files     Lines\n\n    App                   218     16287\n    bin                    45      5981\n    test                   45       965\n",
            "name": "app-summary",
            "output": "\nCode Summary            Files     Lines\n\n    App                   218     16287\n    bin                    45      5981\n    test                   45       965\n"
        },
        "model": "tool.test",
        "pk": 19
    },
    {
        "fields": {
            "expected": "from os import environ\nfrom os.path import join\nfrom platform import node\n\n# Project\nHOME = environ.get('HOME', '/home/django')\nPROJECT_BASE = join(HOME, 'Projects', 'hammer')\n\n\n# Application Config\nBASE_DIR = environ.get('p', '/home/django/MyBook')\n\nAPP_PORT = '8001'\nAPP_DIRS = ['bin', 'hammer', 'test', 'tool', 'spiritual']\nAPP_DIR = 'tool'\n\n\n# Documents\nDOC_DIRS = ['tech', 'spiritual', 'software', 'seamanslog', 'brain', 'MarkSeaman']\nTODO_DIR  = join(BASE_DIR, 'Documents', 'info', 'days')\nTHOT_DIR = join(BASE_DIR, 'Documents', 'thot')\nTODO_FILES = [\n    join(TODO_DIR, '2018-05-08'),\n]\n\n\n# Test Settings\nTEST_ARCHIVE = False\nTEST_DOC = join(BASE_DIR, 'Documents', 'info', 'history', 'Index')\nTEST_DOC_ENCODING = False\nTEST_DATA = False\nTEST_SELENIUM = True\nTEST_EMAIL = False\nTEST_PAGES = join(BASE_DIR, 'Documents', 'tech', 'test', 'pages')\nTEST_HOSTS = ['localhost:8001', environ.get('DROPLET_IP','localhost')]\nIMPORT_RECORDS = True\nEXPORT_RECORDS = True\nSHOW_WEB_PAGE = False\nON_INTERNET = True\n\n\n# Servers\nWHO2HIRE_PRODUCTION  = 'app.who2hire.us'         # 138.68.46.197\nMYBOOK_PRODUCTION    = 'markseaman.org'    # 138.68.234.96  # old: 45.55.50.13\nSERVER_DIR           = '/home/django/MyBook'\n\n\n# Server Types\nif node()   == 'MyBook':           \n    SERVER_TYPE = 'production'\nelif node() == 'MyBook-Staging':   \n    SERVER_TYPE = 'staging'\nelif node() == 'Marks-iMac.local':\n    SERVER_TYPE = 'imac'\nelif node() == 'seaman-macbook.local':\n    SERVER_TYPE = 'macbook'\nelse:  \n    SERVER_TYPE = 'dev'\n\n\n# Type of server for this machine\ndef server_type():\n    return SERVER_TYPE\n\n\n# Select Domain that matches Hostname\ndef server_host(server):\n    if   server == 'who2hire':             return 'who2hire.co'\n    elif server == 'MyBook':               return 'markseaman.org'\n    elif server == 'Marks-iMac.local':     return 'iMac'\n    elif server == 'seaman-macbook.local': return 'macbook'\n    elif server == 'MCB15-3365':           return 'windows'\n    \n\n",
            "name": "app-switches",
            "output": "from os import environ\nfrom os.path import join\nfrom platform import node\n\n# Project\nHOME = environ.get('HOME', '/home/django')\nPROJECT_BASE = join(HOME, 'Projects', 'hammer')\n\n\n# Application Config\nBASE_DIR = environ.get('p', '/home/django/MyBook')\n\nAPP_PORT = '8001'\nAPP_DIRS = ['bin', 'hammer', 'test', 'tool', 'spiritual']\nAPP_DIR = 'tool'\n\n\n# Documents\nDOC_DIRS = ['tech', 'spiritual', 'software', 'seamanslog', 'brain', 'MarkSeaman']\nTODO_DIR  = join(BASE_DIR, 'Documents', 'info', 'days')\nTHOT_DIR = join(BASE_DIR, 'Documents', 'thot')\nTODO_FILES = [\n    join(TODO_DIR, '2018-05-08'),\n]\n\n\n# Test Settings\nTEST_ARCHIVE = False\nTEST_DOC = join(BASE_DIR, 'Documents', 'info', 'history', 'Index')\nTEST_DOC_ENCODING = False\nTEST_DATA = False\nTEST_SELENIUM = True\nTEST_EMAIL = False\nTEST_PAGES = join(BASE_DIR, 'Documents', 'tech', 'test', 'pages')\nTEST_HOSTS = ['localhost:8001', environ.get('DROPLET_IP','localhost')]\nIMPORT_RECORDS = True\nEXPORT_RECORDS = True\nSHOW_WEB_PAGE = False\nON_INTERNET = True\n\n\n# Servers\nWHO2HIRE_PRODUCTION  = 'app.who2hire.us'         # 138.68.46.197\nMYBOOK_PRODUCTION    = 'markseaman.org'    # 138.68.234.96  # old: 45.55.50.13\nSERVER_DIR           = '/home/django/MyBook'\n\n\n# Server Types\nif node()   == 'MyBook':           \n    SERVER_TYPE = 'production'\nelif node() == 'MyBook-Staging':   \n    SERVER_TYPE = 'staging'\nelif node() == 'Marks-iMac.local':\n    SERVER_TYPE = 'imac'\nelif node() == 'seaman-macbook.local':\n    SERVER_TYPE = 'macbook'\nelse:  \n    SERVER_TYPE = 'dev'\n\n\n# Type of server for this machine\ndef server_type():\n    return SERVER_TYPE\n\n\n# Select Domain that matches Hostname\ndef server_host(server):\n    if   server == 'who2hire':             return 'who2hire.co'\n    elif server == 'MyBook':               return 'markseaman.org'\n    elif server == 'Marks-iMac.local':     return 'iMac'\n    elif server == 'seaman-macbook.local': return 'macbook'\n    elif server == 'MCB15-3365':           return 'windows'\n    \n\n"
        },
        "model": "tool.test",
        "pk": 20
    },
    {
        "fields": {
            "expected": "faceblog command ['list']\nfaceblog list\nTimeBudget\nRandom\nOpportunity\n10000Days\nToolsSaveTime\nLearningCurve\nImportantWork\nUnfinishedBook\nLifeWork\nReadToLearn\nSiteTitle\nDailyHabits\nCommitments\nExpandContract\nMenu\nHabitualChange\nWorkMindset\nWritingWorkflow\nWhyWork\nMultitasking\nHitler\nLowCostMyth\nBusinessInvestment\nActToLearn\nScaledCommit\nStrengths\nCollaboration\nWritingStages\nPragmaticThinking\nOneImprovement\nSearch\nCareer\nProcessingIdeas\nYourBlogTopic\nIndex\nLifeFun\nLifeThatMatters\nBiggestIdea\nLifePeople\nLifeGrow\nNewYearsResolutions\nGenetics\nInvest20Percent\nCreativeScore\nRuthlessWithWaste\nFoodAndSex\nPessimism\nComputerComplexity\nIdeology\nMaunaKea\nWorkforce\nMyStory\n",
            "name": "faceblog-list",
            "output": "faceblog command ['list']\nfaceblog list\nTimeBudget\nRandom\nOpportunity\n10000Days\nToolsSaveTime\nLearningCurve\nImportantWork\nUnfinishedBook\nLifeWork\nReadToLearn\nSiteTitle\nDailyHabits\nCommitments\nExpandContract\nMenu\nHabitualChange\nWorkMindset\nWritingWorkflow\nWhyWork\nMultitasking\nHitler\nLowCostMyth\nBusinessInvestment\nActToLearn\nScaledCommit\nStrengths\nCollaboration\nWritingStages\nPragmaticThinking\nOneImprovement\nSearch\nCareer\nProcessingIdeas\nYourBlogTopic\nIndex\nLifeFun\nLifeThatMatters\nBiggestIdea\nLifePeople\nLifeGrow\nNewYearsResolutions\nGenetics\nInvest20Percent\nCreativeScore\nRuthlessWithWaste\nFoodAndSex\nPessimism\nComputerComplexity\nIdeology\nMaunaKea\nWorkforce\nMyStory\n"
        },
        "model": "tool.test",
        "pk": 21
    },
    {
        "fields": {
            "expected": "no output",
            "name": "faceblog-show",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 22
    },
    {
        "fields": {
            "expected": "28, Greeley Vineyard, 2017-01-28, 2, 2, 4, 1\n29, Greeley Vineyard, 2017-02-04, 5, 2, 2, 1\n30, Greeley Vineyard, 2017-02-11, 4, 1, 4, 2\n31, Greeley Vineyard, 2017-02-18, 2, 1, 4, 1\n32, Greeley Vineyard, 2017-02-25, 1, 1, 5, 1\n33, Greeley Vineyard, 2017-03-04, 1, 1, 5, 1\n34, Greeley Vineyard, 2017-03-11, 1, 1, 5, 1\n35, Greeley Vineyard, 2017-03-18, 1, 1, 5, 1\n36, Greeley Vineyard, 2017-03-25, 1, 1, 5, 1\n37, Greeley Vineyard, 2017-04-01, 1, 1, 2, 1\n38, Greeley Vineyard, 2017-04-08, 1, 1, 5, 1\n39, Greeley Vineyard, 2017-04-15, 0, 0, 0, 0\n40, Greeley Vineyard, 2017-04-22, 0, 0, 0, 0\n41, Greeley Vineyard, 2017-04-29, 0, 0, 0, 0\n42, Greeley Vineyard, 2017-05-06, 0, 0, 0, 0\n43, Greeley Vineyard, 2017-05-13, 0, 0, 0, 0\n44, Greeley Vineyard, 2017-05-20, 0, 0, 0, 0\n45, Greeley Vineyard, 2017-05-27, 0, 0, 0, 0\n7, Greeley Vineyard, 2016-10-08, 2, 1, 3, 5\n8, Greeley Vineyard, 2016-10-15, 2, 5, 3, 5\n9, Greeley Vineyard, 2016-10-22, 2, 1, 3, 5\n10, Greeley Vineyard, 2016-10-29, 2, 1, 1, 1\n11, Greeley Vineyard, 2016-11-05, 5, 1, 2, 1\n12, Greeley Vineyard, 2016-11-12, 5, 1, 3, 1\n13, Greeley Vineyard, 2016-11-19, 3, 5, 3, 4\n15, Greeley Vineyard, 2016-11-26, 3, 5, 4, 1\n16, Greeley Vineyard, 2016-12-03, 2, 1, 4, 4\n21, Greeley Vineyard, 2016-12-10, 4, 1, 4, 3\n22, Greeley Vineyard, 2016-12-17, 1, 5, 4, 5\n23, Greeley Vineyard, 2016-12-24, 5, 5, 4, 3\n24, Greeley Vineyard, 2016-12-31, 4, 5, 4, 2\n25, Greeley Vineyard, 2017-01-07, 4, 5, 3, 1\n26, Greeley Vineyard, 2017-01-14, 3, 5, 5, 2\n27, Greeley Vineyard, 2017-01-21, 4, 1, 5, 2\n",
            "name": "church-list",
            "output": "28, Greeley Vineyard, 2017-01-28, 2, 2, 4, 1\n29, Greeley Vineyard, 2017-02-04, 5, 2, 2, 1\n30, Greeley Vineyard, 2017-02-11, 4, 1, 4, 2\n31, Greeley Vineyard, 2017-02-18, 2, 1, 4, 1\n32, Greeley Vineyard, 2017-02-25, 1, 1, 5, 1\n33, Greeley Vineyard, 2017-03-04, 1, 1, 5, 1\n34, Greeley Vineyard, 2017-03-11, 1, 1, 5, 1\n35, Greeley Vineyard, 2017-03-18, 1, 1, 5, 1\n36, Greeley Vineyard, 2017-03-25, 1, 1, 5, 1\n37, Greeley Vineyard, 2017-04-01, 1, 1, 2, 1\n38, Greeley Vineyard, 2017-04-08, 1, 1, 5, 1\n39, Greeley Vineyard, 2017-04-15, 0, 0, 0, 0\n40, Greeley Vineyard, 2017-04-22, 0, 0, 0, 0\n41, Greeley Vineyard, 2017-04-29, 0, 0, 0, 0\n42, Greeley Vineyard, 2017-05-06, 0, 0, 0, 0\n43, Greeley Vineyard, 2017-05-13, 0, 0, 0, 0\n44, Greeley Vineyard, 2017-05-20, 0, 0, 0, 0\n45, Greeley Vineyard, 2017-05-27, 0, 0, 0, 0\n7, Greeley Vineyard, 2016-10-08, 2, 1, 3, 5\n8, Greeley Vineyard, 2016-10-15, 2, 5, 3, 5\n9, Greeley Vineyard, 2016-10-22, 2, 1, 3, 5\n10, Greeley Vineyard, 2016-10-29, 2, 1, 1, 1\n11, Greeley Vineyard, 2016-11-05, 5, 1, 2, 1\n12, Greeley Vineyard, 2016-11-12, 5, 1, 3, 1\n13, Greeley Vineyard, 2016-11-19, 3, 5, 3, 4\n15, Greeley Vineyard, 2016-11-26, 3, 5, 4, 1\n16, Greeley Vineyard, 2016-12-03, 2, 1, 4, 4\n21, Greeley Vineyard, 2016-12-10, 4, 1, 4, 3\n22, Greeley Vineyard, 2016-12-17, 1, 5, 4, 5\n23, Greeley Vineyard, 2016-12-24, 5, 5, 4, 3\n24, Greeley Vineyard, 2016-12-31, 4, 5, 4, 2\n25, Greeley Vineyard, 2017-01-07, 4, 5, 3, 1\n26, Greeley Vineyard, 2017-01-14, 3, 5, 5, 2\n27, Greeley Vineyard, 2017-01-21, 4, 1, 5, 2\n"
        },
        "model": "tool.test",
        "pk": 23
    },
    {
        "fields": {
            "expected": "no output",
            "name": "church-show",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 24
    },
    {
        "fields": {
            "expected": "<table class=\"table table-hover\">\n  <th class=\"palette-Teal-100 bg\">X</th>\n  <th class=\"palette-Teal-100 bg\">Y</th>\n  <th class=\"palette-Teal-100 bg\">Z</th>\n  <tr>\n    <td>a</td>\n    <td>b</td>\n    <td>c</td>\n  </tr>\n  <tr>\n    <td>1</td>\n    <td>2</td>\n    <td>3</td>\n  </tr>\n  <tr>\n    <td>4</td>\n    <td>5</td>\n    <td>6</td>\n  </tr>\n  <tr>\n    <td>7</td>\n    <td>8</td>\n    <td>9</td>\n  </tr>\n</table>",
            "name": "table-format",
            "output": "<table class=\"table table-hover\">\n  <th class=\"palette-Teal-100 bg\">X</th>\n  <th class=\"palette-Teal-100 bg\">Y</th>\n  <th class=\"palette-Teal-100 bg\">Z</th>\n  <tr>\n    <td>a</td>\n    <td>b</td>\n    <td>c</td>\n  </tr>\n  <tr>\n    <td>1</td>\n    <td>2</td>\n    <td>3</td>\n  </tr>\n  <tr>\n    <td>4</td>\n    <td>5</td>\n    <td>6</td>\n  </tr>\n  <tr>\n    <td>7</td>\n    <td>8</td>\n    <td>9</td>\n  </tr>\n</table>"
        },
        "model": "tool.test",
        "pk": 25
    },
    {
        "fields": {
            "expected": "[['a', 'b', 'c'], ['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']]",
            "name": "table-from-text",
            "output": "[['a', 'b', 'c'], ['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']]"
        },
        "model": "tool.test",
        "pk": 26
    },
    {
        "fields": {
            "expected": "    b          92         3         \n    a          25         c         \n    c          8          9         \n    d          5          6         ",
            "name": "table-sort",
            "output": "    b          92         3         \n    a          25         c         \n    c          8          9         \n    d          5          6         "
        },
        "model": "tool.test",
        "pk": 27
    },
    {
        "fields": {
            "expected": "    a          b          c         \n    1          2          3         \n    4          5          6         \n    7          8          9         ",
            "name": "table-to-text",
            "output": "    a          b          c         \n    1          2          3         \n    4          5          6         \n    7          8          9         "
        },
        "model": "tool.test",
        "pk": 28
    },
    {
        "fields": {
            "expected": "plan list\nSiteTitle\nTo_Do_List\nMenu\nBio_Hammer/Index\nAdvisor/A_Better_Life\nAdvisor/Index\nGoals/Aspirations_(100%)\nGoals/Index\nGoals/Work_(40%)\nJournal/My_Future_Life\nJournal/Index\nWho2Hire/Index\nBuilding_Software/Django_templates\nBuilding_Software/Markdown_Formatter\nBuilding_Software/Database_initialization\nBuilding_Software/Code_generators\nBuilding_Software/Canonical_views\nBuilding_Software/Standard_Theme\nBuilding_Software/User_Registration\nBuilding_Software/Database_Migration\nBuilding_Software/Simple_Application\nBuilding_Software/JavaScript\nBuilding_Software/Command_scripts\nBuilding_Software/Index\nBuilding_Software/Material_Theme\nBuilding_Software/Standard_queries\nBuilding_Software/Django_App_Structure\nBuilding_Software/Database_connection\nBuilding_Software/Views\nBuilding_Software/CSS\nBuilding_Software/URLs\nBuilding_Software/Data_Models\nBuilding_Software/Import/Export\nThot_Recorder/Thot_System_Design_Notes\nThot_Recorder/Index\nCreativity/Creativity_Journal\nCreativity/Index\nApp_Design/Index\nApp_Design/Project_Milestones\nApp_Design/Money_App_Design\nWork_Modes/Index\nToDo/To_Do_List\nToDo/Urgent\nToDo/Index\n",
            "name": "plan-list",
            "output": "plan list\nSiteTitle\nTo_Do_List\nMenu\nBio_Hammer/Index\nAdvisor/A_Better_Life\nAdvisor/Index\nGoals/Aspirations_(100%)\nGoals/Index\nGoals/Work_(40%)\nJournal/My_Future_Life\nJournal/Index\nWho2Hire/Index\nBuilding_Software/Django_templates\nBuilding_Software/Markdown_Formatter\nBuilding_Software/Database_initialization\nBuilding_Software/Code_generators\nBuilding_Software/Canonical_views\nBuilding_Software/Standard_Theme\nBuilding_Software/User_Registration\nBuilding_Software/Database_Migration\nBuilding_Software/Simple_Application\nBuilding_Software/JavaScript\nBuilding_Software/Command_scripts\nBuilding_Software/Index\nBuilding_Software/Material_Theme\nBuilding_Software/Standard_queries\nBuilding_Software/Django_App_Structure\nBuilding_Software/Database_connection\nBuilding_Software/Views\nBuilding_Software/CSS\nBuilding_Software/URLs\nBuilding_Software/Data_Models\nBuilding_Software/Import/Export\nThot_Recorder/Thot_System_Design_Notes\nThot_Recorder/Index\nCreativity/Creativity_Journal\nCreativity/Index\nApp_Design/Index\nApp_Design/Project_Milestones\nApp_Design/Money_App_Design\nWork_Modes/Index\nToDo/To_Do_List\nToDo/Urgent\nToDo/Index\n"
        },
        "model": "tool.test",
        "pk": 29
    },
    {
        "fields": {
            "expected": "no output",
            "name": "plan-show",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 30
    },
    {
        "fields": {
            "expected": "\nHourly Tasks\n\n\n          echo \"PATH=\" `path`\n          echo \"env=\" `env`\n          echo Python: `which python`\n          # git status\n          x tst\n          x tst list\n          x tst send\n      \n\nDaily Tasks\n\n\n          # x spiritual article\n          # x seamanslog article\n          x data backup\n          rm $p/log/django.log\n      \n",
            "name": "hourly-list",
            "output": "\nHourly Tasks\n\n\n          echo \"PATH=\" `path`\n          echo \"env=\" `env`\n          echo Python: `which python`\n          # git status\n          x tst\n          x tst list\n          x tst send\n      \n\nDaily Tasks\n\n\n          # x spiritual article\n          # x seamanslog article\n          x data backup\n          # rm $p/log/django.log\n      \n"
        },
        "model": "tool.test",
        "pk": 31
    },
    {
        "fields": {
            "expected": "no output",
            "name": "hourly-show",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 32
    },
    {
        "fields": {
            "expected": "\n        Command not found, staging ['command', 'hostname']\n\n        usage: x cmd [args]\n\n        cmd\n\n            app         # Work with application code\n            aspire      # Set personal goals\n            author      # Manage writing content\n            booknotes   # Manage notes for reading\n            cmd         # Manage command scripts\n            collab      # Application collaborator\n            data        # Database scripting\n            doc         # Manage project documents\n            hourly      # Hourly command for maintence\n            hours       # Hours of invested time\n            log         # Manage logs\n            page        # Page Master app\n            plan        # Planning Script\n            ops         # Operations script\n            project     # Projects for clients\n            robot       # Web Robot using Selenium to fetch web pages\n            seamanslog  # Seaman's Log blog\n            spiritual   # Spiritual Things subscriber list\n            software    # Work with software training materials\n            src         # Manage source code\n            staging     # Manage server at Digital Ocean\n            task        # Task Master\n            thot        # Thot recorder\n            todo        # To do list command\n            tool        # Manage django tool scripts\n            tst         # Run tests with expected results\n            web         # Web pages\n            wordpress   # Work with wordpress server at Digital Ocean\n\n        Example: x staging ip\n                 x doc list\n                 x tst run\n        \n",
            "name": "staging-host",
            "output": "\n        Command not found, staging ['command', 'hostname']\n\n        usage: x cmd [args]\n\n        cmd\n\n            app         # Work with application code\n            aspire      # Set personal goals\n            author      # Manage writing content\n            booknotes   # Manage notes for reading\n            cmd         # Manage command scripts\n            collab      # Application collaborator\n            data        # Database scripting\n            doc         # Manage project documents\n            hourly      # Hourly command for maintence\n            hours       # Hours of invested time\n            log         # Manage logs\n            page        # Page Master app\n            plan        # Planning Script\n            ops         # Operations script\n            project     # Projects for clients\n            robot       # Web Robot using Selenium to fetch web pages\n            seamanslog  # Seaman's Log blog\n            spiritual   # Spiritual Things subscriber list\n            software    # Work with software training materials\n            src         # Manage source code\n            staging     # Manage server at Digital Ocean\n            task        # Task Master\n            thot        # Thot recorder\n            todo        # To do list command\n            tool        # Manage django tool scripts\n            tst         # Run tests with expected results\n            web         # Web pages\n            wordpress   # Work with wordpress server at Digital Ocean\n\n        Example: x staging ip\n                 x doc list\n                 x tst run\n        \n"
        },
        "model": "tool.test",
        "pk": 33
    },
    {
        "fields": {
            "expected": "\n        Command not found, staging ['ip']\n\n        usage: x cmd [args]\n\n        cmd\n\n            app         # Work with application code\n            aspire      # Set personal goals\n            author      # Manage writing content\n            booknotes   # Manage notes for reading\n            cmd         # Manage command scripts\n            collab      # Application collaborator\n            data        # Database scripting\n            doc         # Manage project documents\n            hourly      # Hourly command for maintence\n            hours       # Hours of invested time\n            log         # Manage logs\n            page        # Page Master app\n            plan        # Planning Script\n            ops         # Operations script\n            project     # Projects for clients\n            robot       # Web Robot using Selenium to fetch web pages\n            seamanslog  # Seaman's Log blog\n            spiritual   # Spiritual Things subscriber list\n            software    # Work with software training materials\n            src         # Manage source code\n            staging     # Manage server at Digital Ocean\n            task        # Task Master\n            thot        # Thot recorder\n            todo        # To do list command\n            tool        # Manage django tool scripts\n            tst         # Run tests with expected results\n            web         # Web pages\n            wordpress   # Work with wordpress server at Digital Ocean\n\n        Example: x staging ip\n                 x doc list\n                 x tst run\n        \n",
            "name": "staging-ip",
            "output": "\n        Command not found, staging ['ip']\n\n        usage: x cmd [args]\n\n        cmd\n\n            app         # Work with application code\n            aspire      # Set personal goals\n            author      # Manage writing content\n            booknotes   # Manage notes for reading\n            cmd         # Manage command scripts\n            collab      # Application collaborator\n            data        # Database scripting\n            doc         # Manage project documents\n            hourly      # Hourly command for maintence\n            hours       # Hours of invested time\n            log         # Manage logs\n            page        # Page Master app\n            plan        # Planning Script\n            ops         # Operations script\n            project     # Projects for clients\n            robot       # Web Robot using Selenium to fetch web pages\n            seamanslog  # Seaman's Log blog\n            spiritual   # Spiritual Things subscriber list\n            software    # Work with software training materials\n            src         # Manage source code\n            staging     # Manage server at Digital Ocean\n            task        # Task Master\n            thot        # Thot recorder\n            todo        # To do list command\n            tool        # Manage django tool scripts\n            tst         # Run tests with expected results\n            web         # Web pages\n            wordpress   # Work with wordpress server at Digital Ocean\n\n        Example: x staging ip\n                 x doc list\n                 x tst run\n        \n"
        },
        "model": "tool.test",
        "pk": 34
    },
    {
        "fields": {
            "expected": "no output",
            "name": "author-drafts",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 35
    },
    {
        "fields": {
            "expected": "  10 - capture\n  40 - draft\n  90 - refine\n 160 - share\n 300 Total\n",
            "name": "author-score",
            "output": "  10 - capture\n  40 - draft\n  90 - refine\n 160 - share\n 300 Total\n"
        },
        "model": "tool.test",
        "pk": 36
    },
    {
        "fields": {
            "expected": "no output",
            "name": "author-summary",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 37
    },
    {
        "fields": {
            "expected": "no output",
            "name": "system-disk-free",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 38
    },
    {
        "fields": {
            "expected": "no output",
            "name": "system-files-count",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 39
    },
    {
        "fields": {
            "expected": "Hostname: MyBook",
            "name": "system-host",
            "output": "Hostname: MyBook"
        },
        "model": "tool.test",
        "pk": 40
    },
    {
        "fields": {
            "expected": "shell(ifconfig) --> 23 lines (should be between 51 and 69)",
            "name": "system-ip",
            "output": "shell(ifconfig) --> 23 lines (should be between 51 and 69)"
        },
        "model": "tool.test",
        "pk": 41
    },
    {
        "fields": {
            "expected": "<h1 id=\"history-of-activity\">History of Activity</h1>\n<p><a href=\"Today\" class=\"uri\">Today</a></p>\n<h2 id=\"section\">2015</h2>\n<ul>\n<li><a href=\"2015-09\">September</a></li>\n<li><a href=\"2015-10\">October</a></li>\n<li><a href=\"2015-11\">November</a></li>\n<li><a href=\"2015-12\">December</a></li>\n</ul>\n<h2 id=\"section-1\">2016</h2>\n<ul>\n<li><a href=\"2016-01\">January</a></li>\n<li><a href=\"2016-02\">February</a></li>\n<li><a href=\"2016-03\">March</a></li>\n<li><a href=\"2016-04\">April</a></li>\n<li><a href=\"2016-05\">May</a></li>\n<li><a href=\"2016-06\">June</a></li>\n<li><a href=\"2016-07\">July</a></li>\n<li><a href=\"2016-08\">August</a></li>\n<li><a href=\"2016-09\">September</a></li>\n<li><a href=\"2016-10\">October</a></li>\n<li><a href=\"2016-11\">November</a></li>\n</ul>\n",
            "name": "system-pandoc",
            "output": "<h1 id=\"history-of-activity\">History of Activity</h1>\n<p><a href=\"Today\" class=\"uri\">Today</a></p>\n<h2 id=\"section\">2015</h2>\n<ul>\n<li><a href=\"2015-09\">September</a></li>\n<li><a href=\"2015-10\">October</a></li>\n<li><a href=\"2015-11\">November</a></li>\n<li><a href=\"2015-12\">December</a></li>\n</ul>\n<h2 id=\"section-1\">2016</h2>\n<ul>\n<li><a href=\"2016-01\">January</a></li>\n<li><a href=\"2016-02\">February</a></li>\n<li><a href=\"2016-03\">March</a></li>\n<li><a href=\"2016-04\">April</a></li>\n<li><a href=\"2016-05\">May</a></li>\n<li><a href=\"2016-06\">June</a></li>\n<li><a href=\"2016-07\">July</a></li>\n<li><a href=\"2016-08\">August</a></li>\n<li><a href=\"2016-09\">September</a></li>\n<li><a href=\"2016-10\">October</a></li>\n<li><a href=\"2016-11\">November</a></li>\n</ul>\n"
        },
        "model": "tool.test",
        "pk": 42
    },
    {
        "fields": {
            "expected": "Package              Version\n-------------------- -------\nacme                 0.4.1  \nchardet              2.3.0  \nConfigArgParse       0.10.0 \nconfigobj            5.0.6  \ncryptography         1.2.3  \nDjango               1.11   \ndjrill               2.1.0  \ndocopt               0.4.0  \nenum34               1.1.2  \nfuncsigs             0.4    \ngevent               1.1.0  \ngreenlet             0.4.9  \ngunicorn             19.4.5 \nidna                 2.0    \nipaddress            1.0.16 \nletsencrypt          0.4.1  \nmandrill             1.0.57 \nmock                 1.3.0  \nndg-httpsclient      0.4.0  \nnetifaces            0.10.4 \nparsedatetime        1.4    \npbr                  1.8.0  \npip                  18.1   \npsutil               3.4.2  \npsycopg2             2.6.1  \npyasn1               0.1.9  \nPyICU                1.9.2  \npyOpenSSL            0.15.1 \npyRFC3339            1.0    \npython-http-client   2.2.1  \npython2-pythondialog 3.3.0  \npytz                 2014.10\nrequests             2.13.0 \nselenium             3.4.1  \nsendgrid             4.2.0  \nsetuptools           20.7.0 \nsix                  1.10.0 \nSouth                1.0    \nsqlparse             0.1.18 \nstripe               1.51.0 \nurllib3              1.24.1 \nvirtualenv           15.0.1 \nwheel                0.29.0 \nzope.component       4.2.2  \nzope.event           4.2.0  \nzope.hookable        4.0.4  \nzope.interface       4.1.3  \n",
            "name": "system-pip",
            "output": "Package              Version\n-------------------- -------\nacme                 0.4.1  \nchardet              2.3.0  \nConfigArgParse       0.10.0 \nconfigobj            5.0.6  \ncryptography         1.2.3  \nDjango               1.11   \ndjrill               2.1.0  \ndocopt               0.4.0  \nenum34               1.1.2  \nfuncsigs             0.4    \ngevent               1.1.0  \ngreenlet             0.4.9  \ngunicorn             19.4.5 \nidna                 2.0    \nipaddress            1.0.16 \nletsencrypt          0.4.1  \nmandrill             1.0.57 \nmock                 1.3.0  \nndg-httpsclient      0.4.0  \nnetifaces            0.10.4 \nparsedatetime        1.4    \npbr                  1.8.0  \npip                  18.1   \npsutil               3.4.2  \npsycopg2             2.6.1  \npyasn1               0.1.9  \nPyICU                1.9.2  \npyOpenSSL            0.15.1 \npyRFC3339            1.0    \npython-http-client   2.2.1  \npython2-pythondialog 3.3.0  \npytz                 2014.10\nrequests             2.13.0 \nselenium             3.4.1  \nsendgrid             4.2.0  \nsetuptools           20.7.0 \nsix                  1.10.0 \nSouth                1.0    \nsqlparse             0.1.18 \nstripe               1.51.0 \nurllib3              1.24.1 \nvirtualenv           15.0.1 \nwheel                0.29.0 \nzope.component       4.2.2  \nzope.event           4.2.0  \nzope.hookable        4.0.4  \nzope.interface       4.1.3  \n"
        },
        "model": "tool.test",
        "pk": 43
    },
    {
        "fields": {
            "expected": "no output",
            "name": "system-python-files",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 44
    },
    {
        "fields": {
            "expected": "sys.version_info(major=2, minor=7, micro=12, releaselevel='final', serial=0)",
            "name": "system-python-version",
            "output": "sys.version_info(major=2, minor=7, micro=12, releaselevel='final', serial=0)"
        },
        "model": "tool.test",
        "pk": 45
    },
    {
        "fields": {
            "expected": "/usr/bin/python\n",
            "name": "system-python-virtualenv",
            "output": "/usr/bin/python\n"
        },
        "model": "tool.test",
        "pk": 46
    },
    {
        "fields": {
            "expected": "TimeBudget\nOpportunity\n10000Days\nToolsSaveTime\nLearningCurve\nImportantWork\nUnfinishedBook\nLifeWork\nReadToLearn\nSiteTitle\nDailyHabits\nCommitments\nExpandContract\nMenu\nHabitualChange\nWorkMindset\nWritingWorkflow\nWhyWork\nMultitasking\nHitler\nLowCostMyth\nBusinessInvestment\nActToLearn\nScaledCommit\nStrengths\nCollaboration\nWritingStages\nPragmaticThinking\nOneImprovement\nSearch\nCareer\nProcessingIdeas\nYourBlogTopic\nIndex\nLifeFun\nLifeThatMatters\nBiggestIdea\nLifePeople\nLifeGrow\nNewYearsResolutions\nGenetics\nInvest20Percent\nCreativeScore\nRuthlessWithWaste\nFoodAndSex\nPessimism\nComputerComplexity\nIdeology\nMaunaKea\nWorkforce\nMyStory\n",
            "name": "seamanslog-list",
            "output": "TimeBudget\nOpportunity\n10000Days\nToolsSaveTime\nLearningCurve\nImportantWork\nUnfinishedBook\nLifeWork\nReadToLearn\nSiteTitle\nDailyHabits\nCommitments\nExpandContract\nMenu\nHabitualChange\nWorkMindset\nWritingWorkflow\nWhyWork\nMultitasking\nHitler\nLowCostMyth\nBusinessInvestment\nActToLearn\nScaledCommit\nStrengths\nCollaboration\nWritingStages\nPragmaticThinking\nOneImprovement\nSearch\nCareer\nProcessingIdeas\nYourBlogTopic\nIndex\nLifeFun\nLifeThatMatters\nBiggestIdea\nLifePeople\nLifeGrow\nNewYearsResolutions\nGenetics\nInvest20Percent\nCreativeScore\nRuthlessWithWaste\nFoodAndSex\nPessimism\nComputerComplexity\nIdeology\nMaunaKea\nWorkforce\nMyStory\n"
        },
        "model": "tool.test",
        "pk": 47
    },
    {
        "fields": {
            "expected": "no output",
            "name": "seamanslog-show",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 48
    },
    {
        "fields": {
            "expected": "    seamanslog                       51        1897         17 K\n\n",
            "name": "seamanslog-summary",
            "output": "    seamanslog                       51        1897         17 K\n\n"
        },
        "model": "tool.test",
        "pk": 49
    },
    {
        "fields": {
            "expected": "   439 seamanslog/TimeBudget\n   203 seamanslog/Opportunity\n   573 seamanslog/10000Days\n   411 seamanslog/ToolsSaveTime\n   547 seamanslog/LearningCurve\n   186 seamanslog/ImportantWork\n   439 seamanslog/UnfinishedBook\n   249 seamanslog/LifeWork\n   502 seamanslog/ReadToLearn\n     8 seamanslog/SiteTitle\n   409 seamanslog/DailyHabits\n   263 seamanslog/Commitments\n   246 seamanslog/ExpandContract\n     7 seamanslog/Menu\n   440 seamanslog/HabitualChange\n   605 seamanslog/WorkMindset\n   340 seamanslog/WritingWorkflow\n   307 seamanslog/WhyWork\n   487 seamanslog/Multitasking\n   324 seamanslog/Hitler\n   211 seamanslog/LowCostMyth\n   541 seamanslog/BusinessInvestment\n   341 seamanslog/ActToLearn\n   439 seamanslog/ScaledCommit\n   454 seamanslog/Strengths\n   356 seamanslog/Collaboration\n   614 seamanslog/WritingStages\n   490 seamanslog/PragmaticThinking\n   354 seamanslog/OneImprovement\n   420 seamanslog/Search\n   478 seamanslog/Career\n   344 seamanslog/ProcessingIdeas\n   284 seamanslog/YourBlogTopic\n    43 seamanslog/Index\n   223 seamanslog/LifeFun\n   109 seamanslog/LifeThatMatters\n    84 seamanslog/BiggestIdea\n   206 seamanslog/LifePeople\n   205 seamanslog/LifeGrow\n   332 seamanslog/NewYearsResolutions\n   262 seamanslog/Genetics\n   642 seamanslog/Invest20Percent\n   137 seamanslog/CreativeScore\n   326 seamanslog/RuthlessWithWaste\n   507 seamanslog/FoodAndSex\n   118 seamanslog/Pessimism\n   497 seamanslog/ComputerComplexity\n   360 seamanslog/Ideology\n   388 seamanslog/MaunaKea\n   192 seamanslog/Workforce\n   183 seamanslog/MyStory\n 17125\n",
            "name": "seamanslog-words",
            "output": "   439 seamanslog/TimeBudget\n   203 seamanslog/Opportunity\n   573 seamanslog/10000Days\n   411 seamanslog/ToolsSaveTime\n   547 seamanslog/LearningCurve\n   186 seamanslog/ImportantWork\n   439 seamanslog/UnfinishedBook\n   249 seamanslog/LifeWork\n   502 seamanslog/ReadToLearn\n     8 seamanslog/SiteTitle\n   409 seamanslog/DailyHabits\n   263 seamanslog/Commitments\n   246 seamanslog/ExpandContract\n     7 seamanslog/Menu\n   440 seamanslog/HabitualChange\n   605 seamanslog/WorkMindset\n   340 seamanslog/WritingWorkflow\n   307 seamanslog/WhyWork\n   487 seamanslog/Multitasking\n   324 seamanslog/Hitler\n   211 seamanslog/LowCostMyth\n   541 seamanslog/BusinessInvestment\n   341 seamanslog/ActToLearn\n   439 seamanslog/ScaledCommit\n   454 seamanslog/Strengths\n   356 seamanslog/Collaboration\n   614 seamanslog/WritingStages\n   490 seamanslog/PragmaticThinking\n   354 seamanslog/OneImprovement\n   420 seamanslog/Search\n   478 seamanslog/Career\n   344 seamanslog/ProcessingIdeas\n   284 seamanslog/YourBlogTopic\n    43 seamanslog/Index\n   223 seamanslog/LifeFun\n   109 seamanslog/LifeThatMatters\n    84 seamanslog/BiggestIdea\n   206 seamanslog/LifePeople\n   205 seamanslog/LifeGrow\n   332 seamanslog/NewYearsResolutions\n   262 seamanslog/Genetics\n   642 seamanslog/Invest20Percent\n   137 seamanslog/CreativeScore\n   326 seamanslog/RuthlessWithWaste\n   507 seamanslog/FoodAndSex\n   118 seamanslog/Pessimism\n   497 seamanslog/ComputerComplexity\n   360 seamanslog/Ideology\n   388 seamanslog/MaunaKea\n   192 seamanslog/Workforce\n   183 seamanslog/MyStory\n 17125\n"
        },
        "model": "tool.test",
        "pk": 50
    },
    {
        "fields": {
            "expected": "\n        score Command\n\n        usage: x score COMMAND\n\n        COMMAND:\n\n            edit    - edit the scorecard\n            show    - show the doc content\n            update  - calculate the score\n            web     - show the remote scorecard\n\n        \n",
            "name": "score-list",
            "output": "\n        score Command\n\n        usage: x score COMMAND\n\n        COMMAND:\n\n            edit    - edit the scorecard\n            show    - show the doc content\n            update  - calculate the score\n            web     - show the remote scorecard\n\n        \n"
        },
        "model": "tool.test",
        "pk": 51
    },
    {
        "fields": {
            "expected": "shell(x score show) --> 15 lines (should be between 30 and 35)",
            "name": "score-show",
            "output": "shell(x score show) --> 15 lines (should be between 30 and 35)"
        },
        "model": "tool.test",
        "pk": 52
    },
    {
        "fields": {
            "expected": "                                    Sleep   Weight      Eat  Exercise \n",
            "name": "health-list",
            "output": "                                    Sleep   Weight      Eat  Exercise \n"
        },
        "model": "tool.test",
        "pk": 53
    },
    {
        "fields": {
            "expected": "shell(x health score) --> 2 lines (should be between 10 and 80)",
            "name": "health-score",
            "output": "shell(x health score) --> 2 lines (should be between 10 and 80)"
        },
        "model": "tool.test",
        "pk": 54
    },
    {
        "fields": {
            "expected": "shell(x music tracks) --> 3 lines (should be between 1000 and 1600)",
            "name": "music-list",
            "output": "shell(x music tracks) --> 3 lines (should be between 1000 and 1600)"
        },
        "model": "tool.test",
        "pk": 55
    },
    {
        "fields": {
            "expected": "app-classes\napp-functions\napp-html-files\napp-list\napp-score\napp-settings\napp-show\napp-signature\napp-summary\napp-switches\napp-url\narchive-content\narchive-dirs\narchive-files\narchive-nts\narchive-repo\naspire-list\naspire-report\naspire-score\naspire-show\naspire-week\nauthor-drafts\nauthor-score\nauthor-summary\nbooknotes-lines\nbooknotes-list\nbooknotes-show\nbudget-list\nbudget-show\nbudget-total\nchurch-export\nchurch-list\nchurch-show\ncmd-list\ncmd-show\ncss\ncss-mybook\ncss-slides\ncss-unc\ndata-files\ndata-migrate\ndata-save\ndata-tables\ndatatype-list\ndatatype-show\ndays-list\ndays-month\ndays-schedule\ndays-show\ndoc\ndoc-encoding\ndoc-file\ndoc-file-missing\ndoc-help\ndoc-html\ndoc-render\ndoc-scan\ndoc-score\ndoc-search\ndoc-show\ndoc-status\ndoc-summary\nemail\nfaceblog-list\nfaceblog-show\nhealth-list\nhealth-score\nhourly-list\nhourly-show\nhours-activity\nhours-add\nhours-days\nhours-show\nhours-summary\nhours-work\ni-list\nlife-index\nlife-list\nlife-show\nlog-length\nmusic-list\nmybook-menu\nmybook-menu-aspire\nmybook-menu-booknotes\nmybook-menu-brain\nmybook-menu-leverage\nmybook-menu-list\nmybook-menu-mybook\nmybook-menu-software\nmybook-menu-spiritual\nmybook-menu-swo\nmybook-redirect\nmybook-site-title\nnode-self\nopc-list\nopc-show\nops-help\nops-server\nops-server-type\nops-status\npage-diff\npage-list\npage-sites\npage-text\nplan-list\nplan-show\nproject-export\nproject-import\nproject-list\nproject-template\nreuse-list\nreuse-show\nrobot-list\nrobot-results\nrobot-show\nscore-list\nscore-show\nseamanslog-list\nseamanslog-show\nseamanslog-summary\nseamanslog-words\nsoftware-list\nsoftware-show\nsoftware-stats\nsoftware-summary\nsrc-base\nsrc-changed\nsrc-common\nsrc-diff\nsrc-list\nsrc-missing\nsrc-same\nsrc-unique\nstaging-host\nstaging-ip\nsystem-bin\nsystem-cron\nsystem-disk-free\nsystem-env\nsystem-files-count\nsystem-host\nsystem-ip\nsystem-pandoc\nsystem-pip\nsystem-python-files\nsystem-python-version\nsystem-python-virtualenv\ntable-format\ntable-from-text\ntable-sort\ntable-to-text\ntask-import\ntask-month\ntask-totals\ntask-week\ntask-work\ntext-agents\ntext-anchors\ntext-div\ntext-findall\ntext-format\ntext-functions\ntext-grep\ntext-help\ntext-links\ntext-markdown\ntext-match\ntext-no-match\ntext-outline\ntext-round-trip\ntext-select-lines\ntext-signatures\ntext-transforms\ntext-url\nthot-list\nthot-show\ntst\ntst-time\nunc-docs\nunc-files\nunc-site\nuser-list\nvc-pull\nvc-status\nwordpress-host\nwordpress-list\n",
            "name": "tst",
            "output": "app-classes\napp-functions\napp-html-files\napp-list\napp-score\napp-settings\napp-show\napp-signature\napp-summary\napp-switches\napp-url\narchive-content\narchive-dirs\narchive-files\narchive-nts\narchive-repo\naspire-list\naspire-report\naspire-score\naspire-show\naspire-week\nauthor-drafts\nauthor-score\nauthor-summary\nbooknotes-lines\nbooknotes-list\nbooknotes-show\nbudget-list\nbudget-show\nbudget-total\nchurch-export\nchurch-list\nchurch-show\ncmd-list\ncmd-show\ncss\ncss-mybook\ncss-slides\ncss-unc\ndata-files\ndata-migrate\ndata-save\ndata-tables\ndatatype-list\ndatatype-show\ndays-list\ndays-month\ndays-schedule\ndays-show\ndoc\ndoc-encoding\ndoc-file\ndoc-file-missing\ndoc-help\ndoc-html\ndoc-render\ndoc-scan\ndoc-score\ndoc-search\ndoc-show\ndoc-status\ndoc-summary\nemail\nfaceblog-list\nfaceblog-show\nhealth-list\nhealth-score\nhourly-list\nhourly-show\nhours-activity\nhours-add\nhours-days\nhours-show\nhours-summary\nhours-work\ni-list\nlife-index\nlife-list\nlife-show\nlog-length\nmusic-list\nmybook-menu\nmybook-menu-aspire\nmybook-menu-booknotes\nmybook-menu-brain\nmybook-menu-leverage\nmybook-menu-list\nmybook-menu-mybook\nmybook-menu-software\nmybook-menu-spiritual\nmybook-menu-swo\nmybook-redirect\nmybook-site-title\nnode-self\nopc-list\nopc-show\nops-help\nops-server\nops-server-type\nops-status\npage-diff\npage-list\npage-sites\npage-text\nplan-list\nplan-show\nproject-export\nproject-import\nproject-list\nproject-template\nreuse-list\nreuse-show\nrobot-list\nrobot-results\nrobot-show\nscore-list\nscore-show\nseamanslog-list\nseamanslog-show\nseamanslog-summary\nseamanslog-words\nsoftware-list\nsoftware-show\nsoftware-stats\nsoftware-summary\nsrc-base\nsrc-changed\nsrc-common\nsrc-diff\nsrc-list\nsrc-missing\nsrc-same\nsrc-unique\nstaging-host\nstaging-ip\nsystem-bin\nsystem-cron\nsystem-disk-free\nsystem-env\nsystem-files-count\nsystem-host\nsystem-ip\nsystem-pandoc\nsystem-pip\nsystem-python-files\nsystem-python-version\nsystem-python-virtualenv\ntable-format\ntable-from-text\ntable-sort\ntable-to-text\ntask-import\ntask-month\ntask-totals\ntask-week\ntask-work\ntext-agents\ntext-anchors\ntext-div\ntext-findall\ntext-format\ntext-functions\ntext-grep\ntext-help\ntext-links\ntext-markdown\ntext-match\ntext-no-match\ntext-outline\ntext-round-trip\ntext-select-lines\ntext-signatures\ntext-transforms\ntext-url\nthot-list\nthot-show\ntst\ntst-time\nunc-docs\nunc-files\nunc-site\nuser-list\nvc-pull\nvc-status\nwordpress-host\nwordpress-list\n"
        },
        "model": "tool.test",
        "pk": 56
    },
    {
        "fields": {
            "expected": "shell(x node test) --> 26 lines (should be between 36 and 56)",
            "name": "node-self",
            "output": "shell(x node test) --> 26 lines (should be between 36 and 56)"
        },
        "model": "tool.test",
        "pk": 57
    },
    {
        "fields": {
            "expected": "shell(x life show Index) --> 58 lines (should be between 60 and 70)",
            "name": "life-index",
            "output": "shell(x life show Index) --> 58 lines (should be between 60 and 70)"
        },
        "model": "tool.test",
        "pk": 58
    },
    {
        "fields": {
            "expected": "life list\nPeople\nLife\nIndex\nGrowth\nWork\nExperience\nContents\n",
            "name": "life-list",
            "output": "life list\nPeople\nLife\nIndex\nGrowth\nWork\nExperience\nContents\n"
        },
        "model": "tool.test",
        "pk": 59
    },
    {
        "fields": {
            "expected": "no output",
            "name": "life-show",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 60
    },
    {
        "fields": {
            "expected": "Tester\nNotes\nBook\nTechnology\nFrontEnd\nTest\nIndex\nPlanner\nApp\nHammerPrinciple\nScript\nContents\nBackEnd\nArchitecture\nPhotos\nTricks\n",
            "name": "reuse-list",
            "output": "Tester\nNotes\nBook\nTechnology\nFrontEnd\nTest\nIndex\nPlanner\nApp\nHammerPrinciple\nScript\nContents\nBackEnd\nArchitecture\nPhotos\nTricks\n"
        },
        "model": "tool.test",
        "pk": 61
    },
    {
        "fields": {
            "expected": "no output",
            "name": "reuse-show",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 62
    },
    {
        "fields": {
            "expected": "no output",
            "name": "ops-help",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 63
    },
    {
        "fields": {
            "expected": "Ops Command - production server\n\n        ops production ['server']\n\n        usage: x ops COMMAND [ARGS]\n\n        COMMAND:\n\n            command - execute a single command on the remote server\n            console - login to production\n            deploy  - push all changes to staging server\n            log     - show the log on the production server\n            restart - restart the web server\n            root    - show the root console\n            update  - push all files to remote server\n\n        \n",
            "name": "ops-server",
            "output": "Ops Command - production server\n\n        ops production ['server']\n\n        usage: x ops COMMAND [ARGS]\n\n        COMMAND:\n\n            command - execute a single command on the remote server\n            console - login to production\n            deploy  - push all changes to staging server\n            log     - show the log on the production server\n            restart - restart the web server\n            root    - show the root console\n            update  - push all files to remote server\n\n        \n"
        },
        "model": "tool.test",
        "pk": 64
    },
    {
        "fields": {
            "expected": "Ops Command - production type\n\n        ops production ['type']\n\n        usage: x ops COMMAND [ARGS]\n\n        COMMAND:\n\n            command - execute a single command on the remote server\n            console - login to production\n            deploy  - push all changes to staging server\n            log     - show the log on the production server\n            restart - restart the web server\n            root    - show the root console\n            update  - push all files to remote server\n\n        \n",
            "name": "ops-server-type",
            "output": "Ops Command - production type\n\n        ops production ['type']\n\n        usage: x ops COMMAND [ARGS]\n\n        COMMAND:\n\n            command - execute a single command on the remote server\n            console - login to production\n            deploy  - push all changes to staging server\n            log     - show the log on the production server\n            restart - restart the web server\n            root    - show the root console\n            update  - push all files to remote server\n\n        \n"
        },
        "model": "tool.test",
        "pk": 65
    },
    {
        "fields": {
            "expected": "Ops Command - production status\n\n        ops production ['status']\n\n        usage: x ops COMMAND [ARGS]\n\n        COMMAND:\n\n            command - execute a single command on the remote server\n            console - login to production\n            deploy  - push all changes to staging server\n            log     - show the log on the production server\n            restart - restart the web server\n            root    - show the root console\n            update  - push all files to remote server\n\n        \n",
            "name": "ops-status",
            "output": "Ops Command - production status\n\n        ops production ['status']\n\n        usage: x ops COMMAND [ARGS]\n\n        COMMAND:\n\n            command - execute a single command on the remote server\n            console - login to production\n            deploy  - push all changes to staging server\n            log     - show the log on the production server\n            restart - restart the web server\n            root    - show the root console\n            update  - push all files to remote server\n\n        \n"
        },
        "model": "tool.test",
        "pk": 66
    },
    {
        "fields": {
            "expected": "Activity for 2016-08\n\nTotal                       0   100%\n",
            "name": "hours-activity",
            "output": "Activity for 2016-08\n\nTotal                       0   100%\n"
        },
        "model": "tool.test",
        "pk": 67
    },
    {
        "fields": {
            "expected": "usage: hours add 2017-01\n",
            "name": "hours-add",
            "output": "usage: hours add 2017-01\n"
        },
        "model": "tool.test",
        "pk": 68
    },
    {
        "fields": {
            "expected": "\n",
            "name": "hours-days",
            "output": "\n"
        },
        "model": "tool.test",
        "pk": 69
    },
    {
        "fields": {
            "expected": "Error:  File not found /home/django/MyBook/Documents/info/days/2016-08\n",
            "name": "hours-show",
            "output": "Error:  File not found /home/django/MyBook/Documents/info/days/2016-08\n"
        },
        "model": "tool.test",
        "pk": 70
    },
    {
        "fields": {
            "expected": "\n\nTime:  2016-08, 2016-09, 2016-10, 2016-11, 2017-01\n\nActivity                Hours   Percent     Ideal   Diff\n\n",
            "name": "hours-summary",
            "output": "\n\nTime:  2016-08, 2016-09, 2016-10, 2016-11, 2017-01\n\nActivity                Hours   Percent     Ideal   Diff\n\n"
        },
        "model": "tool.test",
        "pk": 71
    },
    {
        "fields": {
            "expected": "Date       WAM      Sign     Teach    Business Tools    Hammer   Hire     Write    Aspire  \n",
            "name": "hours-work",
            "output": "Date       WAM      Sign     Teach    Business Tools    Hammer   Hire     Write    Aspire  \n"
        },
        "model": "tool.test",
        "pk": 72
    },
    {
        "fields": {
            "expected": "shell(x user list) --> 53 lines (should be between 4 and 30)",
            "name": "user-list",
            "output": "shell(x user list) --> 53 lines (should be between 4 and 30)"
        },
        "model": "tool.test",
        "pk": 73
    },
    {
        "fields": {
            "expected": "\n        Command not found, opc ['list']\n\n        usage: x cmd [args]\n\n        cmd\n\n            app         # Work with application code\n            aspire      # Set personal goals\n            author      # Manage writing content\n            book        # Work with book contents\n            booknotes   # Manage notes for reading\n            cmd         # Manage command scripts\n            collab      # Application collaborator\n            data        # Database scripting\n            doc         # Manage project documents\n            hourly      # Hourly command for maintence\n            hours       # Hours of invested time\n            log         # Manage logs\n            page        # Page Master app\n            plan        # Planning Script\n            ops         # Operations script\n            project     # Projects for clients\n            robot       # Web Robot using Selenium to fetch web pages\n            seamanslog  # Seaman's Log blog\n            spiritual   # Spiritual Things subscriber list\n            software    # Work with software training materials\n            src         # Manage source code\n            staging     # Manage server at Digital Ocean\n            task        # Task Master\n            thot        # Thot recorder\n            todo        # To do list command\n            tool        # Manage django tool scripts\n            tst         # Run tests with expected results\n            web         # Web pages\n            wordpress   # Work with wordpress server at Digital Ocean\n\n        Example: x staging ip\n                 x doc list\n                 x tst run\n        \n",
            "name": "opc-list",
            "output": "\n        Command not found, opc ['list']\n\n        usage: x cmd [args]\n\n        cmd\n\n            app         # Work with application code\n            aspire      # Set personal goals\n            author      # Manage writing content\n            book        # Work with book contents\n            booknotes   # Manage notes for reading\n            cmd         # Manage command scripts\n            collab      # Application collaborator\n            data        # Database scripting\n            doc         # Manage project documents\n            hourly      # Hourly command for maintence\n            hours       # Hours of invested time\n            log         # Manage logs\n            page        # Page Master app\n            plan        # Planning Script\n            ops         # Operations script\n            project     # Projects for clients\n            robot       # Web Robot using Selenium to fetch web pages\n            seamanslog  # Seaman's Log blog\n            spiritual   # Spiritual Things subscriber list\n            software    # Work with software training materials\n            src         # Manage source code\n            staging     # Manage server at Digital Ocean\n            task        # Task Master\n            thot        # Thot recorder\n            todo        # To do list command\n            tool        # Manage django tool scripts\n            tst         # Run tests with expected results\n            web         # Web pages\n            wordpress   # Work with wordpress server at Digital Ocean\n\n        Example: x staging ip\n                 x doc list\n                 x tst run\n        \n"
        },
        "model": "tool.test",
        "pk": 74
    },
    {
        "fields": {
            "expected": "shell(x opc show) --> 42 lines (should be between 2200 and 2500)",
            "name": "opc-show",
            "output": "shell(x opc show) --> 42 lines (should be between 2200 and 2500)"
        },
        "model": "tool.test",
        "pk": 75
    },
    {
        "fields": {
            "expected": "no output",
            "name": "data-files",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 76
    },
    {
        "fields": {
            "expected": "Test is DISABLED",
            "name": "data-migrate",
            "output": "Test is DISABLED"
        },
        "model": "tool.test",
        "pk": 77
    },
    {
        "fields": {
            "expected": "Test is DISABLED",
            "name": "data-save",
            "output": "Test is DISABLED"
        },
        "model": "tool.test",
        "pk": 78
    },
    {
        "fields": {
            "expected": "Test is DISABLED",
            "name": "data-tables",
            "output": "Test is DISABLED"
        },
        "model": "tool.test",
        "pk": 79
    },
    {
        "fields": {
            "expected": "/home/django/MyBook/manage.py\n/home/django/MyBook/__init__.py\n/home/django/MyBook/mybook/book.py\n/home/django/MyBook/mybook/book_views.py\n/home/django/MyBook/mybook/admin.py\n/home/django/MyBook/mybook/models.py\n/home/django/MyBook/mybook/urls.py\n/home/django/MyBook/mybook/task.py\n/home/django/MyBook/mybook/author.py\n/home/django/MyBook/mybook/mybook.py\n/home/django/MyBook/mybook/__init__.py\n/home/django/MyBook/mybook/info.py\n/home/django/MyBook/mybook/author_views.py\n/home/django/MyBook/mybook/outline.py\n/home/django/MyBook/mybook/tests.py\n/home/django/MyBook/mybook/mybook_views.py\n/home/django/MyBook/mybook/apps.py\n/home/django/MyBook/mybook/chapter.py\n/home/django/MyBook/config/x.py\n/home/django/MyBook/test/mybook_test.py\n/home/django/MyBook/test/seamanslog_test.py\n/home/django/MyBook/test/text_test.py\n/home/django/MyBook/test/doc_test.py\n/home/django/MyBook/test/days_test.py\n/home/django/MyBook/test/tst_test.py\n/home/django/MyBook/test/user_test.py\n/home/django/MyBook/test/ops_test.py\n/home/django/MyBook/test/health_test.py\n/home/django/MyBook/test/src_test.py\n/home/django/MyBook/test/archive_test.py\n/home/django/MyBook/test/cmd_test.py\n/home/django/MyBook/test/page_test.py\n/home/django/MyBook/test/node_test.py\n/home/django/MyBook/test/email_test.py\n/home/django/MyBook/test/system_test.py\n/home/django/MyBook/test/booknotes_test.py\n/home/django/MyBook/test/wordpress_test.py\n/home/django/MyBook/test/unc_test.py\n/home/django/MyBook/test/vc_test.py\n/home/django/MyBook/test/i_test.py\n/home/django/MyBook/test/app_test.py\n/home/django/MyBook/test/music_test.py\n/home/django/MyBook/test/robot_test.py\n/home/django/MyBook/test/css_test.py\n/home/django/MyBook/test/data_test.py\n/home/django/MyBook/test/datatype_test.py\n/home/django/MyBook/test/hourly_test.py\n/home/django/MyBook/test/__init__.py\n/home/django/MyBook/test/aspire_test.py\n/home/django/MyBook/tool/user.py\n/home/django/MyBook/tool/document.py\n/home/django/MyBook/tool/user_views.py\n/home/django/MyBook/tool/robot.py\n/home/django/MyBook/tool/models.py\n/home/django/MyBook/tool/urls.py\n/home/django/MyBook/tool/xxx_script.py\n/home/django/MyBook/tool/log.py\n/home/django/MyBook/tool/project.py\n/home/django/MyBook/tool/email.py\n/home/django/MyBook/tool/domain.py\n/home/django/MyBook/tool/notify.py\n/home/django/MyBook/tool/page.py\n/home/django/MyBook/tool/tst.py\n/home/django/MyBook/tool/__init__.py\n/home/django/MyBook/tool/xxx_views.py\n/home/django/MyBook/tool/xxx.py\n/home/django/MyBook/tool/management/__init__.py\n/home/django/MyBook/tool/management/commands/scriptor.py\n/home/django/MyBook/tool/management/commands/__init__.py\n/home/django/MyBook/hammer/urls.py\n/home/django/MyBook/hammer/settings.py\n/home/django/MyBook/hammer/__init__.py\n/home/django/MyBook/hammer/wsgi.py\n/home/django/MyBook/hammer/secret_settings.py\n/home/django/MyBook/aspire/goal_views.py\n/home/django/MyBook/aspire/project_views.py\n/home/django/MyBook/aspire/client.py\n/home/django/MyBook/aspire/admin.py\n/home/django/MyBook/aspire/models.py\n/home/django/MyBook/aspire/node.py\n/home/django/MyBook/aspire/node_views.py\n/home/django/MyBook/aspire/urls.py\n/home/django/MyBook/aspire/project.py\n/home/django/MyBook/aspire/role_views.py\n/home/django/MyBook/aspire/role.py\n/home/django/MyBook/aspire/aspire.py\n/home/django/MyBook/aspire/client_views.py\n/home/django/MyBook/aspire/doc.py\n/home/django/MyBook/aspire/__init__.py\n/home/django/MyBook/aspire/advisor_views.py\n/home/django/MyBook/aspire/tests.py\n/home/django/MyBook/aspire/apps.py\n/home/django/MyBook/aspire/goal.py\n/home/django/MyBook/aspire/views.py\n/home/django/MyBook/bin/cmd.py\n/home/django/MyBook/bin/book.py\n/home/django/MyBook/bin/user.py\n/home/django/MyBook/bin/switches.py\n/home/django/MyBook/bin/web.py\n/home/django/MyBook/bin/booknotes.py\n/home/django/MyBook/bin/days.py\n/home/django/MyBook/bin/faceblog.py\n/home/django/MyBook/bin/guide.py\n/home/django/MyBook/bin/src.py\n/home/django/MyBook/bin/vc.py\n/home/django/MyBook/bin/hours.py\n/home/django/MyBook/bin/text.py\n/home/django/MyBook/bin/shell.py\n/home/django/MyBook/bin/log.py\n/home/django/MyBook/bin/resize.py\n/home/django/MyBook/bin/datatype.py\n/home/django/MyBook/bin/data.py\n/home/django/MyBook/bin/page_tests.py\n/home/django/MyBook/bin/files.py\n/home/django/MyBook/bin/tool.py\n/home/django/MyBook/bin/remote_tests.py\n/home/django/MyBook/bin/ntsh.py\n/home/django/MyBook/bin/life.py\n/home/django/MyBook/bin/score.py\n/home/django/MyBook/bin/aspire.py\n/home/django/MyBook/bin/doc.py\n/home/django/MyBook/bin/hourly.py\n/home/django/MyBook/bin/todo.py\n/home/django/MyBook/bin/app.py\n/home/django/MyBook/bin/spiritual.py\n/home/django/MyBook/bin/x.py\n/home/django/MyBook/bin/n.py\n/home/django/MyBook/bin/__init__.py\n/home/django/MyBook/bin/archive.py\n/home/django/MyBook/bin/i.py\n/home/django/MyBook/bin/music.py\n/home/django/MyBook/bin/pandoc.py\n/home/django/MyBook/bin/ops.py\n/home/django/MyBook/bin/seamanslog.py\n/home/django/MyBook/bin/wordpress.py\n/home/django/MyBook/sensei/admin.py\n/home/django/MyBook/sensei/models.py\n/home/django/MyBook/sensei/__init__.py\n/home/django/MyBook/sensei/tests.py\n/home/django/MyBook/sensei/apps.py\n/home/django/MyBook/sensei/views.py\n/home/django/MyBook/unc/admin.py\n/home/django/MyBook/unc/review.py\n/home/django/MyBook/unc/models.py\n/home/django/MyBook/unc/sensei.py\n/home/django/MyBook/unc/urls.py\n/home/django/MyBook/unc/__init__.py\n/home/django/MyBook/unc/tests.py\n/home/django/MyBook/unc/apps.py\n/home/django/MyBook/unc/views.py\n/home/django/MyBook/life/admin.py\n/home/django/MyBook/life/models.py\n/home/django/MyBook/life/urls.py\n/home/django/MyBook/life/life.py\n/home/django/MyBook/life/__init__.py\n/home/django/MyBook/life/tests.py\n/home/django/MyBook/life/apps.py\n/home/django/MyBook/life/views.py\n/home/django/MyBook/health/health.py\n/home/django/MyBook/health/admin.py\n/home/django/MyBook/health/models.py\n/home/django/MyBook/health/urls.py\n/home/django/MyBook/health/__init__.py\n/home/django/MyBook/health/tests.py\n/home/django/MyBook/health/apps.py\n/home/django/MyBook/health/views.py\n/home/django/MyBook/superuser/admin.py\n/home/django/MyBook/superuser/models.py\n/home/django/MyBook/superuser/urls.py\n/home/django/MyBook/superuser/initialize.py\n/home/django/MyBook/superuser/admin_views.py\n/home/django/MyBook/superuser/__init__.py\n/home/django/MyBook/superuser/tests.py\n/home/django/MyBook/superuser/apps.py\n/home/django/MyBook/tasks/models.py\n/home/django/MyBook/tasks/urls.py\n/home/django/MyBook/tasks/task.py\n/home/django/MyBook/tasks/summary.py\n/home/django/MyBook/tasks/__init__.py\n/home/django/MyBook/tasks/views.py\n/home/django/MyBook/guide/urls.py\n/home/django/MyBook/guide/__init__.py\n/home/django/MyBook/guide/views.py\n",
            "name": "src-list",
            "output": "/home/django/MyBook/manage.py\n/home/django/MyBook/__init__.py\n/home/django/MyBook/mybook/book.py\n/home/django/MyBook/mybook/book_views.py\n/home/django/MyBook/mybook/admin.py\n/home/django/MyBook/mybook/models.py\n/home/django/MyBook/mybook/urls.py\n/home/django/MyBook/mybook/task.py\n/home/django/MyBook/mybook/author.py\n/home/django/MyBook/mybook/mybook.py\n/home/django/MyBook/mybook/__init__.py\n/home/django/MyBook/mybook/info.py\n/home/django/MyBook/mybook/author_views.py\n/home/django/MyBook/mybook/outline.py\n/home/django/MyBook/mybook/tests.py\n/home/django/MyBook/mybook/mybook_views.py\n/home/django/MyBook/mybook/apps.py\n/home/django/MyBook/mybook/chapter.py\n/home/django/MyBook/config/x.py\n/home/django/MyBook/test/mybook_test.py\n/home/django/MyBook/test/seamanslog_test.py\n/home/django/MyBook/test/text_test.py\n/home/django/MyBook/test/doc_test.py\n/home/django/MyBook/test/days_test.py\n/home/django/MyBook/test/tst_test.py\n/home/django/MyBook/test/user_test.py\n/home/django/MyBook/test/ops_test.py\n/home/django/MyBook/test/health_test.py\n/home/django/MyBook/test/src_test.py\n/home/django/MyBook/test/archive_test.py\n/home/django/MyBook/test/cmd_test.py\n/home/django/MyBook/test/page_test.py\n/home/django/MyBook/test/node_test.py\n/home/django/MyBook/test/email_test.py\n/home/django/MyBook/test/system_test.py\n/home/django/MyBook/test/booknotes_test.py\n/home/django/MyBook/test/wordpress_test.py\n/home/django/MyBook/test/unc_test.py\n/home/django/MyBook/test/vc_test.py\n/home/django/MyBook/test/i_test.py\n/home/django/MyBook/test/app_test.py\n/home/django/MyBook/test/music_test.py\n/home/django/MyBook/test/robot_test.py\n/home/django/MyBook/test/css_test.py\n/home/django/MyBook/test/data_test.py\n/home/django/MyBook/test/datatype_test.py\n/home/django/MyBook/test/hourly_test.py\n/home/django/MyBook/test/__init__.py\n/home/django/MyBook/test/aspire_test.py\n/home/django/MyBook/tool/user.py\n/home/django/MyBook/tool/document.py\n/home/django/MyBook/tool/user_views.py\n/home/django/MyBook/tool/robot.py\n/home/django/MyBook/tool/models.py\n/home/django/MyBook/tool/urls.py\n/home/django/MyBook/tool/xxx_script.py\n/home/django/MyBook/tool/log.py\n/home/django/MyBook/tool/project.py\n/home/django/MyBook/tool/email.py\n/home/django/MyBook/tool/domain.py\n/home/django/MyBook/tool/notify.py\n/home/django/MyBook/tool/page.py\n/home/django/MyBook/tool/tst.py\n/home/django/MyBook/tool/__init__.py\n/home/django/MyBook/tool/xxx_views.py\n/home/django/MyBook/tool/xxx.py\n/home/django/MyBook/tool/management/__init__.py\n/home/django/MyBook/tool/management/commands/scriptor.py\n/home/django/MyBook/tool/management/commands/__init__.py\n/home/django/MyBook/hammer/urls.py\n/home/django/MyBook/hammer/settings.py\n/home/django/MyBook/hammer/__init__.py\n/home/django/MyBook/hammer/wsgi.py\n/home/django/MyBook/hammer/secret_settings.py\n/home/django/MyBook/aspire/goal_views.py\n/home/django/MyBook/aspire/project_views.py\n/home/django/MyBook/aspire/client.py\n/home/django/MyBook/aspire/admin.py\n/home/django/MyBook/aspire/models.py\n/home/django/MyBook/aspire/node.py\n/home/django/MyBook/aspire/node_views.py\n/home/django/MyBook/aspire/urls.py\n/home/django/MyBook/aspire/project.py\n/home/django/MyBook/aspire/role_views.py\n/home/django/MyBook/aspire/role.py\n/home/django/MyBook/aspire/aspire.py\n/home/django/MyBook/aspire/client_views.py\n/home/django/MyBook/aspire/doc.py\n/home/django/MyBook/aspire/__init__.py\n/home/django/MyBook/aspire/advisor_views.py\n/home/django/MyBook/aspire/tests.py\n/home/django/MyBook/aspire/apps.py\n/home/django/MyBook/aspire/goal.py\n/home/django/MyBook/aspire/views.py\n/home/django/MyBook/bin/cmd.py\n/home/django/MyBook/bin/book.py\n/home/django/MyBook/bin/user.py\n/home/django/MyBook/bin/switches.py\n/home/django/MyBook/bin/web.py\n/home/django/MyBook/bin/booknotes.py\n/home/django/MyBook/bin/days.py\n/home/django/MyBook/bin/faceblog.py\n/home/django/MyBook/bin/guide.py\n/home/django/MyBook/bin/src.py\n/home/django/MyBook/bin/vc.py\n/home/django/MyBook/bin/hours.py\n/home/django/MyBook/bin/text.py\n/home/django/MyBook/bin/shell.py\n/home/django/MyBook/bin/log.py\n/home/django/MyBook/bin/resize.py\n/home/django/MyBook/bin/datatype.py\n/home/django/MyBook/bin/data.py\n/home/django/MyBook/bin/page_tests.py\n/home/django/MyBook/bin/files.py\n/home/django/MyBook/bin/tool.py\n/home/django/MyBook/bin/remote_tests.py\n/home/django/MyBook/bin/ntsh.py\n/home/django/MyBook/bin/life.py\n/home/django/MyBook/bin/score.py\n/home/django/MyBook/bin/aspire.py\n/home/django/MyBook/bin/doc.py\n/home/django/MyBook/bin/hourly.py\n/home/django/MyBook/bin/todo.py\n/home/django/MyBook/bin/app.py\n/home/django/MyBook/bin/spiritual.py\n/home/django/MyBook/bin/x.py\n/home/django/MyBook/bin/n.py\n/home/django/MyBook/bin/__init__.py\n/home/django/MyBook/bin/archive.py\n/home/django/MyBook/bin/i.py\n/home/django/MyBook/bin/music.py\n/home/django/MyBook/bin/pandoc.py\n/home/django/MyBook/bin/ops.py\n/home/django/MyBook/bin/seamanslog.py\n/home/django/MyBook/bin/wordpress.py\n/home/django/MyBook/sensei/admin.py\n/home/django/MyBook/sensei/models.py\n/home/django/MyBook/sensei/__init__.py\n/home/django/MyBook/sensei/tests.py\n/home/django/MyBook/sensei/apps.py\n/home/django/MyBook/sensei/views.py\n/home/django/MyBook/unc/admin.py\n/home/django/MyBook/unc/review.py\n/home/django/MyBook/unc/models.py\n/home/django/MyBook/unc/sensei.py\n/home/django/MyBook/unc/urls.py\n/home/django/MyBook/unc/__init__.py\n/home/django/MyBook/unc/tests.py\n/home/django/MyBook/unc/apps.py\n/home/django/MyBook/unc/views.py\n/home/django/MyBook/life/admin.py\n/home/django/MyBook/life/models.py\n/home/django/MyBook/life/urls.py\n/home/django/MyBook/life/life.py\n/home/django/MyBook/life/__init__.py\n/home/django/MyBook/life/tests.py\n/home/django/MyBook/life/apps.py\n/home/django/MyBook/life/views.py\n/home/django/MyBook/health/health.py\n/home/django/MyBook/health/admin.py\n/home/django/MyBook/health/models.py\n/home/django/MyBook/health/urls.py\n/home/django/MyBook/health/__init__.py\n/home/django/MyBook/health/tests.py\n/home/django/MyBook/health/apps.py\n/home/django/MyBook/health/views.py\n/home/django/MyBook/superuser/admin.py\n/home/django/MyBook/superuser/models.py\n/home/django/MyBook/superuser/urls.py\n/home/django/MyBook/superuser/initialize.py\n/home/django/MyBook/superuser/admin_views.py\n/home/django/MyBook/superuser/__init__.py\n/home/django/MyBook/superuser/tests.py\n/home/django/MyBook/superuser/apps.py\n/home/django/MyBook/tasks/models.py\n/home/django/MyBook/tasks/urls.py\n/home/django/MyBook/tasks/task.py\n/home/django/MyBook/tasks/summary.py\n/home/django/MyBook/tasks/__init__.py\n/home/django/MyBook/tasks/views.py\n/home/django/MyBook/guide/urls.py\n/home/django/MyBook/guide/__init__.py\n/home/django/MyBook/guide/views.py\n"
        },
        "model": "tool.test",
        "pk": 80
    },
    {
        "fields": {
            "expected": "shell(x task import) --> 1 lines (should be between 10 and 800)",
            "name": "task-import",
            "output": "shell(x task import) --> 1 lines (should be between 10 and 800)"
        },
        "model": "tool.test",
        "pk": 81
    },
    {
        "fields": {
            "expected": "   Total      420\nChurch        110\nFun            82\nPeople         58\nHire           47\nGrow           41\nWrite          33\nBusiness       18\nTools          17\nWAM             8\nSign            6\n",
            "name": "task-month",
            "output": "   Total      420\nChurch        110\nFun            82\nPeople         58\nHire           47\nGrow           41\nWrite          33\nBusiness       18\nTools          17\nWAM             8\nSign            6\n"
        },
        "model": "tool.test",
        "pk": 82
    },
    {
        "fields": {
            "expected": "shell(x task totals) --> 16 lines (should be between 10 and 14)",
            "name": "task-totals",
            "output": "shell(x task totals) --> 16 lines (should be between 10 and 14)"
        },
        "model": "tool.test",
        "pk": 83
    },
    {
        "fields": {
            "expected": "no output",
            "name": "task-week",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 84
    },
    {
        "fields": {
            "expected": "no output",
            "name": "task-work",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 85
    },
    {
        "fields": {
            "expected": "\n        Command not found, datatype ['list']\n\n        usage: x cmd [args]\n\n        cmd\n\n            app         # Work with application code\n            aspire      # Set personal goals\n            author      # Manage writing content\n            book        # Work with book contents\n            booknotes   # Manage notes for reading\n            cmd         # Manage command scripts\n            collab      # Application collaborator\n            data        # Database scripting\n            doc         # Manage project documents\n            hourly      # Hourly command for maintence\n            hours       # Hours of invested time\n            log         # Manage logs\n            page        # Page Master app\n            plan        # Planning Script\n            ops         # Operations script\n            project     # Projects for clients\n            robot       # Web Robot using Selenium to fetch web pages\n            seamanslog  # Seaman's Log blog\n            spiritual   # Spiritual Things subscriber list\n            software    # Work with software training materials\n            src         # Manage source code\n            staging     # Manage server at Digital Ocean\n            task        # Task Master\n            thot        # Thot recorder\n            todo        # To do list command\n            tool        # Manage django tool scripts\n            tst         # Run tests with expected results\n            web         # Web pages\n            wordpress   # Work with wordpress server at Digital Ocean\n\n        Example: x staging ip\n                 x doc list\n                 x tst run\n        \n",
            "name": "datatype-list",
            "output": "\n        Command not found, datatype ['list']\n\n        usage: x cmd [args]\n\n        cmd\n\n            app         # Work with application code\n            aspire      # Set personal goals\n            author      # Manage writing content\n            book        # Work with book contents\n            booknotes   # Manage notes for reading\n            cmd         # Manage command scripts\n            collab      # Application collaborator\n            data        # Database scripting\n            doc         # Manage project documents\n            hourly      # Hourly command for maintence\n            hours       # Hours of invested time\n            log         # Manage logs\n            page        # Page Master app\n            plan        # Planning Script\n            ops         # Operations script\n            project     # Projects for clients\n            robot       # Web Robot using Selenium to fetch web pages\n            seamanslog  # Seaman's Log blog\n            spiritual   # Spiritual Things subscriber list\n            software    # Work with software training materials\n            src         # Manage source code\n            staging     # Manage server at Digital Ocean\n            task        # Task Master\n            thot        # Thot recorder\n            todo        # To do list command\n            tool        # Manage django tool scripts\n            tst         # Run tests with expected results\n            web         # Web pages\n            wordpress   # Work with wordpress server at Digital Ocean\n\n        Example: x staging ip\n                 x doc list\n                 x tst run\n        \n"
        },
        "model": "tool.test",
        "pk": 86
    },
    {
        "fields": {
            "expected": "shell(x datatype show) --> 42 lines (should be between 2200 and 2500)",
            "name": "datatype-show",
            "output": "shell(x datatype show) --> 42 lines (should be between 2200 and 2500)"
        },
        "model": "tool.test",
        "pk": 87
    },
    {
        "fields": {
            "expected": "Ignore bad chars\n\na \"\nb \"\nc -\nd '\n\n\nProjects/\n\u251c\u2500\u2500 BACS200\n\u251c\u2500\u2500 Index\n\n\nConvert UTF8\n\na \"\nb \"\nc -\nd '\n\n\nProjects/\n BACS200\n Index\n\n\nConvert UTF16\n\na \nb \nc \nd \n\n\nProjects/\n BACS200\n Index\n\n",
            "name": "doc-encoding",
            "output": "Ignore bad chars\n\na \"\nb \"\nc -\nd '\n\n\nProjects/\n\u251c\u2500\u2500 BACS200\n\u251c\u2500\u2500 Index\n\n\nConvert UTF8\n\na \"\nb \"\nc -\nd '\n\n\nProjects/\n BACS200\n Index\n\n\nConvert UTF16\n\na \nb \nc \nd \n\n\nProjects/\n BACS200\n Index\n\n"
        },
        "model": "tool.test",
        "pk": 88
    },
    {
        "fields": {
            "expected": "no output",
            "name": "doc-help",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 89
    },
    {
        "fields": {
            "expected": "no output",
            "name": "doc-html",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 90
    },
    {
        "fields": {
            "expected": "\nDoc Summary                       Files       Lines        Words\n\n    Documents                      1333       90603        477 K\n",
            "name": "doc-score",
            "output": "\nDoc Summary                       Files       Lines        Words\n\n    Documents                      1333       90603        477 K\n"
        },
        "model": "tool.test",
        "pk": 91
    },
    {
        "fields": {
            "expected": "no output",
            "name": "doc-search",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 92
    },
    {
        "fields": {
            "expected": "no output",
            "name": "doc-show",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 93
    },
    {
        "fields": {
            "expected": "On branch master\nYour branch is up-to-date with 'origin/master'.\nnothing to commit, working directory clean\n",
            "name": "doc-status",
            "output": "On branch master\nYour branch is up-to-date with 'origin/master'.\nnothing to commit, working directory clean\n"
        },
        "model": "tool.test",
        "pk": 94
    },
    {
        "fields": {
            "expected": "no output",
            "name": "doc-summary",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 95
    },
    {
        "fields": {
            "expected": "no output",
            "name": "doc",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 96
    },
    {
        "fields": {
            "expected": "cmd.py\nbook.py\nuser.py\nswitches.py\nweb.py\nbooknotes.py\ndays.py\nfaceblog.py\nguide.py\nsrc.py\nvc.py\nhours.py\ntext.py\nshell.py\nlog.py\nresize.py\ndatatype.py\ndata.py\npage_tests.py\nfiles.py\ntool.py\nremote_tests.py\nntsh.py\nlife.py\nscore.py\naspire.py\ndoc.py\nhourly.py\ntodo.py\napp.py\nspiritual.py\nx.py\nn.py\narchive.py\ni.py\nmusic.py\npandoc.py\nops.py\nseamanslog.py\nwordpress.py\n",
            "name": "cmd-list",
            "output": "cmd.py\nbook.py\nuser.py\nswitches.py\nweb.py\nbooknotes.py\ndays.py\nfaceblog.py\nguide.py\nsrc.py\nvc.py\nhours.py\ntext.py\nshell.py\nlog.py\nresize.py\ndatatype.py\ndata.py\npage_tests.py\nfiles.py\ntool.py\nremote_tests.py\nntsh.py\nlife.py\nscore.py\naspire.py\ndoc.py\nhourly.py\ntodo.py\napp.py\nspiritual.py\nx.py\nn.py\narchive.py\ni.py\nmusic.py\npandoc.py\nops.py\nseamanslog.py\nwordpress.py\n"
        },
        "model": "tool.test",
        "pk": 97
    },
    {
        "fields": {
            "expected": "no output",
            "name": "cmd-show",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 98
    },
    {
        "fields": {
            "expected": "Days: 15, To: Wed, 03-01\nWed, 02-15\nThu, 02-16\nFri, 02-17\nSat, 02-18\nSun, 02-19\nMon, 02-20\nTue, 02-21\nWed, 02-22\nThu, 02-23\nFri, 02-24\nSat, 02-25\nSun, 02-26\nMon, 02-27\nTue, 02-28\nWed, 03-01\n",
            "name": "days-list",
            "output": "Days: 15, To: Wed, 03-01\nWed, 02-15\nThu, 02-16\nFri, 02-17\nSat, 02-18\nSun, 02-19\nMon, 02-20\nTue, 02-21\nWed, 02-22\nThu, 02-23\nFri, 02-24\nSat, 02-25\nSun, 02-26\nMon, 02-27\nTue, 02-28\nWed, 03-01\n"
        },
        "model": "tool.test",
        "pk": 99
    },
    {
        "fields": {
            "expected": "no output",
            "name": "days-month",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 100
    },
    {
        "fields": {
            "expected": "no output",
            "name": "days-show",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 101
    },
    {
        "fields": {
            "expected": "\n\n        script to manage projects on servers\n\n        usage: x project command\n\n        command\n\n        List:\n            list                - list the configured project\n            get   name          - get a project by name lookup\n\n        Modify:\n            add     name user   - add a new project record\n            delete  name        - remove this project\n            edit    name value  - rename the project\n\n        I/O \n            import              - import all records from a file \n            export              - export all records to a file \n\n        \n",
            "name": "project-export",
            "output": "\n\n        script to manage projects on servers\n\n        usage: x project command\n\n        command\n\n        List:\n            list                - list the configured project\n            get   name          - get a project by name lookup\n\n        Modify:\n            add     name user   - add a new project record\n            delete  name        - remove this project\n            edit    name value  - rename the project\n\n        I/O \n            import              - import all records from a file \n            export              - export all records to a file \n\n        \n"
        },
        "model": "tool.test",
        "pk": 102
    },
    {
        "fields": {
            "expected": "\n\n        script to manage projects on servers\n\n        usage: x project command\n\n        command\n\n        List:\n            list                - list the configured project\n            get   name          - get a project by name lookup\n\n        Modify:\n            add     name user   - add a new project record\n            delete  name        - remove this project\n            edit    name value  - rename the project\n\n        I/O \n            import              - import all records from a file \n            export              - export all records to a file \n\n        \n",
            "name": "project-import",
            "output": "\n\n        script to manage projects on servers\n\n        usage: x project command\n\n        command\n\n        List:\n            list                - list the configured project\n            get   name          - get a project by name lookup\n\n        Modify:\n            add     name user   - add a new project record\n            delete  name        - remove this project\n            edit    name value  - rename the project\n\n        I/O \n            import              - import all records from a file \n            export              - export all records to a file \n\n        \n"
        },
        "model": "tool.test",
        "pk": 103
    },
    {
        "fields": {
            "expected": "project list\n",
            "name": "project-list",
            "output": "project list\n"
        },
        "model": "tool.test",
        "pk": 104
    },
    {
        "fields": {
            "expected": "{% extends \"tool_theme.html\" %}\n\n{% block page_content %}\n\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <a href=\"/project/\">\n                <h2>Project Demo\n                    <small>Showcase for Projects</small>\n                </h2>\n            </a>\n\n            <p class=\"actions\"> PROJECT DEMO </p>\n        </div>\n        <div class=\"card-body card-padding\">\n\n            <div class=\"card\" style=\"border: 2px solid teal; border-radius: 20px\">\n\n                {% block topic_content %}\n                {% endblock %}\n\n            </div>\n\n        </div>\n    </div>\n\n{% endblock %}",
            "name": "project-template",
            "output": "{% extends \"tool_theme.html\" %}\n\n{% block page_content %}\n\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <a href=\"/project/\">\n                <h2>Project Demo\n                    <small>Showcase for Projects</small>\n                </h2>\n            </a>\n\n            <p class=\"actions\"> PROJECT DEMO </p>\n        </div>\n        <div class=\"card-body card-padding\">\n\n            <div class=\"card\" style=\"border: 2px solid teal; border-radius: 20px\">\n\n                {% block topic_content %}\n                {% endblock %}\n\n            </div>\n\n        </div>\n    </div>\n\n{% endblock %}"
        },
        "model": "tool.test",
        "pk": 105
    },
    {
        "fields": {
            "expected": "shell(x budget list) --> 121 lines (should be between 120 and 120)",
            "name": "budget-list",
            "output": "shell(x budget list) --> 121 lines (should be between 120 and 120)"
        },
        "model": "tool.test",
        "pk": 106
    },
    {
        "fields": {
            "expected": "budget Show\nCategory           Ideal   Actual     Diff\n\nWork                  33       40        7\n\nGrow                  14       10        4\n\nPeople                21       20        1\n\nChurch                14       10        4\n\nFun                   16       20        4\n\n   Variance                             20\n",
            "name": "budget-show",
            "output": "budget Show\nCategory           Ideal   Actual     Diff\n\nWork                  33       40        7\n\nGrow                  14       10        4\n\nPeople                21       20        1\n\nChurch                14       10        4\n\nFun                   16       20        4\n\n   Variance                             20\n"
        },
        "model": "tool.test",
        "pk": 107
    },
    {
        "fields": {
            "expected": "budget total\nCategory           Total\n\nWork                 139\nGrow                  59\nPeople                89\nChurch                60\nFun                   69\n",
            "name": "budget-total",
            "output": "budget total\nCategory           Total\n\nWork                 139\nGrow                  59\nPeople                89\nChurch                60\nFun                   69\n"
        },
        "model": "tool.test",
        "pk": 108
    },
    {
        "fields": {
            "expected": "shell(x aspire list) --> 33 lines (should be between 250 and 500)",
            "name": "aspire-list",
            "output": "shell(x aspire list) --> 33 lines (should be between 250 and 500)"
        },
        "model": "tool.test",
        "pk": 109
    },
    {
        "fields": {
            "expected": "shell(x aspire report) --> 33 lines (should be between 2 and 2)",
            "name": "aspire-report",
            "output": "shell(x aspire report) --> 33 lines (should be between 2 and 2)"
        },
        "model": "tool.test",
        "pk": 110
    },
    {
        "fields": {
            "expected": "*                   Docs  Words\n* MyBook              23   2074\n* Aspire              27   7812\n* Software            14   2143\n* role                 4     61\n* Life                 3    514\n* Report             193  38194\n* Hire                15   4676\n* Write               34  10278\n* Fun                  3     70\n* Church               8   1630\n* Grow                10    596\n*   Total            334  68048\n",
            "name": "aspire-score",
            "output": "*                   Docs  Words\n* MyBook              23   2074\n* Aspire              27   7812\n* Software            14   2143\n* role                 4     61\n* Life                 3    514\n* Report             193  38194\n* Hire                15   4676\n* Write               34  10278\n* Fun                  3     70\n* Church               8   1630\n* Grow                10    596\n*   Total            334  68048\n"
        },
        "model": "tool.test",
        "pk": 111
    },
    {
        "fields": {
            "expected": "shell(x aspire show) --> 33 lines (should be between 10 and 20)",
            "name": "aspire-show",
            "output": "shell(x aspire show) --> 33 lines (should be between 10 and 20)"
        },
        "model": "tool.test",
        "pk": 112
    },
    {
        "fields": {
            "expected": "shell(x aspire week) --> 33 lines (should be between 15 and 21)",
            "name": "aspire-week",
            "output": "shell(x aspire week) --> 33 lines (should be between 15 and 21)"
        },
        "model": "tool.test",
        "pk": 113
    },
    {
        "fields": {
            "expected": "no output",
            "name": "page-diff",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 114
    },
    {
        "fields": {
            "expected": "shell(x page list) --> 2 lines (should be between 18 and 30)",
            "name": "page-list",
            "output": "shell(x page list) --> 2 lines (should be between 18 and 30)"
        },
        "model": "tool.test",
        "pk": 115
    },
    {
        "fields": {
            "expected": "shell(x page text all) --> 1 lines (should be between 400 and 1000)",
            "name": "page-text",
            "output": "shell(x page text all) --> 1 lines (should be between 400 and 1000)"
        },
        "model": "tool.test",
        "pk": 116
    },
    {
        "fields": {
            "expected": "Software list\nMenu\nIndex\nBestPractice/Management\nBestPractice/DevelopmentGoals\nBestPractice/RemainingTasks\nBestPractice/Guarantee\nBestPractice/Process\nBestPractice/FutureTasks\nBestPractice/Payment\nBestPractice/Assessment\nBestPractice/Technology\nBestPractice/Commitment\nBestPractice/EstimatingProjects\nBestPractice/Issues\nBestPractice/Clients\nBestPractice/People\nBestPractice/ReleaseChecklist\nBestPractice/BudgetHours\nBestPractice/Planning\nBestPractice/Engineering\nBestPractice/Productivity\nBestPractice/UserStories\nBestPractice/Index\nBestPractice/Contract\nBestPractice/Risk\nBestPractice/Views\nBestPractice/Experience\nBestPractice/Principles\nBestPractice/Tasks\nBestPractice/DataType\nBestPractice/EngineeringServices\nBestPractice/Proposal\nLeverage/Debt\nLeverage/Part3\nLeverage/Services\nLeverage/Deployment\nLeverage/AppendixC\nLeverage/Menu\nLeverage/Code\nLeverage/Monitoring\nLeverage/Technology\nLeverage/Learning\nLeverage/Knowledge\nLeverage/Part1\nLeverage/Planning\nLeverage/Part2\nLeverage/Part4\nLeverage/Test\nLeverage/Leverage\nLeverage/Preface\nLeverage/Cover\nLeverage/Release\nLeverage/Practices\nLeverage/Index\nLeverage/StartReading\nLeverage/AppendixB\nLeverage/Design\nLeverage/Teamwork\nLeverage/FrontMatter\nLeverage/ApplyingLeverage\nLeverage/Author\nLeverage/AppendixA\nLeverage/Proposal\nLeverage/Chapters\nClient/Today\nClient/Hire-ToDo\nClient/2016-10\nClient/Hire-Done\n",
            "name": "software-list",
            "output": "Software list\nMenu\nIndex\nBestPractice/Management\nBestPractice/DevelopmentGoals\nBestPractice/RemainingTasks\nBestPractice/Guarantee\nBestPractice/Process\nBestPractice/FutureTasks\nBestPractice/Payment\nBestPractice/Assessment\nBestPractice/Technology\nBestPractice/Commitment\nBestPractice/EstimatingProjects\nBestPractice/Issues\nBestPractice/Clients\nBestPractice/People\nBestPractice/ReleaseChecklist\nBestPractice/BudgetHours\nBestPractice/Planning\nBestPractice/Engineering\nBestPractice/Productivity\nBestPractice/UserStories\nBestPractice/Index\nBestPractice/Contract\nBestPractice/Risk\nBestPractice/Views\nBestPractice/Experience\nBestPractice/Principles\nBestPractice/Tasks\nBestPractice/DataType\nBestPractice/EngineeringServices\nBestPractice/Proposal\nLeverage/Debt\nLeverage/Part3\nLeverage/Services\nLeverage/Deployment\nLeverage/AppendixC\nLeverage/Menu\nLeverage/Code\nLeverage/Monitoring\nLeverage/Technology\nLeverage/Learning\nLeverage/Knowledge\nLeverage/Part1\nLeverage/Planning\nLeverage/Part2\nLeverage/Part4\nLeverage/Test\nLeverage/Leverage\nLeverage/Preface\nLeverage/Cover\nLeverage/Release\nLeverage/Practices\nLeverage/Index\nLeverage/StartReading\nLeverage/AppendixB\nLeverage/Design\nLeverage/Teamwork\nLeverage/FrontMatter\nLeverage/ApplyingLeverage\nLeverage/Author\nLeverage/AppendixA\nLeverage/Proposal\nLeverage/Chapters\nClient/Today\nClient/Hire-ToDo\nClient/2016-10\nClient/Hire-Done\n"
        },
        "model": "tool.test",
        "pk": 117
    },
    {
        "fields": {
            "expected": "no output",
            "name": "software-show",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 118
    },
    {
        "fields": {
            "expected": "no output",
            "name": "software-stats",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 119
    },
    {
        "fields": {
            "expected": "    software                         68        5366         35 K\n",
            "name": "software-summary",
            "output": "    software                         68        5366         35 K\n"
        },
        "model": "tool.test",
        "pk": 120
    },
    {
        "fields": {
            "expected": "/home/django/Projects/Who2Hire\n",
            "name": "src-base",
            "output": "/home/django/Projects/Who2Hire\n"
        },
        "model": "tool.test",
        "pk": 121
    },
    {
        "fields": {
            "expected": "no output",
            "name": "src-changed",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 122
    },
    {
        "fields": {
            "expected": "no output",
            "name": "src-common",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 123
    },
    {
        "fields": {
            "expected": "shell(x src diff) --> 1 lines (should be between 3000 and 4000)",
            "name": "src-diff",
            "output": "shell(x src diff) --> 1 lines (should be between 3000 and 4000)"
        },
        "model": "tool.test",
        "pk": 124
    },
    {
        "fields": {
            "expected": "No directory exists\n",
            "name": "src-missing",
            "output": "No directory exists\n"
        },
        "model": "tool.test",
        "pk": 125
    },
    {
        "fields": {
            "expected": "no output",
            "name": "src-same",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 126
    },
    {
        "fields": {
            "expected": "manage.py\n__init__.py\nmybook/book.py\nmybook/book_views.py\nmybook/admin.py\nmybook/models.py\nmybook/urls.py\nmybook/task.py\nmybook/author.py\nmybook/mybook.py\nmybook/__init__.py\nmybook/info.py\nmybook/author_views.py\nmybook/outline.py\nmybook/tests.py\nmybook/mybook_views.py\nmybook/apps.py\nmybook/chapter.py\nconfig/x.py\ntest/mybook_test.py\ntest/seamanslog_test.py\ntest/text_test.py\ntest/doc_test.py\ntest/days_test.py\ntest/tst_test.py\ntest/user_test.py\ntest/ops_test.py\ntest/health_test.py\ntest/src_test.py\ntest/archive_test.py\ntest/cmd_test.py\ntest/page_test.py\ntest/node_test.py\ntest/email_test.py\ntest/system_test.py\ntest/booknotes_test.py\ntest/wordpress_test.py\ntest/unc_test.py\ntest/vc_test.py\ntest/i_test.py\ntest/app_test.py\ntest/music_test.py\ntest/robot_test.py\ntest/css_test.py\ntest/data_test.py\ntest/datatype_test.py\ntest/hourly_test.py\ntest/__init__.py\ntest/aspire_test.py\ntool/user.py\ntool/document.py\ntool/user_views.py\ntool/robot.py\ntool/models.py\ntool/urls.py\ntool/xxx_script.py\ntool/log.py\ntool/project.py\ntool/email.py\ntool/domain.py\ntool/notify.py\ntool/page.py\ntool/tst.py\ntool/__init__.py\ntool/xxx_views.py\ntool/xxx.py\ntool/management/__init__.py\ntool/management/commands/scriptor.py\ntool/management/commands/__init__.py\nhammer/urls.py\nhammer/settings.py\nhammer/__init__.py\nhammer/wsgi.py\nhammer/secret_settings.py\naspire/goal_views.py\naspire/project_views.py\naspire/client.py\naspire/admin.py\naspire/models.py\naspire/node.py\naspire/node_views.py\naspire/urls.py\naspire/project.py\naspire/role_views.py\naspire/role.py\naspire/aspire.py\naspire/client_views.py\naspire/doc.py\naspire/__init__.py\naspire/advisor_views.py\naspire/tests.py\naspire/apps.py\naspire/goal.py\naspire/views.py\nbin/cmd.py\nbin/book.py\nbin/user.py\nbin/switches.py\nbin/web.py\nbin/booknotes.py\nbin/days.py\nbin/faceblog.py\nbin/guide.py\nbin/src.py\nbin/vc.py\nbin/hours.py\nbin/text.py\nbin/shell.py\nbin/log.py\nbin/resize.py\nbin/datatype.py\nbin/data.py\nbin/page_tests.py\nbin/files.py\nbin/tool.py\nbin/remote_tests.py\nbin/ntsh.py\nbin/life.py\nbin/score.py\nbin/aspire.py\nbin/doc.py\nbin/hourly.py\nbin/todo.py\nbin/app.py\nbin/spiritual.py\nbin/x.py\nbin/n.py\nbin/__init__.py\nbin/archive.py\nbin/i.py\nbin/music.py\nbin/pandoc.py\nbin/ops.py\nbin/seamanslog.py\nbin/wordpress.py\nsensei/admin.py\nsensei/models.py\nsensei/__init__.py\nsensei/tests.py\nsensei/apps.py\nsensei/views.py\nunc/admin.py\nunc/review.py\nunc/models.py\nunc/sensei.py\nunc/urls.py\nunc/__init__.py\nunc/tests.py\nunc/apps.py\nunc/views.py\nlife/admin.py\nlife/models.py\nlife/urls.py\nlife/life.py\nlife/__init__.py\nlife/tests.py\nlife/apps.py\nlife/views.py\nhealth/health.py\nhealth/admin.py\nhealth/models.py\nhealth/urls.py\nhealth/__init__.py\nhealth/tests.py\nhealth/apps.py\nhealth/views.py\nsuperuser/admin.py\nsuperuser/models.py\nsuperuser/urls.py\nsuperuser/initialize.py\nsuperuser/admin_views.py\nsuperuser/__init__.py\nsuperuser/tests.py\nsuperuser/apps.py\ntasks/models.py\ntasks/urls.py\ntasks/task.py\ntasks/summary.py\ntasks/__init__.py\ntasks/views.py\nguide/urls.py\nguide/__init__.py\nguide/views.py\n",
            "name": "src-unique",
            "output": "manage.py\n__init__.py\nmybook/book.py\nmybook/book_views.py\nmybook/admin.py\nmybook/models.py\nmybook/urls.py\nmybook/task.py\nmybook/author.py\nmybook/mybook.py\nmybook/__init__.py\nmybook/info.py\nmybook/author_views.py\nmybook/outline.py\nmybook/tests.py\nmybook/mybook_views.py\nmybook/apps.py\nmybook/chapter.py\nconfig/x.py\ntest/mybook_test.py\ntest/seamanslog_test.py\ntest/text_test.py\ntest/doc_test.py\ntest/days_test.py\ntest/tst_test.py\ntest/user_test.py\ntest/ops_test.py\ntest/health_test.py\ntest/src_test.py\ntest/archive_test.py\ntest/cmd_test.py\ntest/page_test.py\ntest/node_test.py\ntest/email_test.py\ntest/system_test.py\ntest/booknotes_test.py\ntest/wordpress_test.py\ntest/unc_test.py\ntest/vc_test.py\ntest/i_test.py\ntest/app_test.py\ntest/music_test.py\ntest/robot_test.py\ntest/css_test.py\ntest/data_test.py\ntest/datatype_test.py\ntest/hourly_test.py\ntest/__init__.py\ntest/aspire_test.py\ntool/user.py\ntool/document.py\ntool/user_views.py\ntool/robot.py\ntool/models.py\ntool/urls.py\ntool/xxx_script.py\ntool/log.py\ntool/project.py\ntool/email.py\ntool/domain.py\ntool/notify.py\ntool/page.py\ntool/tst.py\ntool/__init__.py\ntool/xxx_views.py\ntool/xxx.py\ntool/management/__init__.py\ntool/management/commands/scriptor.py\ntool/management/commands/__init__.py\nhammer/urls.py\nhammer/settings.py\nhammer/__init__.py\nhammer/wsgi.py\nhammer/secret_settings.py\naspire/goal_views.py\naspire/project_views.py\naspire/client.py\naspire/admin.py\naspire/models.py\naspire/node.py\naspire/node_views.py\naspire/urls.py\naspire/project.py\naspire/role_views.py\naspire/role.py\naspire/aspire.py\naspire/client_views.py\naspire/doc.py\naspire/__init__.py\naspire/advisor_views.py\naspire/tests.py\naspire/apps.py\naspire/goal.py\naspire/views.py\nbin/cmd.py\nbin/book.py\nbin/user.py\nbin/switches.py\nbin/web.py\nbin/booknotes.py\nbin/days.py\nbin/faceblog.py\nbin/guide.py\nbin/src.py\nbin/vc.py\nbin/hours.py\nbin/text.py\nbin/shell.py\nbin/log.py\nbin/resize.py\nbin/datatype.py\nbin/data.py\nbin/page_tests.py\nbin/files.py\nbin/tool.py\nbin/remote_tests.py\nbin/ntsh.py\nbin/life.py\nbin/score.py\nbin/aspire.py\nbin/doc.py\nbin/hourly.py\nbin/todo.py\nbin/app.py\nbin/spiritual.py\nbin/x.py\nbin/n.py\nbin/__init__.py\nbin/archive.py\nbin/i.py\nbin/music.py\nbin/pandoc.py\nbin/ops.py\nbin/seamanslog.py\nbin/wordpress.py\nsensei/admin.py\nsensei/models.py\nsensei/__init__.py\nsensei/tests.py\nsensei/apps.py\nsensei/views.py\nunc/admin.py\nunc/review.py\nunc/models.py\nunc/sensei.py\nunc/urls.py\nunc/__init__.py\nunc/tests.py\nunc/apps.py\nunc/views.py\nlife/admin.py\nlife/models.py\nlife/urls.py\nlife/life.py\nlife/__init__.py\nlife/tests.py\nlife/apps.py\nlife/views.py\nhealth/health.py\nhealth/admin.py\nhealth/models.py\nhealth/urls.py\nhealth/__init__.py\nhealth/tests.py\nhealth/apps.py\nhealth/views.py\nsuperuser/admin.py\nsuperuser/models.py\nsuperuser/urls.py\nsuperuser/initialize.py\nsuperuser/admin_views.py\nsuperuser/__init__.py\nsuperuser/tests.py\nsuperuser/apps.py\ntasks/models.py\ntasks/urls.py\ntasks/task.py\ntasks/summary.py\ntasks/__init__.py\ntasks/views.py\nguide/urls.py\nguide/__init__.py\nguide/views.py\n"
        },
        "model": "tool.test",
        "pk": 127
    },
    {
        "fields": {
            "expected": "who2hire.us\napp.who2hire.us\napp.who2hire.us/login\napp.who2hire.us/opening_list\nmybookonline.org/software/Leverage/Index\nmybookonline.org/aspire\nmybookonline.org/login\nmybookonline.org/aspire/Index\nmybookonline.org/aspire/MyBook/Index\nshrinking-world.com\nseamansguide.com\nmarkseaman.org\nmarkseaman.info\nmarkseaman.info/login\nmarkseaman.info/task/time\nspiritual-things.org/spiritual/bible/Jer_17_7\n",
            "name": "robot-list",
            "output": "who2hire.us\napp.who2hire.us\napp.who2hire.us/login\napp.who2hire.us/opening_list\nmybookonline.org/software/Leverage/Index\nmybookonline.org/aspire\nmybookonline.org/login\nmybookonline.org/aspire/Index\nmybookonline.org/aspire/MyBook/Index\nshrinking-world.com\nseamansguide.com\nmarkseaman.org\nmarkseaman.info\nmarkseaman.info/login\nmarkseaman.info/task/time\nspiritual-things.org/spiritual/bible/Jer_17_7\n"
        },
        "model": "tool.test",
        "pk": 128
    },
    {
        "fields": {
            "expected": "shell(x robot show) --> 2 lines (should be between 20 and 30)",
            "name": "robot-show",
            "output": "shell(x robot show) --> 2 lines (should be between 20 and 30)"
        },
        "model": "tool.test",
        "pk": 129
    },
    {
        "fields": {
            "expected": "\n",
            "name": "robot-results",
            "output": "\n"
        },
        "model": "tool.test",
        "pk": 130
    },
    {
        "fields": {
            "expected": "Find all the URLs for the app\n\nhammer/urls.py\n\n    robots.txt$, RedirectView.as_view(url=staticfiles_storage.url('robots.txt'),  permanent=True)\n    favicon.ico$, RedirectView.as_view(url=staticfiles_storage.url('favicon.ico'), permanent=True)\n    admin/, admin.site.urls\n    health/, include(health.urls)\n    health, include(health.urls)\n    life/, include(life.urls)\n    life, include(life.urls)\n    superuser/, include(superuser.urls)\n    superuser, include(superuser.urls)\n    task/, include(tasks.urls)\n    task, include(tasks.urls)\n    , include(tool.urls)\n    unc/, include(sensei.urls)\n    unc, include(sensei.urls)\n    , include(mybook.urls)\n\nhealth/urls.py\n\n    $, HealthView\n    history$, HealthList\n    url(r'(?P<pk>\\d+)$, HealthEdit)\n\nlife/urls.py\n\n    $, LifeView\n    experience$, ExperienceView\n    year/(?P<age>[-\\d]+)$, YearView\n    (?P<age>[-\\d]+)/(?P<aspect>[\\W\\w]+)/add$, LifeAdd\n    (?P<pk>\\d+)/edit$, LifeEdit\n\nmybook/urls.py\n\n    login, login, {'template_name': 'mybook_login.html'}\n    logout$, logout, {'next_page': '/login'}\n    info/(?P<title>[\\w/\\-_.]*)$, MyBookPrivateDoc\n    seamanslog$, SeamansLog\n    spiritual/(?P<title>[\\w\\-_.]*)$, SpiritualSelect\n    (?P<title>[\\w/\\-_.]*)$, MyBookDocDisplay\n\nsensei/urls.py\n\n    register$, UncRegister\n    registered$, UncRegistered\n    reading$, UncReading\n    url(r'reviews$, UncReviews),\n    url(r'review/(?P<pk>[\\d]+)$, UncEditReview),\n    url(r'feedback/(?P<pk>[\\d]+)$, UncReviewFeedback),\n    student/(?P<id>[\\d]+)$, UncStudent\n    url-question/(?P<id>[\\d]+)$, UncUrlGameQuestion\n    url-answer/(?P<id>[\\d]+)$, UncUrlGameAnswer\n    url-game-done/(?P<id>[\\d]+)$, UncUrlGameDone\n    guide/(?P<title>[\\w/\\-_.]*)$, GuideDoc\n    (?P<title>[\\w/\\-_.]*)/slides$, UncSlidesDisplay\n    (?P<title>[\\w/\\-_.]*)$, UncDocDisplay\n\nsuperuser/urls.py\n\n    $, AdminView\n    log, LogView\n    doc/(?P<doc>[\\w/\\-_.]+)$, DocView\n    material, MaterialView\n    test, TestView\n    users$, UsersView\n    surrogate/(?P<pk>\\d+)$, SurrogateView\n    database$, DatabaseView\n\ntasks/urls.py\n\n    add$, TaskCreate\n    url(r'(?P<pk>\\d+)/edit$, TaskUpdate\n    url(r'(?P<pk>\\d+)/delete$, TaskDelete\n    (?P<pk>\\d+)$, TaskDetail\n    import$, TaskImport\n    export$, TaskExport\n    $, TaskHome\n    summary$, TimeSummary\n    time$, MyTime\n    bad$, MissingDays\n    (?P<activity>[\\w\\d\\-\\.]*)$, TaskList\n\ntool/urls.py\n\n    user_add$, UserCreate\n    user_delete/(?P<pk>\\d+)$, UserDelete\n    user_detail/(?P<pk>\\d+)$, UserDetail\n    user_edit/(?P<pk>\\d+)$, UserEdit\n    user_list$, UserList\n",
            "name": "app-url",
            "output": "Find all the URLs for the app\n\nhammer/urls.py\n\n    robots.txt$, RedirectView.as_view(url=staticfiles_storage.url('robots.txt'),  permanent=True)\n    favicon.ico$, RedirectView.as_view(url=staticfiles_storage.url('favicon.ico'), permanent=True)\n    admin/, admin.site.urls\n    health/, include(health.urls)\n    health, include(health.urls)\n    life/, include(life.urls)\n    life, include(life.urls)\n    superuser/, include(superuser.urls)\n    superuser, include(superuser.urls)\n    task/, include(tasks.urls)\n    task, include(tasks.urls)\n    , include(tool.urls)\n    unc/, include(sensei.urls)\n    unc, include(sensei.urls)\n    , include(mybook.urls)\n\nhealth/urls.py\n\n    $, HealthView\n    history$, HealthList\n    url(r'(?P<pk>\\d+)$, HealthEdit)\n\nlife/urls.py\n\n    $, LifeView\n    experience$, ExperienceView\n    year/(?P<age>[-\\d]+)$, YearView\n    (?P<age>[-\\d]+)/(?P<aspect>[\\W\\w]+)/add$, LifeAdd\n    (?P<pk>\\d+)/edit$, LifeEdit\n\nmybook/urls.py\n\n    login, login, {'template_name': 'mybook_login.html'}\n    logout$, logout, {'next_page': '/login'}\n    info/(?P<title>[\\w/\\-_.]*)$, MyBookPrivateDoc\n    seamanslog$, SeamansLog\n    spiritual/(?P<title>[\\w\\-_.]*)$, SpiritualSelect\n    (?P<title>[\\w/\\-_.]*)$, MyBookDocDisplay\n\nsensei/urls.py\n\n    register$, UncRegister\n    registered$, UncRegistered\n    reading$, UncReading\n    url(r'reviews$, UncReviews),\n    url(r'review/(?P<pk>[\\d]+)$, UncEditReview),\n    schedule$, UncSchedule\n    url(r'feedback/(?P<pk>[\\d]+)$, UncReviewFeedback),\n    student/(?P<id>[\\d]+)$, UncStudent\n    url-question/(?P<id>[\\d]+)$, UncUrlGameQuestion\n    url-answer/(?P<id>[\\d]+)$, UncUrlGameAnswer\n    url-game-done/(?P<id>[\\d]+)$, UncUrlGameDone\n    guide/(?P<title>[\\w/\\-_.]*)$, GuideDoc\n    (?P<title>[\\w/\\-_.]*)/slides$, UncSlidesDisplay\n    (?P<title>[\\w/\\-_.]*)$, UncDocDisplay\n\nsuperuser/urls.py\n\n    $, AdminView\n    log, LogView\n    doc/(?P<doc>[\\w/\\-_.]+)$, DocView\n    material, MaterialView\n    test, TestView\n    users$, UsersView\n    surrogate/(?P<pk>\\d+)$, SurrogateView\n    database$, DatabaseView\n\ntasks/urls.py\n\n    add$, TaskCreate\n    url(r'(?P<pk>\\d+)/edit$, TaskUpdate\n    url(r'(?P<pk>\\d+)/delete$, TaskDelete\n    (?P<pk>\\d+)$, TaskDetail\n    import$, TaskImport\n    export$, TaskExport\n    $, TaskHome\n    summary$, TimeSummary\n    time$, MyTime\n    bad$, MissingDays\n    (?P<activity>[\\w\\d\\-\\.]*)$, TaskList\n\ntool/urls.py\n\n    user_add$, UserCreate\n    user_delete/(?P<pk>\\d+)$, UserDelete\n    user_detail/(?P<pk>\\d+)$, UserDetail\n    user_edit/(?P<pk>\\d+)$, UserEdit\n    user_list$, UserList\n"
        },
        "model": "tool.test",
        "pk": 131
    },
    {
        "fields": {
            "expected": "shell(x wordpress host) --> 13 lines (should be between 20 and 30)",
            "name": "wordpress-host",
            "output": "shell(x wordpress host) --> 13 lines (should be between 20 and 30)"
        },
        "model": "tool.test",
        "pk": 132
    },
    {
        "fields": {
            "expected": "wordpress list\nNo directory exists\n",
            "name": "wordpress-list",
            "output": "wordpress list\nNo directory exists\n"
        },
        "model": "tool.test",
        "pk": 133
    },
    {
        "fields": {
            "expected": "booknotes list\nExecution-quotes.html\nSiteTitle\nNext100Years\nThinking-quotes.html\nEssentialism\nOriginals-quotes.html\nPresentOverPerfect\nPrinciples-quotes.html\nActivateYourBrain-quotes.html\nEssentialism-quote.html\nIndex\nExecution\nIntegrity-quotes.html\nGoodIdeas-quotes.html\nIntegrity\nEQ\nTribeOfMentors-quotes.html\n",
            "name": "booknotes-list",
            "output": "booknotes list\nExecution-quotes.html\nSiteTitle\nNext100Years\nThinking-quotes.html\nEssentialism\nOriginals-quotes.html\nPresentOverPerfect\nPrinciples-quotes.html\nActivateYourBrain-quotes.html\nEssentialism-quote.html\nIndex\nExecution\nIntegrity-quotes.html\nGoodIdeas-quotes.html\nIntegrity\nEQ\nTribeOfMentors-quotes.html\n"
        },
        "model": "tool.test",
        "pk": 134
    },
    {
        "fields": {
            "expected": "shell(x booknotes show) --> 12 lines (should be between 20 and 30)",
            "name": "booknotes-show",
            "output": "shell(x booknotes show) --> 12 lines (should be between 20 and 30)"
        },
        "model": "tool.test",
        "pk": 135
    },
    {
        "fields": {
            "expected": "shell(x booknotes content) --> 2711 lines (should be between 1500 and 1600)",
            "name": "booknotes-lines",
            "output": "shell(x booknotes content) --> 2711 lines (should be between 1500 and 1600)"
        },
        "model": "tool.test",
        "pk": 136
    },
    {
        "fields": {
            "expected": "no output",
            "name": "email",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 137
    },
    {
        "fields": {
            "expected": "Work_Modes: 54 Lines, Root: 0\nthots: 1 Lines, Root: 0\nBuilding_Software: 154 Lines, Root: 499\nThot_Recorder: 35 Lines, Root: 631\nAdvisor: 4 Lines, Root: 0\nJournal: 2 Lines, Root: 0\nCreativity: 31 Lines, Root: 1527\nWho2Hire: 130 Lines, Root: 2090\nToDo: 93 Lines, Root: 3666\nApp_Design: 157 Lines, Root: 3682\nBio_Hammer: 173 Lines, Root: 3764\nGoals: 621 Lines, Root: 3892\n",
            "name": "thot-list",
            "output": "Work_Modes: 54 Lines, Root: 0\nthots: 1 Lines, Root: 0\nBuilding_Software: 154 Lines, Root: 499\nThot_Recorder: 35 Lines, Root: 631\nAdvisor: 4 Lines, Root: 0\nJournal: 2 Lines, Root: 0\nCreativity: 31 Lines, Root: 1527\nWho2Hire: 130 Lines, Root: 2090\nToDo: 93 Lines, Root: 3666\nApp_Design: 157 Lines, Root: 3682\nBio_Hammer: 173 Lines, Root: 3764\nGoals: 621 Lines, Root: 3892\n"
        },
        "model": "tool.test",
        "pk": 138
    },
    {
        "fields": {
            "expected": "no output",
            "name": "thot-show",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 139
    },
    {
        "fields": {
            "expected": "('/aspire/', 'zmdi-home', 'Home', 'class=active')\n('/aspire/Work', 'zmdi-storage', 'Work', None)\n('/aspire/Grow', 'zmdi-accounts-alt', 'Grow', None)\n('/aspire/People', 'zmdi-comment-text-alt', 'People', None)\n('/aspire/Fun', 'zmdi-assignment-account', 'Fun', None)\n('/task/time/8', 'zmdi-time', 'Time', None)",
            "name": "mybook-menu-aspire",
            "output": "('/aspire/', 'zmdi-home', 'Home', 'class=active')\n('/aspire/Work', 'zmdi-storage', 'Work', None)\n('/aspire/Grow', 'zmdi-accounts-alt', 'Grow', None)\n('/aspire/People', 'zmdi-comment-text-alt', 'People', None)\n('/aspire/Fun', 'zmdi-assignment-account', 'Fun', None)\n('/task/time/8', 'zmdi-time', 'Time', None)"
        },
        "model": "tool.test",
        "pk": 140
    },
    {
        "fields": {
            "expected": "('/brain', 'zmdi-library', 'Exterior Brain', None)\n('/booknotes', 'zmdi-home', 'Book Notes', 'class=active')",
            "name": "mybook-menu-booknotes",
            "output": "('/brain', 'zmdi-library', 'Exterior Brain', None)\n('/booknotes', 'zmdi-home', 'Book Notes', 'class=active')"
        },
        "model": "tool.test",
        "pk": 141
    },
    {
        "fields": {
            "expected": "('/brain/Index', 'zmdi-home', 'Home', 'class=active')\n('/brain/Learn', 'zmdi-storage', 'Learn', None)\n('/brain/Plan', 'zmdi-accounts-alt', 'Plan', None)\n('/brain/Build', 'zmdi-comment-text-alt', 'Build', None)\n('/brain/Teach', 'zmdi-assignment-account', 'Teach', None)",
            "name": "mybook-menu-brain",
            "output": "('/brain/Index', 'zmdi-home', 'Home', 'class=active')\n('/brain/Learn', 'zmdi-storage', 'Learn', None)\n('/brain/Plan', 'zmdi-accounts-alt', 'Plan', None)\n('/brain/Build', 'zmdi-comment-text-alt', 'Build', None)\n('/brain/Teach', 'zmdi-assignment-account', 'Teach', None)"
        },
        "model": "tool.test",
        "pk": 142
    },
    {
        "fields": {
            "expected": "('/software/Leverage/Index', 'zmdi-home', 'Home', 'class=active')\n('/software/Leverage/Part1', 'zmdi-storage', 'Leverage', None)\n('/software/Leverage/Part2', 'zmdi-accounts-alt', 'Development', None)\n('/software/Leverage/Part3', 'zmdi-assignment-account', 'Operations', None)\n('/software/Leverage/Part4', 'zmdi-comment-text-alt', 'People', None)",
            "name": "mybook-menu-leverage",
            "output": "('/software/Leverage/Index', 'zmdi-home', 'Home', 'class=active')\n('/software/Leverage/Part1', 'zmdi-storage', 'Leverage', None)\n('/software/Leverage/Part2', 'zmdi-accounts-alt', 'Development', None)\n('/software/Leverage/Part3', 'zmdi-assignment-account', 'Operations', None)\n('/software/Leverage/Part4', 'zmdi-comment-text-alt', 'People', None)"
        },
        "model": "tool.test",
        "pk": 143
    },
    {
        "fields": {
            "expected": "Documents/Menu\nDocuments/info/Menu\nDocuments/aspire/Menu\nDocuments/seamanslog/Menu\nDocuments/Leverage/Menu\nDocuments/spiritual/Menu\nDocuments/MarkSeaman/Menu\nDocuments/guide/Teaching/Menu\nDocuments/guide/Menu\nDocuments/guide/HtmlApps/Menu\nDocuments/guide/PhpApps/Menu",
            "name": "mybook-menu-list",
            "output": "Documents/Menu\nDocuments/info/Menu\nDocuments/aspire/Menu\nDocuments/seamanslog/Menu\nDocuments/Leverage/Menu\nDocuments/spiritual/Menu\nDocuments/MarkSeaman/Menu\nDocuments/guide/Teaching/Menu\nDocuments/guide/Menu\nDocuments/guide/HtmlApps/Menu\nDocuments/guide/PhpApps/Menu"
        },
        "model": "tool.test",
        "pk": 144
    },
    {
        "fields": {
            "expected": "('http://seaman-tech.com', 'zmdi-accounts-list', 'Shrinking World', None)\n('/mybook/Index', 'zmdi-home', 'Home', None)\n('/mybook/book_list', 'zmdi-local-library', 'Books', None)\n('/mybook/author_list', 'zmdi-face', 'Authors', None)",
            "name": "mybook-menu-mybook",
            "output": "('http://seaman-tech.com', 'zmdi-accounts-list', 'Shrinking World', None)\n('/mybook/Index', 'zmdi-home', 'Home', None)\n('/mybook/book_list', 'zmdi-local-library', 'Books', None)\n('/mybook/author_list', 'zmdi-face', 'Authors', None)"
        },
        "model": "tool.test",
        "pk": 145
    },
    {
        "fields": {
            "expected": "('/software', 'zmdi-home', 'World Class Software', 'class=active')\n('/software/Leverage', 'zmdi-key', 'Leverage Principle', None)\n('/software/BestPractice', 'zmdi-face', 'Best Practice', None)",
            "name": "mybook-menu-software",
            "output": "('/software', 'zmdi-home', 'World Class Software', 'class=active')\n('/software/Leverage', 'zmdi-key', 'Leverage Principle', None)\n('/software/BestPractice', 'zmdi-face', 'Best Practice', None)"
        },
        "model": "tool.test",
        "pk": 146
    },
    {
        "fields": {
            "expected": "('/spiritual/Home', 'zmdi-home', 'Home', 'class=active')\n('/spiritual/inspire', 'zmdi-cloud-outline', 'Inspire', None)\n('/spiritual/prayers', 'zmdi-comment-outline', 'Pray', None)\n('/spiritual/bible', 'zmdi-local-library', 'Meditate', None)\n('/spiritual/reflect', 'zmdi-key', 'Reflect', None)\n('/spiritual/teaching', 'zmdi-face', 'Learn', None)",
            "name": "mybook-menu-spiritual",
            "output": "('/spiritual/Home', 'zmdi-home', 'Home', 'class=active')\n('/spiritual/inspire', 'zmdi-cloud-outline', 'Inspire', None)\n('/spiritual/prayers', 'zmdi-comment-outline', 'Pray', None)\n('/spiritual/bible', 'zmdi-local-library', 'Meditate', None)\n('/spiritual/reflect', 'zmdi-key', 'Reflect', None)\n('/spiritual/teaching', 'zmdi-face', 'Learn', None)"
        },
        "model": "tool.test",
        "pk": 147
    },
    {
        "fields": {
            "expected": "('/shrinking-world/Index', 'zmdi-home', 'Shrinking World', 'class=active')\n('/shrinking-world/Blog/Index', 'zmdi-library', 'Blog', None)\n('/shrinking-world/Staff', 'zmdi-accounts', 'Staff', None)\n('https://world-class-software.com/software/Index', 'zmdi-book', 'Training', None)",
            "name": "mybook-menu-swo",
            "output": "('/shrinking-world/Index', 'zmdi-home', 'Shrinking World', 'class=active')\n('/shrinking-world/Blog/Index', 'zmdi-library', 'Blog', None)\n('/shrinking-world/Staff', 'zmdi-accounts', 'Staff', None)\n('https://world-class-software.com/software/Index', 'zmdi-book', 'Training', None)"
        },
        "model": "tool.test",
        "pk": 148
    },
    {
        "fields": {
            "expected": "[('/aspire/', 'zmdi-home', 'Home', 'class=active'), ('/aspire/Work', 'zmdi-storage', 'Work', None), ('/aspire/Grow', 'zmdi-accounts-alt', 'Grow', None), ('/aspire/People', 'zmdi-comment-text-alt', 'People', None), ('/aspire/Fun', 'zmdi-assignment-account', 'Fun', None), ('/task/time', 'zmdi-time', 'Time', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('/guide/Index', 'zmdi-home', \"Seaman's Guide\", 'class=active'), ('/guide/HtmlApps/Index.md', 'zmdi-cloud-outline', 'HTML Apps', None), ('/guide/PhpApps/Index.md', 'zmdi-comment-outline', 'PHP Apps', None), ('/guide/Teaching/Index.md', 'zmdi-local-library', 'Teaching Tech', None), ('/Leverage', 'zmdi-assignment-account', 'Software Leverage', None)]\n[('/mybook/info', 'zmdi-home', 'Home', None), ('/info/Work', 'zmdi-storage', 'Work', None), ('/info/Grow', 'zmdi-accounts-alt', 'Grow', None), ('/info/People', 'zmdi-comment-text-alt', 'People', None), ('/info/Fun', 'zmdi-assignment-account', 'Fun', None), ('/task/time', 'zmdi-time', 'Time', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('https://seamanslog.com/seamanslog/Index', 'zmdi-trending-up', \"Seaman's Log\", None), ('https://seamanslog.com/seamanslog', 'zmdi-local-library', 'Select Topic', None), ('https://MarkSeaman.org', 'zmdi-face', 'Mark Seaman', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('/spiritual/Home', 'zmdi-home', 'Home', None), ('/spiritual/inspire', 'zmdi-cloud-outline', 'Inspire', None), ('/spiritual/prayers', 'zmdi-comment-outline', 'Pray', None), ('/spiritual/bible', 'zmdi-local-library', 'Meditate', None), ('/spiritual/reflect', 'zmdi-key', 'Reflect', None), ('/spiritual/teaching', 'zmdi-face', 'Learn', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]",
            "name": "mybook-menu",
            "output": "[('/aspire/', 'zmdi-home', 'Home', 'class=active'), ('/aspire/Work', 'zmdi-storage', 'Work', None), ('/aspire/Grow', 'zmdi-accounts-alt', 'Grow', None), ('/aspire/People', 'zmdi-comment-text-alt', 'People', None), ('/aspire/Fun', 'zmdi-assignment-account', 'Fun', None), ('/task/time', 'zmdi-time', 'Time', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('/guide/Index', 'zmdi-home', \"Seaman's Guide\", 'class=active'), ('/guide/HtmlApps/Index.md', 'zmdi-cloud-outline', 'HTML Apps', None), ('/guide/PhpApps/Index.md', 'zmdi-comment-outline', 'PHP Apps', None), ('/guide/Teaching/Index.md', 'zmdi-local-library', 'Teaching Tech', None), ('/Leverage', 'zmdi-assignment-account', 'Software Leverage', None)]\n[('/mybook/info', 'zmdi-home', 'Home', None), ('/info/Work', 'zmdi-storage', 'Work', None), ('/info/Grow', 'zmdi-accounts-alt', 'Grow', None), ('/info/People', 'zmdi-comment-text-alt', 'People', None), ('/info/Fun', 'zmdi-assignment-account', 'Fun', None), ('/task/time', 'zmdi-time', 'Time', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('https://seamanslog.com/seamanslog/Index', 'zmdi-trending-up', \"Seaman's Log\", None), ('https://seamanslog.com/seamanslog', 'zmdi-local-library', 'Select Topic', None), ('https://MarkSeaman.org', 'zmdi-face', 'Mark Seaman', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('/spiritual/Home', 'zmdi-home', 'Home', None), ('/spiritual/inspire', 'zmdi-cloud-outline', 'Inspire', None), ('/spiritual/prayers', 'zmdi-comment-outline', 'Pray', None), ('/spiritual/bible', 'zmdi-local-library', 'Meditate', None), ('/spiritual/reflect', 'zmdi-key', 'Reflect', None), ('/spiritual/teaching', 'zmdi-face', 'Learn', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]\n[('https://shrinking-world.com', 'zmdi-home', 'Shrinking World', None), ('https://seamansguide.com', 'zmdi-storage', \"Seaman's Guide\", None), ('https://MarkSeaman.org', 'zmdi-accounts-alt', 'Mark Seaman', None), ('https://seamanslog.com', 'zmdi-accounts-list', \"Seaman's Log\", None), ('https://spiritual-things.org', 'zmdi-cloud-outline', 'Spiritual Things', None)]"
        },
        "model": "tool.test",
        "pk": 149
    },
    {
        "fields": {
            "expected": "**Scriptor Error**: unknown command ['church', 'export', 'data/church.csv']\n\n\n            usage: x command \n            \n            command:\n                email       - send integrated email\n                health      - track health metrics\n                help        - show scriptor commands\n                node        - build tree structure for doc nodes\n                page        - track page content for testing\n                project     - manage project content\n                robot       - get pages from web servers\n                task        - work with tasks for user\n                thot        - thot recorder system\n                tst         - perform diff testing\n                user        - login IDs for apps\n        \n",
            "name": "church-export",
            "output": "**Scriptor Error**: unknown command ['church', 'export', 'data/church.csv']\n\n\n            usage: x command \n            \n            command:\n                email       - send integrated email\n                health      - track health metrics\n                help        - show scriptor commands\n                node        - build tree structure for doc nodes\n                page        - track page content for testing\n                project     - manage project content\n                robot       - get pages from web servers\n                task        - work with tasks for user\n                thot        - thot recorder system\n                tst         - perform diff testing\n                user        - login IDs for apps\n        \n"
        },
        "model": "tool.test",
        "pk": 150
    },
    {
        "fields": {
            "expected": "\n--------------------------------------------------------------------------------\n                              archive-files\n--------------------------------------------------------------------------------\nfiles(/home/django/Archive/MyBook-2017) --> 1 files (should be between 5657 and 5660)\nfiles(/home/django/Archive/Documents-2017) --> 1 files (should be between 1293 and 1300)\nfiles(/home/django/Archive/Documents-2016) --> 1 files (should be between 1364 and 1370)\nfiles(/home/django/Archive/Documents-2015) --> 1 files (should be between 3326 and 3326)\nfiles(/home/django/Archive/Documents-2014) --> 1 files (should be between 6095 and 6095)\nfiles(/home/django/Archive/UNC-2017) --> 1 files (should be between 14678 and 14780)\nfiles(/home/django/Archive/rcp) --> 1 files (should be between 39700 and 41000)\n",
            "name": "archive-files",
            "output": "\n--------------------------------------------------------------------------------\n                              archive-files\n--------------------------------------------------------------------------------\nfiles(/home/django/Archive/MyBook-2017) --> 1 files (should be between 5657 and 5660)\nfiles(/home/django/Archive/Documents-2017) --> 1 files (should be between 1293 and 1300)\nfiles(/home/django/Archive/Documents-2016) --> 1 files (should be between 1364 and 1370)\nfiles(/home/django/Archive/Documents-2015) --> 1 files (should be between 3326 and 3326)\nfiles(/home/django/Archive/Documents-2014) --> 1 files (should be between 6095 and 6095)\nfiles(/home/django/Archive/UNC-2017) --> 1 files (should be between 14678 and 14780)\nfiles(/home/django/Archive/rcp) --> 1 files (should be between 39700 and 41000)\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\n"
        },
        "model": "tool.test",
        "pk": 151
    },
    {
        "fields": {
            "expected": "files(/home/django/UNC) --> 1 files (should be between 67 and 67)",
            "name": "unc-files",
            "output": "files(/home/django/UNC) --> 1 files (should be between 170 and 180)"
        },
        "model": "tool.test",
        "pk": 152
    },
    {
        "fields": {
            "expected": "No directory exists\nNo directory exists",
            "name": "archive-content",
            "output": "No directory exists\nNo directory exists"
        },
        "model": "tool.test",
        "pk": 153
    },
    {
        "fields": {
            "expected": "dirs(/home/django/Archive/MyBook-2017) --> 1 dirs (should be between 504 and 507)\ndirs(/home/django/Archive/Documents-2017) --> 1 dirs (should be between 108 and 108)\ndirs(/home/django/Archive/Documents-2016) --> 1 dirs (should be between 88 and 88)\ndirs(/home/django/Archive/Documents-2015) --> 1 dirs (should be between 250 and 250)\ndirs(/home/django/Archive/Documents-2014) --> 1 dirs (should be between 947 and 947)\ndirs(/home/django/Archive/UNC-2017) --> 1 dirs (should be between 3643 and 3645)\ndirs(/home/django/Archive/rcp) --> 1 dirs (should be between 800 and 960)\n",
            "name": "archive-dirs",
            "output": "dirs(/home/django/Archive/MyBook-2017) --> 1 dirs (should be between 504 and 507)\ndirs(/home/django/Archive/Documents-2017) --> 1 dirs (should be between 108 and 108)\ndirs(/home/django/Archive/Documents-2016) --> 1 dirs (should be between 88 and 88)\ndirs(/home/django/Archive/Documents-2015) --> 1 dirs (should be between 250 and 250)\ndirs(/home/django/Archive/Documents-2014) --> 1 dirs (should be between 947 and 947)\ndirs(/home/django/Archive/UNC-2017) --> 1 dirs (should be between 3643 and 3645)\ndirs(/home/django/Archive/rcp) --> 1 dirs (should be between 800 and 960)\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\nPWD = /home/django/MyBook\n"
        },
        "model": "tool.test",
        "pk": 154
    },
    {
        "fields": {
            "expected": "no output",
            "name": "archive-nts",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 155
    },
    {
        "fields": {
            "expected": "No archive home directory on this computer",
            "name": "archive-repo",
            "output": "No archive home directory on this computer"
        },
        "model": "tool.test",
        "pk": 156
    },
    {
        "fields": {
            "expected": "# Edit this file to introduce tasks to be run by cron.\n# \n# Each task to run has to be defined through a single line\n# indicating with different fields when the task will be run\n# and what command to run for the task\n# \n# To define the time you can provide concrete values for\n# minute (m), hour (h), day of month (dom), month (mon),\n# and day of week (dow) or use '*' in these fields (for 'any').# \n# Notice that tasks will be started based on the cron's system\n# daemon's notion of time and timezones.\n# \n# Output of the crontab jobs (including errors) is sent through\n# email to the user the crontab file belongs to (unless redirected).\n# \n# For example, you can run a backup of all your user accounts\n# at 5 a.m every week with:\n# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/\n# \n# For more information see the manual pages of crontab(5) and cron(8)\n# \n# Crontab\n# m h  dom mon dow   command\n\n0  *  *  * * ~/MyBook/bin/hourly\n",
            "name": "system-cron",
            "output": "# Edit this file to introduce tasks to be run by cron.\n# \n# Each task to run has to be defined through a single line\n# indicating with different fields when the task will be run\n# and what command to run for the task\n# \n# To define the time you can provide concrete values for\n# minute (m), hour (h), day of month (dom), month (mon),\n# and day of week (dow) or use '*' in these fields (for 'any').# \n# Notice that tasks will be started based on the cron's system\n# daemon's notion of time and timezones.\n# \n# Output of the crontab jobs (including errors) is sent through\n# email to the user the crontab file belongs to (unless redirected).\n# \n# For example, you can run a backup of all your user accounts\n# at 5 a.m every week with:\n# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/\n# \n# For more information see the manual pages of crontab(5) and cron(8)\n# \n# Crontab\n# m h  dom mon dow   command\n\n0  *  *  * * ~/MyBook/bin/hourly\n"
        },
        "model": "tool.test",
        "pk": 157
    },
    {
        "fields": {
            "expected": "Tue Feb  5 11:13:57 MST 2019\n",
            "name": "tst-time",
            "output": "Tue Feb 12 07:00:10 MST 2019\n"
        },
        "model": "tool.test",
        "pk": 158
    },
    {
        "fields": {
            "expected": "No file, Test/Missing",
            "name": "doc-file-missing",
            "output": "No file, Test/Missing"
        },
        "model": "tool.test",
        "pk": 159
    },
    {
        "fields": {
            "expected": "no output",
            "name": "doc-file",
            "output": "no output"
        },
        "model": "tool.test",
        "pk": 160
    },
    {
        "fields": {
            "expected": "['Aspire', 'From Dreams to Reality']\n['Shrinking World', 'Solutions to key problems']\n['Shrinking World', 'Solutions to key problems']\n['Shrinking World', 'Solutions to key problems']\n[\"Seaman's Guide\", 'Learn New Skills']\n['Private Notes', 'Thinking Patterns and Best Practice']\n['Shrinking World', 'Solutions to key problems']\n['Shrinking World', 'Solutions to key problems']\n[\"Seaman's Log\", 'Big Ideas & Deep Thoughts']\n['Shrinking World', 'Solutions to key problems']\n['Shrinking World', 'Solutions to key problems']\n['Spiritual Things', 'Daily Inspiration']\n['Shrinking World', 'Solutions to key problems']\n['Shrinking World', 'Solutions to key problems']\n['Shrinking World', 'Solutions to key problems']",
            "name": "mybook-site-title",
            "output": "['Aspire', 'From Dreams to Reality']\n['Shrinking World', 'Solutions to key problems']\n['Shrinking World', 'Solutions to key problems']\n['Shrinking World', 'Solutions to key problems']\n[\"Seaman's Guide\", 'Learn New Skills']\n['Private Notes', 'Thinking Patterns and Best Practice']\n['Shrinking World', 'Solutions to key problems']\n['Shrinking World', 'Solutions to key problems']\n[\"Seaman's Log\", 'Big Ideas & Deep Thoughts']\n['Shrinking World', 'Solutions to key problems']\n['Shrinking World', 'Solutions to key problems']\n['Spiritual Things', 'Daily Inspiration']\n['Shrinking World', 'Solutions to key problems']\n['Shrinking World', 'Solutions to key problems']\n['Shrinking World', 'Solutions to key problems']"
        },
        "model": "tool.test",
        "pk": 161
    },
    {
        "fields": {
            "expected": "Week 0 - Mon, 08-20\nWeek 1 - Mon, 08-27\nWeek 2 - Mon, 09-03\nWeek 3 - Mon, 09-10\nWeek 4 - Mon, 09-17\nWeek 5 - Mon, 09-24\nWeek 6 - Mon, 10-01\nWeek 7 - Mon, 10-08\nWeek 8 - Mon, 10-15\nWeek 9 - Mon, 10-22\nWeek 10 - Mon, 10-29\nWeek 11 - Mon, 11-05\nWeek 12 - Mon, 11-12\nWeek 13 - Mon, 11-19\nWeek 14 - Mon, 11-26\nWeek 15 - Mon, 12-03\n",
            "name": "days-schedule",
            "output": "Week 0 - Mon, 08-20\nWeek 1 - Mon, 08-27\nWeek 2 - Mon, 09-03\nWeek 3 - Mon, 09-10\nWeek 4 - Mon, 09-17\nWeek 5 - Mon, 09-24\nWeek 6 - Mon, 10-01\nWeek 7 - Mon, 10-08\nWeek 8 - Mon, 10-15\nWeek 9 - Mon, 10-22\nWeek 10 - Mon, 10-29\nWeek 11 - Mon, 11-05\nWeek 12 - Mon, 11-12\nWeek 13 - Mon, 11-19\nWeek 14 - Mon, 11-26\nWeek 15 - Mon, 12-03\n"
        },
        "model": "tool.test",
        "pk": 162
    },
    {
        "fields": {
            "expected": "OK\nRedirect ('mybookonline.org', 'xxx', ''):  Expected: /mybook/xxx, Got: /missing/xxx\nOK\nRedirect ('mybookonline.org', 'mybook/Index', ''):  Expected: None, Got: /missing/mybook/Index\nOK\nOK\nOK\nRedirect ('mybookonline.org', 'brain', ''):  Expected: /mybook/brain, Got: /missing/brain\nRedirect ('exteriorbrain.org', 'brain', ''):  Expected: /brain/Index, Got: /missing/brain\nRedirect ('seamansguide.com', 'guide', ''):  Expected: /guide/Index, Got: None\nOK\nOK\nOK",
            "name": "mybook-redirect",
            "output": "OK\nRedirect ('mybookonline.org', 'xxx', ''):  Expected: /mybook/xxx, Got: /missing/xxx\nOK\nRedirect ('mybookonline.org', 'mybook/Index', ''):  Expected: None, Got: /missing/mybook/Index\nOK\nOK\nOK\nRedirect ('mybookonline.org', 'brain', ''):  Expected: /mybook/brain, Got: /missing/brain\nRedirect ('exteriorbrain.org', 'brain', ''):  Expected: /brain/Index, Got: /missing/brain\nRedirect ('seamansguide.com', 'guide', ''):  Expected: /guide/Index, Got: None\nOK\nOK\nOK"
        },
        "model": "tool.test",
        "pk": 163
    },
    {
        "fields": {
            "expected": "Ideas for Today (brainstorm --> decisions --> actions)\n\n-----------------------------------------\n\nWork\n\n    Plan\n        gather work in progress\n        use GTD\n        1000 goals\n        \n    Build\n        update Django and Python libraries\n        establish new standard programming context\n        limit log file\n        test private notes \n        create pycharm project for Rest\n        optimize ideas script\n\n    Learn\n        create Writers Notebook\n        continue life story\n        Organize evernotes\n\n    Teach\n        create classroom software for BACS 200\n        student registration\n        Select notes for writing topics\n        Seamans Guide to Python Apps\n\nPeople\n\n    follow up\n        Greg Brake\n        Chris Newby\n        Moe, Mehrgan\n\n    Church\n        application notes - thoughts on humility\n        perfectionism\n        overcoming negative feelings\n            turning on the light\n            receiving grace\n            Fear, Anger, Sadness, Shame\n        trust is confidence in character, competence, and compassion\n\nFun\n\n    capture regular TV series to watch\n    vinyl records\n\nGrow\n\n    prayer time\n    organize brain notes\n    think about emotional development\n    establish writing habit\n    analyze finances 2014-2018\n\nCron broken on imac\n\n",
            "name": "i-list",
            "output": "Ideas for Today (brainstorm --> decisions --> actions)\n\n-----------------------------------------\n\nWork\n\n    Plan\n        gather work in progress\n        use GTD\n        1000 goals\n        \n    Build\n        update Django and Python libraries\n        establish new standard programming context\n        limit log file\n        test private notes \n        create pycharm project for Rest\n        optimize ideas script\n        find broken links\n\n    Learn\n        create Writers Notebook\n        continue life story\n        Organize evernotes\n\n    Teach\n        create classroom software for BACS 200\n        student registration\n        Select notes for writing topics\n        Seamans Guide to Python Apps\n\nPeople\n\n    follow up\n        Greg Brake\n        Chris Newby\n        Moe, Mehrgan\n\n    Church\n        application notes - thoughts on humility\n        perfectionism\n        overcoming negative feelings\n            turning on the light\n            receiving grace\n            Fear, Anger, Sadness, Shame\n        trust is confidence in character, competence, and compassion\n\nFun\n\n    capture regular TV series to watch\n    vinyl records\n\nGrow\n\n    prayer time\n    organize brain notes\n    think about emotional development\n    establish writing habit\n    analyze finances 2014-2018\n\nCron broken on imac\nautomatic redirect for dir to dir/Index\nnot outbound email\n\n"
        },
        "model": "tool.test",
        "pk": 164
    },
    {
        "fields": {
            "expected": "Error:  File not found /home/django/MyBook/static/mybook.css",
            "name": "css",
            "output": "Error:  File not found /home/django/MyBook/static/mybook.css"
        },
        "model": "tool.test",
        "pk": 165
    },
    {
        "fields": {
            "expected": "### fix\n### test\n### extend\n### improve",
            "name": "text-findall",
            "output": "### fix\n### test\n### extend\n### improve"
        },
        "model": "tool.test",
        "pk": 166
    },
    {
        "fields": {
            "expected": "### fix\n#### list of known problems\n#### issue tracking\n### test\n#### test inventory\n#### tests needed\n### extend\n### improve",
            "name": "text-grep",
            "output": "### fix\n#### list of known problems\n#### issue tracking\n### test\n#### test inventory\n#### tests needed\n### extend\n### improve"
        },
        "model": "tool.test",
        "pk": 167
    },
    {
        "fields": {
            "expected": "[('http://example.com', 'More Examples'), ('http://example2.com', 'Even More Examples')]",
            "name": "text-links",
            "output": "[('http://example.com', 'More Examples'), ('http://example2.com', 'Even More Examples')]"
        },
        "model": "tool.test",
        "pk": 168
    },
    {
        "fields": {
            "expected": "<h3>fix</h3>\n<h3>test</h3>\n<h3>extend</h3>\n<h3>improve</h3>",
            "name": "text-select-lines",
            "output": "<h3>fix</h3>\n<h3>test</h3>\n<h3>extend</h3>\n<h3>improve</h3>"
        },
        "model": "tool.test",
        "pk": 169
    },
    {
        "fields": {
            "expected": "text_command\ntext_help\nfind_functions\n(.*)\\\nfind_links\nlink\nfind_urls\nmarkdown_list_links\nmarkdown_list_string\ntext_join\ntext_lines\ntext_match\ntext_no_match\ntext_outline\ntext_outline_string\ntext_markdown\ntext_body\ntext_replace\ntext_select\ntext_title\ntext_body\nmatch_lines\nmatch_pattern\ntransform_matches\ntext_command (options)\ntext_help (args=None)\nfind_functions (text)\n(.*)\\ (.*\\)\nfind_links (text)\nlink (anchor)\nfind_urls (text)\nmarkdown_list_links (host, lines)\nmarkdown_list_string (mylist)\ntext_join (text)\ntext_lines (text)\ntext_match (match_pattern, doc)\ntext_no_match (match_pattern, doc)\ntext_outline (text)\ntext_outline_string (outline, depth=0)\ntext_markdown (outline, depth=1)\ntext_body (lines)\ntext_replace (match_pattern, replace_pattern, doc)\ntext_select (selector, doc)\ntext_title (text)\ntext_body (text)\nmatch_lines (text, pattern)\nmatch_pattern (text, pattern)\ntransform_matches (text, match_pattern, select_pattern)",
            "name": "text-transforms",
            "output": "text_command\ntext_help\nfind_functions\n(.*)\\\nfind_links\nlink\nfind_urls\nmarkdown_list_links\nmarkdown_list_string\ntext_join\ntext_lines\ntext_match\ntext_no_match\ntext_outline\ntext_outline_string\ntext_markdown\ntext_body\ntext_replace\ntext_select\ntext_title\ntext_body\nmatch_lines\nmatch_pattern\ntransform_matches\ntext_command (options)\ntext_help (args=None)\nfind_functions (text)\n(.*)\\ (.*\\)\nfind_links (text)\nlink (anchor)\nfind_urls (text)\nmarkdown_list_links (host, lines)\nmarkdown_list_string (mylist)\ntext_join (text)\ntext_lines (text)\ntext_match (match_pattern, doc)\ntext_no_match (match_pattern, doc)\ntext_outline (text)\ntext_outline_string (outline, depth=0)\ntext_markdown (outline, depth=1)\ntext_body (lines)\ntext_replace (match_pattern, replace_pattern, doc)\ntext_select (selector, doc)\ntext_title (text)\ntext_body (text)\nmatch_lines (text, pattern)\nmatch_pattern (text, pattern)\ntransform_matches (text, match_pattern, select_pattern)"
        },
        "model": "tool.test",
        "pk": 170
    },
    {
        "fields": {
            "expected": "http://example.com\nhttp://example2.com",
            "name": "text-url",
            "output": "http://example.com\nhttp://example2.com"
        },
        "model": "tool.test",
        "pk": 171
    },
    {
        "fields": {
            "expected": "email: mark@shrinking-world.com, company: Shrinking World, user: Mark Seaman    \nemail: stacie@shrinking-world.com, company: Shrinking World, user: Stacie Seaman  ",
            "name": "text-agents",
            "output": "email: mark@shrinking-world.com, company: Shrinking World, user: Mark Seaman    \nemail: stacie@shrinking-world.com, company: Shrinking World, user: Stacie Seaman  "
        },
        "model": "tool.test",
        "pk": 172
    },
    {
        "fields": {
            "expected": "[('http://example.com', 'More Examples'), ('http://example2.com', 'Even More Examples')]",
            "name": "text-anchors",
            "output": "[('http://example.com', 'More Examples'), ('http://example2.com', 'Even More Examples')]"
        },
        "model": "tool.test",
        "pk": 173
    },
    {
        "fields": {
            "expected": "<p></p>",
            "name": "text-div",
            "output": "<p></p>"
        },
        "model": "tool.test",
        "pk": 174
    },
    {
        "fields": {
            "expected": " text_command(options)\n text_help(args=None)\n find_agents(text)\n find_anchors(text)\n find_classes(text)\n find_functions(text)\n find_links(text)\n     link(anchor)\n find_quotes(text)\n find_signatures(text)\n    pattern = r'(.*\\(.*\\))'\n find_urls(text)\n markdown_list_links(host, lines)\n markdown_list_string(mylist)\n text_join(text)\n text_lines(text)\n text_match(match_pattern, doc)\n text_no_match(match_pattern, doc)\n text_outline(text)\n text_outline_string(outline, depth=0)\n text_markdown(outline, depth=1)\n     text_body(lines)\n text_replace(doc, match_pattern, replace_pattern)\n text_title(text)\n text_body(text)\n match_lines(text, pattern)\n match_pattern(text, pattern)\n transform_matches(text, match_pattern, select_pattern)",
            "name": "text-signatures",
            "output": " text_command(options)\n text_help(args=None)\n find_agents(text)\n find_anchors(text)\n find_classes(text)\n find_functions(text)\n find_links(text)\n     link(anchor)\n find_quotes(text)\n find_signatures(text)\n    pattern = r'(.*\\(.*\\))'\n find_urls(text)\n markdown_list_links(host, lines)\n markdown_list_string(mylist)\n text_join(text)\n text_lines(text)\n text_match(match_pattern, doc)\n text_no_match(match_pattern, doc)\n text_outline(text)\n text_outline_string(outline, depth=0)\n text_markdown(outline, depth=1)\n     text_body(lines)\n text_replace(doc, match_pattern, replace_pattern)\n text_title(text)\n text_body(text)\n match_lines(text, pattern)\n match_pattern(text, pattern)\n transform_matches(text, match_pattern, select_pattern)"
        },
        "model": "tool.test",
        "pk": 175
    },
    {
        "fields": {
            "expected": "Not your time 15:00",
            "name": "doc-render",
            "output": "Not your time 15:00"
        },
        "model": "tool.test",
        "pk": 176
    },
    {
        "fields": {
            "expected": "doc_encoding_test is DISABLED",
            "name": "doc-scan",
            "output": "doc_encoding_test is DISABLED"
        },
        "model": "tool.test",
        "pk": 177
    },
    {
        "fields": {
            "expected": "OK - https://markseaman.info\nOK - https://markseaman.org\nOK - https://seamansguide.com\nOK - https://seamanslog.com\nOK - https://shrinking-world.com\nOK - https://spiritual-things.org\nOK - https://who2hire.us\nOK - https://app.who2hire.us/admin",
            "name": "page-sites",
            "output": "OK - https://markseaman.info\nOK - https://markseaman.org\nOK - https://seamansguide.com\nOK - https://seamanslog.com\nOK - https://shrinking-world.com\nOK - https://spiritual-things.org\nOK - https://who2hire.us\nOK - https://app.who2hire.us/admin"
        },
        "model": "tool.test",
        "pk": 178
    },
    {
        "fields": {
            "expected": "Log Length OK",
            "name": "log-length",
            "output": "Log Length OK"
        },
        "model": "tool.test",
        "pk": 179
    },
    {
        "fields": {
            "expected": "files(/home/django/Sensei/Documents/sensei) --> 1 files (should be between 57 and 57)",
            "name": "unc-docs",
            "output": "files(/home/django/Sensei/Documents/sensei) --> 1 files (should be between 57 and 57)"
        },
        "model": "tool.test",
        "pk": 180
    },
    {
        "fields": {
            "expected": "shell(curl -s https://shrinking-world.com/sensei/bacs200/02) --> 61 lines (should be between 320 and 343)",
            "name": "unc-site",
            "output": "shell(curl -s https://shrinking-world.com/sensei/bacs200/02) --> 61 lines (should be between 320 and 343)"
        },
        "model": "tool.test",
        "pk": 181
    },
    {
        "fields": {
            "expected": "/*  ------------------------------\n    Colors\n------------------------------\n\nBlue            -- #2196F3\nGreen           -- #4caf50\nLight Green     -- #f0fff0\n\n*/\n\n/* ------------------------\n    Elements\n */\n\na {\n    color: green;\n    font-weight: bold;\n}\n\na:hover {\n    font-weight: bolder;\n    text-decoration: underline;\n}\n\nbody {\n    font-size: 18px;\n    color: black;\n}\n\nh1, h2, h3 {\n    margin: 20px 0px;\n    padding: 10px 0px;\n}\n\nh1 {\n    font-size: 32px;\n    color: #2196F3;\n}\n\nh2 {\n    color: green;\n    background-color: white;\n    border: 2px solid green;\n    text-align: center;\n    font-size: 24px;\n    margin-bottom: 20px;\n}\n\nh3 {\n    font-size: 20px;\n}\n\nheader {\n    color: white;\n    background-color: #0a0a0a;\n    padding: 0px;\n    margin: 0px;\n}\n\nheader a {\n    color: white;\n}\n\nheader a:hover {\n    font-weight: 900;\n}\n\nheader h1 {\n    color: yellow;\n    border: none;\n    font-size: 300%;\n    text-shadow: 2px 2px 5px black;\n    padding: 0px;\n    margin: 0px;\n}\n\nheader h2 {\n    color: white;\n    background-color: inherit;\n    border: none;\n    font-size: 150%;\n    text-align: left;\n    width: 100%;\n    text-shadow: 2px 2px 5px grey;\n}\n\nhr {\n    border: solid 1px green;\n}\n\ni {\n    padding: 0px;\n    margin: 10px;\n}\n\nimg {\n    max-width: 800px;\n    box-shadow: 2px 2px 5px gray;\n    border: 1px solid white;\n    margin: 2em;\n    padding: 2em;\n}\n\npre {\n    background-color: #f0fff0;\n    color: #444;\n}\n\ntextarea {\n    min-width: 80%;\n    width: 100%;\n    margin: 0em;\n    height: 20em;\n}\n\ntd {\n    min-width: 8em;\n    margin: 10px;\n}\n\nul {\n    margin-bottom: 1em;\n}\n\nul ul {\n    margin-bottom: 1em;\n}\n\n/* -----------------------------\n    Class\n*/\n\n.btn {\n    background-color: green;\n    /*border: 2px solid white;*/\n    border-radius: 5px;\n    box-shadow: 2px 2px 5px gray;\n    color: white;\n    font-size: 18px;\n    font-weight: bolder;\n    margin: 5px;\n    padding: 5px;\n    text-align: center;\n    width: 150px;\n}\n\n.card {\n    border-radius: 10px;\n    box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.5);\n    padding: 20px;\n    /*max-width: 1000px;*/\n}\n\n.card-header h2 {\n    margin-bottom: 20px;\n}\n\n.footer {\n    margin: auto;\n    /*width: 50%;*/\n}\n\n.inset {\n    background-color: white;\n    box-shadow: -2px -2px 5px grey;\n    padding: 1em;\n    margin: 1em;\n}\n\n\n.logo {\n    border: none;\n    width: 220px;\n    height: 100px;\n    background: white url(\"/static/images/SWS_Globe_small.jpg\") no-repeat;\n    border-radius: 10px;\n    box-shadow: 2px 2px 5px gray;\n\n}\n\n\n.main-menu {\n    margin-top: 50px;\n}\n\n.panel {\n    background-color: #eeeeee;\n    box-shadow: 2px 2px 5px grey;\n    padding: 2em;\n}\n\n.show {\n    border: solid 1px yellow;\n    padding: 5px;\n}\n\n.task-notes {\n    background-color: #eeeeee;\n    box-shadow: 2px 2px 5px gray;\n}\n\n.user-btn {\n    background-color: inherit;\n    border: 2px solid white;\n    border-radius: 5px;\n    box-shadow: 2px 2px 5px gray;\n    color: white;\n    /*margin: 5px;*/\n    /*padding: 5px;*/\n    text-align: center;\n    width: 150px;\n}\n\n.user-text * {\n    color: white;\n    padding: 5px;\n    margin: 5px;\n    font-size: 12px;\n}\n\n.user-text a {\n    color: white;\n    font-size: 18px;\n}\n\n.user-text a:hover {\n    color: yellow;\n    font-weight: bolder;\n}\n",
            "name": "css-mybook",
            "output": "/*  ------------------------------\n    Colors\n------------------------------\n\nBlue            -- #2196F3\nGreen           -- #4caf50\nLight Green     -- #f0fff0\n\n*/\n\n/* ------------------------\n    Elements\n */\n\na {\n    color: green;\n    font-weight: bold;\n}\n\na:hover {\n    font-weight: bolder;\n    text-decoration: underline;\n}\n\nbody {\n    font-size: 18px;\n    color: black;\n}\n\nh1, h2, h3 {\n    margin: 20px 0px;\n    padding: 10px 0px;\n}\n\nh1 {\n    font-size: 32px;\n    color: #2196F3;\n}\n\nh2 {\n    color: green;\n    background-color: white;\n    border: 2px solid green;\n    text-align: center;\n    font-size: 24px;\n    margin-bottom: 20px;\n}\n\nh3 {\n    font-size: 20px;\n}\n\nheader {\n    color: white;\n    background-color: #0a0a0a;\n    padding: 0px;\n    margin: 0px;\n}\n\nheader a {\n    color: white;\n}\n\nheader a:hover {\n    font-weight: 900;\n}\n\nheader h1 {\n    color: yellow;\n    border: none;\n    font-size: 300%;\n    text-shadow: 2px 2px 5px black;\n    padding: 0px;\n    margin: 0px;\n}\n\nheader h2 {\n    color: white;\n    background-color: inherit;\n    border: none;\n    font-size: 150%;\n    text-align: left;\n    width: 100%;\n    text-shadow: 2px 2px 5px grey;\n}\n\nhr {\n    border: solid 1px green;\n}\n\ni {\n    padding: 0px;\n    margin: 10px;\n}\n\nimg {\n    max-width: 800px;\n    box-shadow: 2px 2px 5px gray;\n    border: 1px solid white;\n    margin: 2em;\n    padding: 2em;\n}\n\npre {\n    background-color: #f0fff0;\n    color: #444;\n}\n\ntextarea {\n    min-width: 80%;\n    width: 100%;\n    margin: 0em;\n    height: 20em;\n}\n\ntd {\n    min-width: 8em;\n    margin: 10px;\n}\n\nul {\n    margin-bottom: 1em;\n}\n\nul ul {\n    margin-bottom: 1em;\n}\n\n/* -----------------------------\n    Class\n*/\n\n.btn {\n    background-color: green;\n    /*border: 2px solid white;*/\n    border-radius: 5px;\n    box-shadow: 2px 2px 5px gray;\n    color: white;\n    font-size: 18px;\n    font-weight: bolder;\n    margin: 5px;\n    padding: 5px;\n    text-align: center;\n    width: 150px;\n}\n\n.card {\n    border-radius: 10px;\n    box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.5);\n    padding: 20px;\n    /*max-width: 1000px;*/\n}\n\n.card-header h2 {\n    margin-bottom: 20px;\n}\n\n.footer {\n    margin: auto;\n    /*width: 50%;*/\n}\n\n.inset {\n    background-color: white;\n    box-shadow: -2px -2px 5px grey;\n    padding: 1em;\n    margin: 1em;\n}\n\n\n.logo {\n    border: none;\n    width: 220px;\n    height: 100px;\n    background: white url(\"/static/images/SWS_Globe_small.jpg\") no-repeat;\n    border-radius: 10px;\n    box-shadow: 2px 2px 5px gray;\n\n}\n\n\n.main-menu {\n    margin-top: 50px;\n}\n\n.panel {\n    background-color: #eeeeee;\n    box-shadow: 2px 2px 5px grey;\n    padding: 2em;\n}\n\n.show {\n    border: solid 1px yellow;\n    padding: 5px;\n}\n\n.task-notes {\n    background-color: #eeeeee;\n    box-shadow: 2px 2px 5px gray;\n}\n\n.user-btn {\n    background-color: inherit;\n    border: 2px solid white;\n    border-radius: 5px;\n    box-shadow: 2px 2px 5px gray;\n    color: white;\n    /*margin: 5px;*/\n    /*padding: 5px;*/\n    text-align: center;\n    width: 150px;\n}\n\n.user-text * {\n    color: white;\n    padding: 5px;\n    margin: 5px;\n    font-size: 12px;\n}\n\n.user-text a {\n    color: white;\n    font-size: 18px;\n}\n\n.user-text a:hover {\n    color: yellow;\n    font-weight: bolder;\n}\n"
        },
        "model": "tool.test",
        "pk": 182
    },
    {
        "fields": {
            "expected": "/* ------------------------------\n    Elements\n------------------------------*/\n\np {\n    color: #F6B018;\n}\n\n/* ------------------------------\n    Class\n------------------------------*/\n\n.reveal a {\n    color: #F6B018;\n    background-color: #0E3D65;\n    padding: 10px;\n    margin: 10px;\n    border: 2px solid #F6B018;\n    border-radius: 30px;\n}\n\n.reveal a:hover {\n    color: #0E3D65;\n    background-color: #F6B018;\n}\n\n.reveal h1 {\n    text-transform: none;\n    font-size: 150%;\n    color: #0E3D65;\n    background-color: #F6B018;\n    border: 2px solid #0E3D65;\n}\n\n.reveal h2 {\n    color: green;\n    background-color: #F6B018;\n    border: 2px solid #0E3D65;\n    text-align: center;\n    font-size: 200%;\n    margin: 10px 20px;\n    padding: 10px 20px;\n    box-shadow: 2px 2px 5px gray;\n}\n\n.reveal h3,\n.reveal h4 {\n    text-transform: none;\n    font-size: 120%;\n    color: #0E3D65;\n}\n\n.reveal section img {\n    border: none;\n    max-width: 600px;\n    box-shadow: none;\n    text-align: center;\n    max-width: 80%;\n    max-height: 80%;\n}\n\n.reveal li {\n    color: #0E3D65;\n    font-size: 90%;\n}\n\n.reveal li li {\n    color: #F6B018;\n}\n\n.reveal p {\n    color: green;\n}\n\n.reveal pre {\n    background-color: #eee;\n    color: #444;\n    margin: 10px 100px;\n}\n\n.right {\n    float: right;\n}\n\n",
            "name": "css-slides",
            "output": "/* ------------------------------\n    Elements\n------------------------------*/\n\np {\n    color: #F6B018;\n}\n\n/* ------------------------------\n    Class\n------------------------------*/\n\n/*\n.reveal a {\n    color: #F6B018;\n    background-color: #0E3D65;\n    padding: 10px;\n    margin: 10px;\n    border: 2px solid #F6B018;\n    border-radius: 30px;\n}\n\n.reveal a:hover {\n    color: #0E3D65;\n    background-color: #F6B018;\n}\n*/\n\n.reveal h1 {\n    text-transform: none;\n    font-size: 150%;\n    color: #0E3D65;\n    background-color: #F6B018;\n    border: 2px solid #0E3D65;\n}\n\n.reveal h2 {\n    color: green;\n    background-color: #F6B018;\n    border: 2px solid #0E3D65;\n    text-align: center;\n    font-size: 200%;\n    margin: 10px 20px;\n    padding: 10px 20px;\n    box-shadow: 2px 2px 5px gray;\n}\n\n.reveal h3,\n.reveal h4 {\n    text-transform: none;\n    font-size: 120%;\n    color: #0E3D65;\n}\n\n.reveal section img {\n    border: none;\n    max-width: 600px;\n    box-shadow: none;\n    text-align: center;\n    max-width: 80%;\n    max-height: 80%;\n}\n\n.reveal li {\n    color: #0E3D65;\n    font-size: 90%;\n}\n\n.reveal li li {\n    color: #F6B018;\n}\n\n.reveal p {\n    color: green;\n}\n\n.reveal pre {\n    background-color: #eee;\n    color: #444;\n    margin: 10px 100px;\n}\n\n.right {\n    float: right;\n}\n\n"
        },
        "model": "tool.test",
        "pk": 183
    },
    {
        "fields": {
            "expected": "Error:  File not found /home/django/MyBook/static/css/sensei.css",
            "name": "css-unc",
            "output": "Error:  File not found /home/django/MyBook/static/css/sensei.css"
        },
        "model": "tool.test",
        "pk": 184
    },
    {
        "fields": {
            "expected": "total 404\n-rw-rw-r-- 1 django django  5598 Dec 22 13:52 app.py\n-rw-rw-r-- 1 django django  7669 Dec 29 12:40 app.pyc\n-rw-rw-r-- 1 django django  3660 Jan 24 17:30 bash-alias\n-rw-rw-r-- 1 django django  3683 Dec 14 10:33 bash-django-profile\n-rwxrwxr-x 1 django django  2752 Dec 14 10:33 bash-prompt\n-rwxrwxr-x 1 django django   812 Jan 24 10:29 bashrc\n-rwxrwxr-x 1 django django   127 Dec 14 10:33 bashrc-blue\n-rw-rw-r-- 1 django django   315 Jan 27 08:00 bashrc-win\n-rw-rw-r-- 1 django django   145 Jan 27 08:00 bashrc-win-pip\n-rw-rw-r-- 1 django django  2292 Dec 24 08:00 booknotes.py\n-rw-rw-r-- 1 django django  3250 Dec 29 12:40 booknotes.pyc\n-rw-rw-r-- 1 django django 14218 Dec 29 12:40 book.pyc\n-rwxrwxr-x 1 django django  1083 Jan 15 14:05 chapter.py\n-rwxrwxr-x 1 django django   156 Dec 14 10:33 cptree\n-rw-rw-r-- 1 django django  4042 Jan  9 08:01 data.py\n-rw-rw-r-- 1 django django  5435 Jan  9 08:06 data.pyc\n-rw-rw-r-- 1 django django  2933 Jan  8 14:27 days.py\n-rw-rw-r-- 1 django django  4186 Jan  8 14:27 days.pyc\n-rw-rw-r-- 1 django django   728 Jan  8 14:27 diagrams.py\n-rwxrwxr-x 1 django django   101 Dec 14 10:33 dj\n-rw-rw-r-- 1 django django  9282 Jan 15 15:42 doc.py\n-rw-rw-r-- 1 django django 10720 Dec 29 12:40 doc.pyc\n-rwxrwxr-x 1 django django   470 Dec 14 10:33 e\n-rwxrwxr-x 1 django django  4418 Dec 14 10:33 files.py\n-rw-rw-r-- 1 django django  6614 Dec 29 12:30 files.pyc\n-rwxrwxr-x 1 django django   321 Jan 25 09:10 hourly\n-rw-rw-r-- 1 django django  2221 Dec 14 10:33 hourly.py\n-rw-rw-r-- 1 django django  2960 Dec 29 12:40 hourly.pyc\n-rw-rw-r-- 1 django django 12486 Dec 14 10:33 hours.py\n-rw-rw-r-- 1 django django     0 Dec 14 10:33 i\n-rw-rw-r-- 1 django django     0 Dec 14 10:33 __init__.py\n-rw-rw-r-- 1 django django   122 Dec 29 12:30 __init__.pyc\n-rw-rw-r-- 1 django django   995 Dec 27 08:00 i.py\n-rw-rw-r-- 1 django django  1745 Dec 29 12:40 i.pyc\n-rwxrwxr-x 1 django django    36 Dec 14 10:33 lc\n-rw-rw-r-- 1 django django  2267 Dec 14 10:33 life.py\n-rw-rw-r-- 1 django django   937 Dec 14 10:33 log.py\n-rw-rw-r-- 1 django django  1787 Dec 29 12:40 log.pyc\n-rw-rw-r-- 1 django django  4624 Dec 14 10:33 music.py\n-rw-rw-r-- 1 django django  5942 Dec 29 12:40 music.pyc\n-rw-rw-r-- 1 django django     0 Dec 14 10:33 n.py\n-rwxrwxr-x 1 django django  4237 Jan 22 08:49 ntsh.py\n-rw-rw-r-- 1 django django  2370 Jan 24 13:41 ops.py\n-rw-rw-r-- 1 django django  3422 Jan 24 13:54 ops.pyc\n-rw-r--r-- 1 django django  2029 Jan 15 13:20 pandoc.pyc\n-rwxrwxr-x 1 django django    78 Dec 14 10:33 path\n-rwxrwxr-x 1 django django   226 Dec 14 10:33 pe\n-rwxrwxr-x 1 django django    84 Dec 14 10:33 psg\n-rwxrwxr-x 1 django django   100 Jan 17 18:38 pshell\ndrwxrwxr-x 2 django django  4096 Dec 14 12:37 __pycache__\n-rwxrwxr-x 1 django django   137 Dec 14 10:33 rbg\n-rwxrwxr-x 1 django django  2296 Dec 14 10:33 resize.py\n-rw-rw-r-- 1 django django  4733 Dec 29 12:40 seamanslog.pyc\n-rwxrwxr-x 1 django django   442 Dec 14 10:33 setup-cron\n-rwxrwxr-x 1 django django   180 Dec 14 10:33 setup-simple\n-rw-rw-r-- 1 django django  5912 Dec 14 10:33 shell.py\n-rw-rw-r-- 1 django django  8154 Dec 29 12:30 shell.pyc\n-rw-rw-r-- 1 django django  1971 Jan 27 08:00 switches.py\n-rw-rw-r-- 1 django django  2207 Jan 27 08:00 switches.pyc\n-rw-rw-r-- 1 django django  5345 Dec 14 10:33 text.py\n-rw-rw-r-- 1 django django  7527 Dec 29 12:40 text.pyc\n-rw-rw-r-- 1 django django  1004 Jan 17 15:49 todo.py\n-rw-rw-r-- 1 django django  1531 Jan 17 18:38 todo.pyc\n-rw-rw-r-- 1 django django  1704 Dec 14 10:33 tool.py\n-rw-rw-r-- 1 django django  2377 Dec 29 12:40 tool.pyc\n-rw-rw-r-- 1 django django     0 Dec 14 10:33 user.py\n-rw-rw-r-- 1 django django  2540 Jan 18 11:32 vc.py\n-rw-rw-r-- 1 django django  3769 Jan 18 11:35 vc.pyc\n-rw-rw-r-- 1 django django   272 Dec 23 06:56 venv\n-rw-rw-r-- 1 django django  1044 Jan  6 08:58 web.py\n-rw-r--r-- 1 django django  1569 Jan  6 08:58 web.pyc\n-rw-rw-r-- 2 django django   596 Dec 14 10:33 welcome\n-rw-rw-r-- 1 django django   246 Dec 14 10:33 welcome-blue\n-rw-rw-r-- 1 django django   132 Dec 17 07:32 welcome-imac\n-rw-rw-r-- 1 django django   231 Dec 14 10:33 welcome-macbook\n-rw-rw-r-- 2 django django   596 Dec 14 10:33 welcome-mybook\n-rw-rw-r-- 1 django django   624 Dec 14 10:33 welcome-production\n-rw-rw-r-- 1 django django   528 Dec 14 10:33 welcome-staging\n-rw-rw-r-- 1 django django  1605 Dec 14 10:33 wordpress.py\n-rw-rw-r-- 1 django django  2364 Dec 29 12:40 wordpress.pyc\n-rwxrwxr-x 1 django django  3340 Jan 15 15:42 x.py\n",
            "name": "system-bin",
            "output": "total 408\n-rw-rw-r-- 1 django django  5598 Dec 22 13:52 app.py\n-rw-rw-r-- 1 django django  7669 Dec 29 12:40 app.pyc\n-rw-rw-r-- 1 django django  3676 Feb 10 08:00 bash-alias\n-rw-rw-r-- 1 django django  3683 Dec 14 10:33 bash-django-profile\n-rwxrwxr-x 1 django django  2752 Dec 14 10:33 bash-prompt\n-rwxrwxr-x 1 django django   812 Jan 24 10:29 bashrc\n-rwxrwxr-x 1 django django   127 Dec 14 10:33 bashrc-blue\n-rw-rw-r-- 1 django django   687 Feb  5 16:46 bashrc-cron\n-rw-rw-r-- 1 django django   315 Jan 27 08:00 bashrc-win\n-rw-rw-r-- 1 django django   145 Jan 27 08:00 bashrc-win-pip\n-rw-rw-r-- 1 django django  2292 Dec 24 08:00 booknotes.py\n-rw-rw-r-- 1 django django  3250 Dec 29 12:40 booknotes.pyc\n-rw-rw-r-- 1 django django 14218 Dec 29 12:40 book.pyc\n-rwxrwxr-x 1 django django  1083 Jan 15 14:05 chapter.py\n-rwxrwxr-x 1 django django   156 Dec 14 10:33 cptree\n-rw-rw-r-- 1 django django  4042 Jan  9 08:01 data.py\n-rw-rw-r-- 1 django django  5435 Jan  9 08:06 data.pyc\n-rw-rw-r-- 1 django django  2933 Jan  8 14:27 days.py\n-rw-rw-r-- 1 django django  4186 Jan  8 14:27 days.pyc\n-rw-rw-r-- 1 django django   728 Jan  8 14:27 diagrams.py\n-rwxrwxr-x 1 django django   101 Dec 14 10:33 dj\n-rw-rw-r-- 1 django django  9282 Jan 15 15:42 doc.py\n-rw-rw-r-- 1 django django 10720 Dec 29 12:40 doc.pyc\n-rwxrwxr-x 1 django django   470 Dec 14 10:33 e\n-rwxrwxr-x 1 django django  4418 Dec 14 10:33 files.py\n-rw-rw-r-- 1 django django  6614 Dec 29 12:30 files.pyc\n-rwxrwxr-x 1 django django   340 Feb  5 16:46 hourly\n-rw-rw-r-- 1 django django  2223 Feb  5 16:46 hourly.py\n-rw-rw-r-- 1 django django  2962 Feb  5 17:00 hourly.pyc\n-rw-rw-r-- 1 django django 12486 Dec 14 10:33 hours.py\n-rw-rw-r-- 1 django django     0 Dec 14 10:33 i\n-rw-rw-r-- 1 django django     0 Dec 14 10:33 __init__.py\n-rw-rw-r-- 1 django django   122 Dec 29 12:30 __init__.pyc\n-rw-rw-r-- 1 django django   995 Dec 27 08:00 i.py\n-rw-rw-r-- 1 django django  1745 Dec 29 12:40 i.pyc\n-rwxrwxr-x 1 django django    36 Dec 14 10:33 lc\n-rw-rw-r-- 1 django django  2267 Dec 14 10:33 life.py\n-rw-rw-r-- 1 django django   937 Dec 14 10:33 log.py\n-rw-rw-r-- 1 django django  1787 Dec 29 12:40 log.pyc\n-rw-rw-r-- 1 django django  4624 Dec 14 10:33 music.py\n-rw-rw-r-- 1 django django  5942 Dec 29 12:40 music.pyc\n-rwxrwxr-x 1 django django  4222 Feb 10 08:00 ntsh.py\n-rw-rw-r-- 1 django django  2370 Jan 24 13:41 ops.py\n-rw-rw-r-- 1 django django  3422 Jan 24 13:54 ops.pyc\n-rw-r--r-- 1 django django  2029 Jan 15 13:20 pandoc.pyc\n-rwxrwxr-x 1 django django    78 Dec 14 10:33 path\n-rwxrwxr-x 1 django django   226 Dec 14 10:33 pe\n-rwxrwxr-x 1 django django    84 Dec 14 10:33 psg\n-rwxrwxr-x 1 django django   100 Jan 17 18:38 pshell\ndrwxrwxr-x 2 django django  4096 Dec 14 12:37 __pycache__\n-rwxrwxr-x 1 django django   137 Dec 14 10:33 rbg\n-rwxrwxr-x 1 django django  2296 Dec 14 10:33 resize.py\n-rw-rw-r-- 1 django django  4733 Dec 29 12:40 seamanslog.pyc\n-rwxrwxr-x 1 django django   442 Dec 14 10:33 setup-cron\n-rwxrwxr-x 1 django django   180 Dec 14 10:33 setup-simple\n-rw-rw-r-- 1 django django  5912 Dec 14 10:33 shell.py\n-rw-rw-r-- 1 django django  8154 Dec 29 12:30 shell.pyc\n-rw-rw-r-- 1 django django  1971 Jan 27 08:00 switches.py\n-rw-rw-r-- 1 django django  2207 Jan 27 08:00 switches.pyc\n-rw-rw-r-- 1 django django  5345 Dec 14 10:33 text.py\n-rw-rw-r-- 1 django django  7527 Dec 29 12:40 text.pyc\n-rw-rw-r-- 1 django django  1004 Jan 17 15:49 todo.py\n-rw-rw-r-- 1 django django  1531 Jan 17 18:38 todo.pyc\n-rw-rw-r-- 1 django django  1704 Dec 14 10:33 tool.py\n-rw-rw-r-- 1 django django  2377 Dec 29 12:40 tool.pyc\n-rw-rw-r-- 1 django django     0 Dec 14 10:33 user.py\n-rw-rw-r-- 1 django django  2540 Jan 18 11:32 vc.py\n-rw-rw-r-- 1 django django  3769 Jan 18 11:35 vc.pyc\n-rw-rw-r-- 1 django django   272 Dec 23 06:56 venv\n-rw-rw-r-- 1 django django  1044 Jan  6 08:58 web.py\n-rw-r--r-- 1 django django  1569 Jan  6 08:58 web.pyc\n-rw-rw-r-- 2 django django   596 Dec 14 10:33 welcome\n-rw-rw-r-- 1 django django   246 Dec 14 10:33 welcome-blue\n-rw-rw-r-- 1 django django   132 Dec 17 07:32 welcome-imac\n-rw-rw-r-- 1 django django   231 Dec 14 10:33 welcome-macbook\n-rw-rw-r-- 2 django django   596 Dec 14 10:33 welcome-mybook\n-rw-rw-r-- 1 django django   624 Dec 14 10:33 welcome-production\n-rw-rw-r-- 1 django django   528 Dec 14 10:33 welcome-staging\n-rw-rw-r-- 1 django django  1605 Dec 14 10:33 wordpress.py\n-rw-rw-r-- 1 django django  2364 Dec 29 12:40 wordpress.pyc\n-rwxrwxr-x 1 django django  3377 Feb  6 08:40 x.py\n"
        },
        "model": "tool.test",
        "pk": 185
    },
    {
        "fields": {
            "expected": "LESSOPEN=| /bin/lesspipe %s\nmb=/home/django/Archive/MyBook-2018\nMAIL=/var/mail/django\nSSH_CLIENT=73.169.123.42 65172 22\nUSER=django\nblue=uncobacs@unco-bacs.org\nmbw=/home/django/Archive/rcp/mbw\nmd=/home/django/Archive/Documents-2018\nSHLVL=1\ns=/home/django/Sensei\nOLDPWD=/home/django\nHOME=/home/django\nSSH_TTY=/dev/pts/0\nunc=/home/django/UNC\nLOGNAME=django\n_=/bin/sh\nXDG_SESSION_ID=70365\nTERM=xterm-256color\nmacbook=markseaman@10.0.0.167\nHISTCONTROL=ignoreboth\nPATH=/home/django/bin:/home/django/.local/bin:/home/django/MyBook:/home/django/MyBook/bin:/bin:/sbin:/usr/local/sbin:/usr/local/bin:/opt/local/bin:/usr/bin:/usr/local/mysql/bin\nXDG_RUNTIME_DIR=/run/user/999\nimac=seaman@10.0.0.48\nLANG=en_US.UTF-8\nLS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:\nSHELL=/bin/bash\nLESSCLOSE=/bin/lesspipe %s %s\np=/home/django/MyBook\nCLICOLOR=true\nPWD=/home/django/MyBook\nSSH_CONNECTION=73.169.123.42 65172 138.68.234.96 22\nDJANGO_SETTINGS_MODULE=hammer.settings\nTZ=US/Mountain\n",
            "name": "system-env",
            "output": "mb=/home/django/Archive/MyBook-2018\nblue=uncobacs@unco-bacs.org\nmbw=/home/django/Archive/rcp/mbw\nmd=/home/django/Archive/Documents-2018\nSHLVL=1\ns=/home/django/Sensei\nOLDPWD=/home/django/MyBook\nHOME=/home/django\nunc=/home/django/UNC\nLOGNAME=django\n_=/usr/bin/python\nmacbook=markseaman@10.0.0.167\nPATH=/home/django/MyBook:/home/django/MyBook/bin:/bin:/sbin:/usr/local/sbin:/usr/local/bin:/opt/local/bin:/usr/bin:/usr/local/mysql/bin\nimac=seaman@10.0.0.48\nLANG=en_US.UTF-8\nSHELL=/bin/sh\np=/home/django/MyBook\nCLICOLOR=true\nPWD=/home/django/MyBook\nDJANGO_SETTINGS_MODULE=hammer.settings\nTZ=US/Mountain\n"
        },
        "model": "tool.test",
        "pk": 186
    }
]
